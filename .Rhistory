install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("manlius/muxViz")
remove.packages("muxViz")
devtools::install_github("manlius/muxViz")
library(htmltools)
library(htmltools)
install.packages("htmltools")
detach("package:htmltools", unload = TRUE)
install.packages("htmltools")
devtools::install_github("manlius/muxViz")
install.packages("htmltools")
devtools::install_github("manlius/muxViz")
library(emln)#multilayer package
#load packages
library(igraph)
library(dplyr)
library(tidyverse)
library(emln)#multilayer package
library(readr)
library(ggplot2)
library(cowplot)
setwd("/Users/agustin/Desktop/Papers/Norwood_farm/Norwood_Tinio")
source("/Users/agustin/Desktop/Papers/Norwood_farm/Norwood_Tinio/Exploratory/Scenario_ES/functions.R")
#upload and prepare dataframe
direct_ES<- read.csv("Data/direct_ES_sim_CP.csv", sep =",")
direct_ES$management <- factor(direct_ES$management, levels = c("E", "SE", "M", "SI","I","IM")) #change order of factors
### Plot of proportions of richness direct and indirect E(D)S retained
color_services <-tibble(
services = unique(direct_ES$services),
color = c('#1b9e77','#d95f02','#7570b3','#e7298a','#2c7fb8','#e6ab02','#a6761d'))
#Empirical
Prop_dir_emp<-direct_ES %>% filter(iteration == "Emp") %>% group_by(management,services) %>%
mutate(tot = n()) %>% ungroup() %>%
group_by(services) %>%
mutate(prop = tot/max(tot)) %>%  #prop of E(D)S rtained across habitat management
dplyr::select(management,services,tot,prop) %>%
unique() %>% rename("Prop_mean" = "prop") %>% mutate(type = "Emp")
# Value of empirical
values_emp<- Prop_dir_emp %>% filter (management == "E") %>% select(management,tot)
#Simulations
Prop_dir_sim<-direct_ES %>% filter(iteration != "Emp") %>% group_by(management,iteration,services) %>%
mutate(tot = n(),
tot_emp = case_when( #Values of denominator
services == "Crop production"~ 6,
services == "Pollination" ~ 117,
services == "Crop damage"~ 15,
services == "Pest control"~ 28,
services == "Seed dispersal" ~ 5,
services == "Butterfly watching"~ 16,
services == "Bird watching"~ 7 )) %>% ungroup() %>%
group_by(services) %>%
mutate(prop = tot/tot_emp) %>%  #prop of E(D)S rtained across habitat management per iteration and habitat management
dplyr::select(management,iteration,services,tot,prop) %>%
unique() %>% group_by(management,services) %>% summarise(Prop_mean = mean(prop)) %>%
mutate(type = "Null")
#join
Prop_direct_sim<-rbind(Prop_dir_emp,Prop_dir_sim)
#Plot
prop_EDS_direct <- Prop_direct_sim%>% ggplot(aes(x = management, y = Prop_mean)) +
geom_boxplot(aes(colour = type), outlier.shape = NA, size = 0.8, position = position_dodge(width = 1.02)) +
geom_point(aes(fill = factor(services), shape = factor(ifelse(type == "Null", 24, 21))),
position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.4),
size = 2.4, stroke = 1, show.legend = c(fill = TRUE, shape = FALSE, colour = FALSE)) +
scale_fill_manual(values = color_services$color, name = "E(D)S") +
scale_shape_manual(values = c(21, 24)) +
scale_color_manual(values = c("black","firebrick"), name = "Type")+
scale_y_continuous(name = "Prop. of direct E(D)S retained", limits = c(0, 1)) +
scale_x_discrete(name = "Habitat conversion")+
guides(fill = guide_legend(order = 1,override.aes = list(shape=21)),
colour = guide_legend(order = 2),
shape = "none") +
theme(panel.background = element_rect(fill = "white"),
panel.grid.major=element_line(color = "gray"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13, color='black'),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =14),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 14, color = "black"),
legend.text = element_text(size = 12))
prop_EDS_direct
#Plot
prop_EDS_direct <- Prop_direct_sim%>% ggplot(aes(x = management, y = Prop_mean)) +
geom_boxplot(aes(colour = type), outlier.shape = NA, size = 0.8, position = position_dodge(width = 1.02)) +
geom_point(aes(fill = factor(services), shape = factor(ifelse(type == "Null", 24, 21))),
position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.5),
size = 2.4, stroke = 1, show.legend = c(fill = TRUE, shape = FALSE, colour = FALSE)) +
scale_fill_manual(values = color_services$color, name = "E(D)S") +
scale_shape_manual(values = c(21, 24)) +
scale_color_manual(values = c("black","firebrick"), name = "Type")+
scale_y_continuous(name = "Prop. of direct E(D)S retained", limits = c(0, 1)) +
scale_x_discrete(name = "Habitat conversion")+
guides(fill = guide_legend(order = 1,override.aes = list(shape=21)),
colour = guide_legend(order = 2),
shape = "none") +
theme(panel.background = element_rect(fill = "white"),
panel.grid.major=element_line(color = "gray"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13, color='black'),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =14),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 14, color = "black"),
legend.text = element_text(size = 12))
prop_EDS_direct
#Plot
prop_EDS_direct <- Prop_direct_sim%>% ggplot(aes(x = management, y = Prop_mean)) +
geom_boxplot(aes(colour = type), outlier.shape = NA, size = 0.8, position = position_dodge(width = 1.02)) +
geom_point(aes(fill = factor(services), shape = factor(ifelse(type == "Null", 24, 21))),
position = position_jitterdodge(jitter.width = 0.5, dodge.width = 0.5),
size = 2.4, stroke = 1, show.legend = c(fill = TRUE, shape = FALSE, colour = FALSE)) +
scale_fill_manual(values = color_services$color, name = "E(D)S") +
scale_shape_manual(values = c(21, 24)) +
scale_color_manual(values = c("black","firebrick"), name = "Type")+
scale_y_continuous(name = "Prop. of direct E(D)S retained", limits = c(0, 1)) +
scale_x_discrete(name = "Habitat conversion")+
guides(fill = guide_legend(order = 1,override.aes = list(shape=21)),
colour = guide_legend(order = 2),
shape = "none") +
theme(panel.background = element_rect(fill = "white"),
panel.grid.major=element_line(color = "gray"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13, color='black'),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =14),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 14, color = "black"),
legend.text = element_text(size = 12))
prop_EDS_direct
#Plot
prop_EDS_direct <- Prop_direct_sim%>% ggplot(aes(x = management, y = Prop_mean)) +
geom_boxplot(aes(colour = type), outlier.shape = NA, size = 0.8, position = position_dodge(width = 1.02)) +
geom_point(aes(fill = factor(services), shape = factor(ifelse(type == "Null", 24, 21))),
position = position_jitterdodge(jitter.width = 1, dodge.width = 0.5),
size = 2.4, stroke = 1, show.legend = c(fill = TRUE, shape = FALSE, colour = FALSE)) +
scale_fill_manual(values = color_services$color, name = "E(D)S") +
scale_shape_manual(values = c(21, 24)) +
scale_color_manual(values = c("black","firebrick"), name = "Type")+
scale_y_continuous(name = "Prop. of direct E(D)S retained", limits = c(0, 1)) +
scale_x_discrete(name = "Habitat conversion")+
guides(fill = guide_legend(order = 1,override.aes = list(shape=21)),
colour = guide_legend(order = 2),
shape = "none") +
theme(panel.background = element_rect(fill = "white"),
panel.grid.major=element_line(color = "gray"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13, color='black'),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =14),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 14, color = "black"),
legend.text = element_text(size = 12))
prop_EDS_direct
#Plot
prop_EDS_direct <- Prop_direct_sim%>% ggplot(aes(x = management, y = Prop_mean)) +
geom_boxplot(aes(colour = type), outlier.shape = NA, size = 0.8, position = position_dodge(width = 1.02)) +
geom_point(aes(fill = factor(services), shape = factor(ifelse(type == "Null", 24, 21))),
position = position_jitterdodge(jitter.width = 1.2, dodge.width = 0.5),
size = 2.4, stroke = 1, show.legend = c(fill = TRUE, shape = FALSE, colour = FALSE)) +
scale_fill_manual(values = color_services$color, name = "E(D)S") +
scale_shape_manual(values = c(21, 24)) +
scale_color_manual(values = c("black","firebrick"), name = "Type")+
scale_y_continuous(name = "Prop. of direct E(D)S retained", limits = c(0, 1)) +
scale_x_discrete(name = "Habitat conversion")+
guides(fill = guide_legend(order = 1,override.aes = list(shape=21)),
colour = guide_legend(order = 2),
shape = "none") +
theme(panel.background = element_rect(fill = "white"),
panel.grid.major=element_line(color = "gray"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13, color='black'),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =14),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 14, color = "black"),
legend.text = element_text(size = 12))
prop_EDS_direct
#Plot
prop_EDS_direct <- Prop_direct_sim%>% ggplot(aes(x = management, y = Prop_mean)) +
geom_boxplot(aes(colour = type), outlier.shape = NA, size = 0.8, position = position_dodge(width = 1.02)) +
geom_point(aes(fill = factor(services), shape = factor(ifelse(type == "Null", 24, 21))),
position = position_jitterdodge(jitter.width = 1.2, dodge.width = 0.5),
size = 2.4, stroke = 1, show.legend = c(fill = TRUE, shape = FALSE, colour = FALSE)) +
scale_fill_manual(values = color_services$color, name = "E(D)S") +
scale_shape_manual(values = c(21, 24)) +
scale_color_manual(values = c("black","firebrick"), name = "Type")+
scale_y_continuous(name = "Prop. of direct E(D)S retained", limits = c(0, 1)) +
scale_x_discrete(name = "Habitat conversion")+
guides(fill = guide_legend(order = 1,override.aes = list(shape=21)),
colour = guide_legend(order = 2),
shape = "none") +
theme(panel.background = element_rect(fill = "white"),
panel.grid.major=element_line(color = "gray"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13, color='black'),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =14),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 14, color = "black"),
legend.text = element_text(size = 12))
prop_EDS_direct
ggsave("Graphs/Direct_ES_sim_CP_final.png", width = 7, height = 5, dpi = 300)
#Plot
prop_EDS_direct <- Prop_direct_sim%>% ggplot(aes(x = management, y = Prop_mean)) +
geom_boxplot(aes(colour = type), outlier.shape = NA, size = 0.8, position = position_dodge(width = 1.02)) +
geom_point(aes(fill = factor(services), shape = factor(ifelse(type == "Null", 24, 21))),
position = position_jitterdodge(jitter.width = 1.6, dodge.width = 1),
size = 2.4, stroke = 1, show.legend = c(fill = TRUE, shape = FALSE, colour = FALSE)) +
scale_fill_manual(values = color_services$color, name = "E(D)S") +
scale_shape_manual(values = c(21, 24)) +
scale_color_manual(values = c("black","firebrick"), name = "Type")+
scale_y_continuous(name = "Prop. of direct E(D)S retained", limits = c(0, 1)) +
scale_x_discrete(name = "Habitat conversion")+
guides(fill = guide_legend(order = 1,override.aes = list(shape=21)),
colour = guide_legend(order = 2),
shape = "none") +
theme(panel.background = element_rect(fill = "white"),
panel.grid.major=element_line(color = "gray"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13, color='black'),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =14),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 14, color = "black"),
legend.text = element_text(size = 12))
prop_EDS_direct
#Plot
prop_EDS_direct <- Prop_direct_sim%>% ggplot(aes(x = management, y = Prop_mean)) +
geom_boxplot(aes(colour = type), outlier.shape = NA, size = 0.8, position = position_dodge(width = 1.02)) +
geom_point(aes(fill = factor(services), shape = factor(ifelse(type == "Null", 24, 21))),
position = position_jitterdodge(jitter.width = 1.2, dodge.width = 1),
size = 2.4, stroke = 1, show.legend = c(fill = TRUE, shape = FALSE, colour = FALSE)) +
scale_fill_manual(values = color_services$color, name = "E(D)S") +
scale_shape_manual(values = c(21, 24)) +
scale_color_manual(values = c("black","firebrick"), name = "Type")+
scale_y_continuous(name = "Prop. of direct E(D)S retained", limits = c(0, 1)) +
scale_x_discrete(name = "Habitat conversion")+
guides(fill = guide_legend(order = 1,override.aes = list(shape=21)),
colour = guide_legend(order = 2),
shape = "none") +
theme(panel.background = element_rect(fill = "white"),
panel.grid.major=element_line(color = "gray"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13, color='black'),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =14),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 14, color = "black"),
legend.text = element_text(size = 12))
prop_EDS_direct
#Plot
prop_EDS_direct <- Prop_direct_sim%>% ggplot(aes(x = management, y = Prop_mean)) +
geom_boxplot(aes(colour = type), outlier.shape = NA, size = 0.8, position = position_dodge(width = 1.02)) +
geom_point(aes(fill = factor(services), shape = factor(ifelse(type == "Null", 24, 21))),
position = position_jitterdodge(jitter.width = 1.2, dodge.width = 0.8),
size = 2.4, stroke = 1, show.legend = c(fill = TRUE, shape = FALSE, colour = FALSE)) +
scale_fill_manual(values = color_services$color, name = "E(D)S") +
scale_shape_manual(values = c(21, 24)) +
scale_color_manual(values = c("black","firebrick"), name = "Type")+
scale_y_continuous(name = "Prop. of direct E(D)S retained", limits = c(0, 1)) +
scale_x_discrete(name = "Habitat conversion")+
guides(fill = guide_legend(order = 1,override.aes = list(shape=21)),
colour = guide_legend(order = 2),
shape = "none") +
theme(panel.background = element_rect(fill = "white"),
panel.grid.major=element_line(color = "gray"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13, color='black'),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =14),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 14, color = "black"),
legend.text = element_text(size = 12))
prop_EDS_direct
#Plot
prop_EDS_direct <- Prop_direct_sim%>% ggplot(aes(x = management, y = Prop_mean)) +
geom_boxplot(aes(colour = type), outlier.shape = NA, size = 0.8, position = position_dodge(width = 1.02)) +
geom_point(aes(fill = factor(services), shape = factor(ifelse(type == "Null", 24, 21))),
position = position_jitterdodge(jitter.width = 1.2, dodge.width = 1),
size = 2.4, stroke = 1, show.legend = c(fill = TRUE, shape = FALSE, colour = FALSE)) +
scale_fill_manual(values = color_services$color, name = "E(D)S") +
scale_shape_manual(values = c(21, 24)) +
scale_color_manual(values = c("black","firebrick"), name = "Type")+
scale_y_continuous(name = "Prop. of direct E(D)S retained", limits = c(0, 1)) +
scale_x_discrete(name = "Habitat conversion")+
guides(fill = guide_legend(order = 1,override.aes = list(shape=21)),
colour = guide_legend(order = 2),
shape = "none") +
theme(panel.background = element_rect(fill = "white"),
panel.grid.major=element_line(color = "gray"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13, color='black'),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =14),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 14, color = "black"),
legend.text = element_text(size = 12))
prop_EDS_direct
#indirect
output_ind_ES<- read.csv("Data/Indirect_ES_sim_CP_final.csv", sep =",")%>% filter(services_to !="None")
output_ind_ES$management <- factor(output_ind_ES$management, levels = c("E", "SE", "M", "SI","I","IM")) #change order of factors
### Plot of proportions of indirect effects on E(D)S retained
Prop_ind_null<- read.csv("Data/Prop_ind_null_CP.csv", sep =",")
#Empirical
Prop_indir_Emp<-output_ind_ES %>% filter(iteration == "Emp") %>% group_by(management,services_to) %>%
mutate(tot = n()) %>% ungroup() %>%
group_by(services_to) %>%
mutate(prop = tot/max(tot)) %>%  #prop of indirect effects on E(D)S retained in the empirical
dplyr::select(management,services_to,tot,prop) %>%
unique() %>% rename("Prop_mean" = "prop") %>%
mutate (type = "Empirical")
#Simulations
Prop_indir_sim<- Prop_ind_null %>% group_by(management,services_to) %>%
summarise(Prop_mean = mean(Prop_mean)) %>%
filter(management !="E") %>% mutate(type = "Null")
# Merge empirical and simulations and remove extensive scenario
Prop_indir_sim2 <- rbind(Prop_indir_Emp, Prop_indir_sim)
Prop_indir_sim2$management <- factor(Prop_indir_sim2$management, levels = c("E", "SE", "M", "SI","I","IM")) #change order of factors
color_services <-tibble(
services = unique(Prop_indir_sim2$services_to),
color = c('#1b9e77','#d95f02','#7570b3','#e7298a','#2c7fb8','#e6ab02','#a6761d'))
prop_EDS_indirect <- Prop_indir_sim2%>% ggplot(aes(x = management, y = Prop_mean)) +
geom_boxplot(aes(colour = type), outlier.shape = NA, size = 0.8, position = position_dodge(width = 1.02))  +
geom_point(aes(fill = factor(services_to), shape = factor(ifelse(type == "Null", 24, 21))),
position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.4),
size = 2.4, stroke = 1, show.legend = c(fill = TRUE, shape = FALSE, colour = FALSE)) +
scale_fill_manual(values = color_services$color, name = "E(D)S") +
scale_shape_manual(values = c(21, 24)) +
scale_color_manual(values = c("black","firebrick"))+
scale_y_continuous(name = "Prop. of indirect effects on E(D)S retained", limits = c(0, 1)) +
scale_x_discrete(name = "Habitat conversion")+
guides(fill = guide_legend(order = 1,override.aes = list(shape=21)),
colour = guide_legend(order = 2),
shape = "none") +
theme(panel.background = element_rect(fill = "white"),
panel.grid.major=element_line(color = "gray"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13, color='black'),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =14),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 14, color = "black"),
legend.text = element_text(size = 12))
prop_EDS_indirect
prop_EDS_indirect <- Prop_indir_sim2%>% ggplot(aes(x = management, y = Prop_mean)) +
geom_boxplot(aes(colour = type), outlier.shape = NA, size = 0.8, position = position_dodge(width = 1.02))  +
geom_point(aes(fill = factor(services_to), shape = factor(ifelse(type == "Null", 24, 21))),
position = position_jitterdodge(jitter.width = 1.2, dodge.width = 0.5),
size = 2.4, stroke = 1, show.legend = c(fill = TRUE, shape = FALSE, colour = FALSE)) +
scale_fill_manual(values = color_services$color, name = "E(D)S") +
scale_shape_manual(values = c(21, 24)) +
scale_color_manual(values = c("black","firebrick"))+
scale_y_continuous(name = "Prop. of indirect effects on E(D)S retained", limits = c(0, 1)) +
scale_x_discrete(name = "Habitat conversion")+
guides(fill = guide_legend(order = 1,override.aes = list(shape=21)),
colour = guide_legend(order = 2),
shape = "none") +
theme(panel.background = element_rect(fill = "white"),
panel.grid.major=element_line(color = "gray"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13, color='black'),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =14),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 14, color = "black"),
legend.text = element_text(size = 12))
prop_EDS_indirect
ggsave("Graphs/Indirect_ES_sim_CP_final.png", width = 7, height = 5, dpi = 300)
