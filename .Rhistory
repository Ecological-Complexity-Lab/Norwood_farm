install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("manlius/muxViz")
remove.packages("muxViz")
devtools::install_github("manlius/muxViz")
library(htmltools)
library(htmltools)
install.packages("htmltools")
detach("package:htmltools", unload = TRUE)
install.packages("htmltools")
devtools::install_github("manlius/muxViz")
install.packages("htmltools")
devtools::install_github("manlius/muxViz")
library(emln)#multilayer package
#load packages
library(igraph)
library(dplyr)
library(tidyverse)
library(bipartite)
library(vegan)
library(sna)
library(tidyverse)
setwd("/Users/agustin/Desktop/Papers/Norwood_farm/Norwood_Tinio")
#Data frame
plants<-read.csv("Data/PLANT_HABITAT3.csv",header=T, sep =";") # abundance of plants
nore<-read.csv("Data/nore2.csv",header=T) #potential dataframe of abundances
# Rearrange dataframe
plants_habitat<-plants %>% select(-ST) %>%  # remove standing trees (ST)
rename ("WD" = "W", "SF" ="CSF") %>%
mutate( CP = C + LU) %>% # Merge LU and CP
select (-LU,-C)
# Fix abundances of crops in non-crop production habitats
noncrop_hab<- c("SF", "GM","MH","NH","LP","PP","RG","NL")  # Replace values from these habitats
crop_sp <- c(96:101) # rows indicating crops
plants_noncrop<- plants_habitat %>%
mutate((across(all_of(noncrop_hab), ~if_else(row_number() %in% crop_sp, 0, .))))
# rearranged dataframe
plants_ab<-plants_noncrop %>% gather("habitat","abundance",2:11) %>%
filter(abundance >0) %>% rename("species_name" = "lower")
# summary tables
guild.names<-sort(unique(substr(nore$lower,1,4)))  #define guild names          # MJOP: added 'sort' to this line
full.guild.names<-c("plants","flower visitors","aphids","aphid parasitoids (primary)","aphid parasitoids (secondary)","leaf miner parasitoids","seed-feeding invertebrates","birds (seed feeders)","mammals (seed feeders)","bees","hoverflies","butterflies","fleas","other flower visitors")
lower.guild<-substr(nore$lower,1,4)
upper.guild<-substr(nore$upper,1,4)
nore<-cbind(nore,lower.guild,upper.guild)
# Remove the arbitrary self loops added for previous robustness calculations
direct.link<-rep(1,dim(nore)[1])
direct.link[lower.guild==upper.guild]<-0; #remove link between same trophic group species
direct.link[lower.guild=="01PL" & upper.guild=="04PR"]<-0;#remove link between plant and aphid parasitoid
direct.link[lower.guild=="01PL" & upper.guild=="05SE"]<-0; #remove link between plant and second parastoid of aphids
direct.link[lower.guild=="02FV" & upper.guild=="01PL"]<-0; #remove duplicated links between flower visitors and plants
direct.link[lower.guild=="01PL" & upper.guild=="14FL"]<-0; #Remove link between plants and fleas
direct.link[lower.guild=="01PL" & upper.guild=="13SF"]<-0 #Remove links between plants and seed-feedigin parastioid
nore.direct.only<-nore[direct.link==1,]
# Remove "ST" habitats
nore_2<-nore.direct.only %>% filter(!(habitat == "ST"))
## Change names of habitats
nore_names<- nore_2%>% mutate(habitat = case_when(habitat == "P"~ "PP",#typing error
habitat == "C"~ "CP",
habitat == "CSF"~ "SF",
habitat == "RGyard"~"RG", # to merge RG and RGyard into "RG"
habitat == "W"~ "WD",
habitat == "LU"~ "CP", # to merge LU and CP
habitat == "WU"~ "WD", # to merge W and WU into "WD"
TRUE~habitat))
nore_intcrop_clean<- nore_names %>% filter( (!(habitat == "CP")) & # dataframe of non-CP habitat without crops
!(lower == '01PLANT.zCROP Barley' |
lower == '01PLANT.zCROP Lucerne' |
lower == '01PLANT.zCROP Oat spring' |
lower == '01PLANT.zCROP Oat winter' |
lower == '01PLANT.zCROP Triticale' |
lower == '01PLANT.zCROP Wheat' ))
nore_CP<- nore_names %>%  filter(habitat == "CP") # dataframe of CP habitat
nore_ready<- rbind(nore_intcrop_clean,nore_CP) #merge dataframes
View(nore_ready)
## Keep just 02FV and 12BF as pollinator trophic groups (02FV already contains the guild 15FV, 11HO and 10BE)
nore_flowervis<-nore_ready %>%   filter(!(upper.guild == "15FV" |
upper.guild == "11HO" |
upper.guild == "10BE"))
View(nore_flowervis)
## Keep just 02FV and 12BF as pollinator trophic groups (02FV already contains the guild 15FV, 11HO and 10BE)
nore_flowervis<-nore_ready %>%   filter(!(upper.guild == "11HO" |
upper.guild == "10BE"))
View(nore_flowervis)
## Keep just 02FV and 12BF as pollinator trophic groups (02FV already contains the guild 15FV, 11HO and 10BE)
nore_flowervis<-nore_ready %>%   filter(!(upper.guild == "11HO" |
upper.guild == "10BE"))
#remove duplicate rows containing butterflies in 02FV
list.butt.flw<- c("02FV.Maniola jurtina","02FV.Pieris brassicae","02FV.Polyommatus icarus",
"02FV.Pyronia tithonus") #list of butt classified as flw visitor
nore_flowervis_fin<-nore_flowervis %>%   filter(!(upper %in%list.butt.flw))#remove butterlies
View(nore_flowervis_fin)
setwd("/Users/agustin/Desktop/Papers/Norwood_farm/Norwood_Tinio")
list_to_compare<- read.csv("Data/Biomass_repositories/Orford_et_al_2015.csv",header=T, sep =";") #data containing list of visitors transporting pollen grain from data from Orford et al 2015 (https://doi.org/10.1098/rspb.2014.2934)
View(list_to_compare)
list_to_compare<- read.csv("Data/Biomass_repositories/Orford_et_al_2015.csv",header=T, sep =",") #data containing list of visitors transporting pollen grain from data from Orford et al 2015 (https://doi.org/10.1098/rspb.2014.2934)
list_to_compare<- read.csv("Data/Biomass_repositories/Orford_et_al_2015.csv",header=T, sep =",") %>%  #data containing list of visitors transporting pollen grain from data from Orford et al 2015 (https://doi.org/10.1098/rspb.2014.2934)
select(-Plant.species) %>% group_by(Insect.species) %>%
summarise (Tot_pol_grain= sum(Pollen.grains))
View(list_to_compare)
View(nore_flowervis_fin)
View(list_to_compare)
View(nore_flowervis_fin)
View(nore_flowervis_fin)
list_to_compare<- read.csv("Data/Biomass_repositories/Orford_et_al_2015.csv",header=T, sep =",") %>%  #data containing list of visitors transporting pollen grain from data from Orford et al 2015 (https://doi.org/10.1098/rspb.2014.2934)
select(-Plant.species) %>% group_by(Insect.species) %>%
summarise (Tot_pol_grain= sum(Pollen.grains)) %>% #calculate the total grain of pollen per sp
mutate(Insect.species = paste0("02FV.", Insect.species))
prueba<- nore_flowervis_fin %>% filter(upper %in%list_to_compare$Insect.species)
View(prueba)
prueba<- nore_flowervis_fin %>% filter!(upper %in%list_to_compare$Insect.species)
prueba<- nore_flowervis_fin %>% filter(!(upper %in%list_to_compare$Insect.species))
prueba<- nore_flowervis_fin %>% filter(!(upper %in%list_to_compare$Insect.species ) &
upper.guild == "02FV")
View(prueba)
prueba<- nore_flowervis_fin %>% filter(upper.guild == "02FV") %>% inner_join(list_to_compare, by = c("upper "= "Insect.species"))
prueba<- nore_flowervis_fin %>% filter(upper.guild == "02FV") %>% inner_join(list_to_compare, by = c("Insect.species "= "upper"))
?inner_join
list_to_compare<- read.csv("Data/Biomass_repositories/Orford_et_al_2015.csv",header=T, sep =",") %>%  #data containing list of visitors transporting pollen grain from data from Orford et al 2015 (https://doi.org/10.1098/rspb.2014.2934)
select(-Plant.species) %>% group_by(Insect.species) %>%
summarise (Tot_pol_grain= sum(Pollen.grains)) %>% #calculate the total grain of pollen per sp
mutate(Insect.species = paste0("02FV.", Insect.species)) %>%  # arrange the format before filtering
rename ( "upper "= "Insect.species")
prueba<- nore_flowervis_fin %>% filter(upper.guild == "02FV") %>% inner_join(list_to_compare, by = c("Insect.species "= "upper"))
prueba<- nore_flowervis_fin %>% filter(upper.guild == "02FV") %>% inner_join(list_to_compare, by = "upper"))
prueba<- nore_flowervis_fin %>% filter(upper.guild == "02FV") %>% inner_join(list_to_compare, by = "upper")
prueba<- nore_flowervis_fin %>% filter(upper.guild == "02FV") %>% merge (list_to_compare, by = "upper")
?match
prueba<-nore_flowervis_fin %>% filter(upper.guild == "02FV" & upper%in%list_to_compare$`upper `)
View(prueba)
prueba<-nore_flowervis_fin %>% filter(upper.guild == "02FV" & upper%in%list_to_compare$`upper `) %>%
ungroup() %>% select(upper)
View(prueba)
prueba<-nore_flowervis_fin %>% filter(upper.guild == "02FV" & upper%in%list_to_compare$`upper `) %>%
ungroup() %>% select(upper) %>% unique()
View(prueba)
list_to_compare<- read.csv("Data/Biomass_repositories/Orford_et_al_2015.csv",header=T, sep =",") %>%  #data containing list of visitors transporting pollen grain from data from Orford et al 2015 (https://doi.org/10.1098/rspb.2014.2934)
select(-Plant.species) %>% group_by(Insect.species) %>%
summarise (Tot_pol_grain= sum(Pollen.grains)) %>% #calculate the total grain of pollen per sp
mutate(Insect.species = paste0("15FV.", Insect.species)) %>%  # arrange the format before filtering
rename ( "upper "= "Insect.species")
View(list_to_compare)
prueba015<-nore_flowervis_fin %>% filter(upper.guild == "15FV" & upper%in%list_to_compare$`upper `) %>%
ungroup() %>% select(upper) %>% unique()
View(prueba015)
prueba015<-nore_flowervis_fin %>% filter(upper.guild == "15FV" & upper%in%list_to_compare$`upper `)
list_to_compare<- read.csv("Data/Biomass_repositories/Orford_et_al_2015.csv",header=T, sep =",") %>%  #data containing list of visitors transporting pollen grain from data from Orford et al 2015 (https://doi.org/10.1098/rspb.2014.2934)
select(-Plant.species) %>% group_by(Insect.species) %>%
summarise (Tot_pol_grain= sum(Pollen.grains)) %>% #calculate the total grain of pollen per sp
mutate(Insect.species = paste0("15FVOTHER.", Insect.species)) %>%  # arrange the format before filtering
rename ( "upper "= "Insect.species")
prueba015<-nore_flowervis_fin %>% filter(upper.guild == "15FV" & upper%in%list_to_compare$`upper `) %>%
ungroup() %>% select(upper) %>% unique()
View(prueba015)
TOT_15<-nore_flowervis_fin %>% filter(upper.guild == "15FV") %>%
ungroup() %>% select(upper) %>% unique()
View(TOT_15)
View(prueba015)
coleop_dipt<-nore_flowervis_fin %>% filter(upper.guild == "15FV" & upper%in%list_to_compare$`upper `) %>%
ungroup() %>% select(upper) %>% unique() # species (coleoptera and diptera) that we keep in the 02FV
