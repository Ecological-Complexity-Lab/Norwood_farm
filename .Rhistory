rename ("rel_ab_from" = "rel_ab.x", "rel_ab_to" = "rel_ab.y") %>%
mutate(weight = rel_ab_from * rel_ab_to) %>% #calculate weight
select(node_from,node_to,weight,management)
View(ab_ext)
sem_ext_edgelist_rem<- Norwood_farm$extended_ids %>% filter(layer_from != 9 & layer_from != 11) %>%
select(-layer_to) %>% rename("habitat" = "layer_from") %>%   #links from "WD" and "RG" removed
left_join(state_nodes_ab, by = c("node_from" = "node_id",
"habitat" = "layer_id")) %>%  #incorporate abundances and taxa of node_from
left_join(state_nodes_ab, by = c("node_to" = "node_id",
"habitat" = "layer_id")) %>%  #incorporate abundances and taxa of nodes_to
rename("ab_node_from" = "abundance.x", "taxon_node_from" = "taxon.x",
"ab_node_to" = "abundance.y", "taxon_node_to" = "taxon.y")
sem_ext_edgelist_rem<-sem_ext_edgelist_rem[,c(1,2,5,6,3,7,8,4)]
# create habitats CP to replace WD and RG
WD_CP<- Norwood_farm$extended_ids %>% filter(layer_from  == 1) %>% select(-layer_to,-layer_from) %>%
mutate (new_hab = 12, prev_hab = "WD", hab_cp = "CP")#links from "CP" to add as new habitat (12)
View(WD_CP)
RG_CP<- Norwood_farm$extended_ids %>% filter(layer_from  == 1) %>% select(-layer_to,-layer_from) %>%
mutate (new_hab = 13, prev_hab = "RG", hab_cp = "CP")#links from "CP" to add as new habitat (13)
#calculate changes in the area between CP and the habitat to replace
converted_area<-rbind(WD_CP, RG_CP) %>% left_join(habitat_area,
by = c("prev_hab" = "HabitatCode")) %>%
left_join(habitat_area, by = c("hab_cp" = "HabitatCode")) %>%
select(node_from,node_to,weight,new_hab,prev_hab,hab_cp,area_ave.x,area_ave.y) %>%
rename("area_prev_hab" ="area_ave.x", "area_CP" = "area_ave.y") %>%
mutate(mult_ab = (area_prev_hab/area_CP)) %>% #multplied abundances of CP for this value (to estimate according to the new habitat)
select(-prev_hab,-hab_cp,-area_prev_hab,-area_CP)#clean dataframe
View(converted_area)
# add abundances and modify it according to the new area
abundances_CP<-state_nodes_ab %>% filter(layer_id ==1)#filter species abundances to show just layer CP
View(abundances_CP)
View(areas)
converted_area<-rbind(WD_CP, RG_CP) %>% left_join(habitat_area,
by = c("prev_hab" = "HabitatCode"))
converted_area<-rbind(WD_CP, RG_CP) %>% left_join(habitat_area,
by = c("prev_hab" = "HabitatCode")) %>%
left_join(habitat_area, by = c("hab_cp" = "HabitatCode"))
converted_area<-rbind(WD_CP, RG_CP)
converted_area<-rbind(WD_CP, RG_CP) %>% left_join(habitat_area,
by = c("prev_hab" = "HabitatCode")) %>%
left_join(habitat_area, by = c("hab_cp" = "HabitatCode"))
converted_area<-rbind(WD_CP, RG_CP) %>% left_join(habitat_area,
by = c("prev_hab" = "HabitatCode")) %>%
left_join(habitat_area, by = c("hab_cp" = "HabitatCode")) %>%
select(node_from,node_to,weight,new_hab,prev_hab,hab_cp,area_ave.x,area_ave.y)
converted_area<-rbind(WD_CP, RG_CP) %>% left_join(habitat_area,
by = c("prev_hab" = "HabitatCode")) %>%
left_join(habitat_area, by = c("hab_cp" = "HabitatCode")) %>%
select(node_from,node_to,weight,new_hab,prev_hab,hab_cp,area_ave.x,area_ave.y) %>%
rename("area_prev_hab" ="area_ave.x", "area_CP" = "area_ave.y")
converted_area<-rbind(WD_CP, RG_CP) %>% left_join(habitat_area,
by = c("prev_hab" = "HabitatCode")) %>%
left_join(habitat_area, by = c("hab_cp" = "HabitatCode")) %>%
select(node_from,node_to,weight,new_hab,prev_hab,hab_cp,area_ave.x,area_ave.y) %>%
rename("area_prev_hab" ="area_ave.x", "area_CP" = "area_ave.y") %>%
mutate(mult_ab = (area_prev_hab/area_CP))
converted_area<-rbind(WD_CP, RG_CP) %>% left_join(habitat_area,
by = c("prev_hab" = "HabitatCode")) %>%
left_join(habitat_area, by = c("hab_cp" = "HabitatCode")) %>%
select(node_from,node_to,weight,new_hab,prev_hab,hab_cp,area_ave.x,area_ave.y) %>%
rename("area_prev_hab" ="area_ave.x", "area_CP" = "area_ave.y") %>%
mutate(mult_ab = (area_prev_hab/area_CP)) %>% #multplied abundances of CP for this value (to estimate according to the new habitat)
select(-prev_hab,-hab_cp,-area_prev_hab,-area_CP)#
# add abundances and modify it according to the new area
abundances_CP<-state_nodes_ab %>% filter(layer_id ==1)#filter species abundances to show just layer CP
new_habitats_ab<-converted_area %>%
left_join(abundances_CP, by = c("node_from" = "node_id")) %>%  #incorporate abundances and taxa of node_from
left_join(abundances_CP, by = c("node_to" = "node_id")) %>%  #incorporate abundances and taxa of nodes_to
rename("ab_node_from_CP" = "abundance.x", "taxon_node_from" = "taxon.x",
"ab_node_to_CP" = "abundance.y", "taxon_node_to" = "taxon.y")
View(new_habitats_ab)
new_habitats_ab<-converted_area %>%
left_join(abundances_CP, by = c("node_from" = "node_id")) %>%  #incorporate abundances and taxa of node_from
left_join(abundances_CP, by = c("node_to" = "node_id")) %>%  #incorporate abundances and taxa of nodes_to
rename("ab_node_from_CP" = "abundance.x", "taxon_node_from" = "taxon.x",
"ab_node_to_CP" = "abundance.y", "taxon_node_to" = "taxon.y") %>%
mutate(ab_node_from = ab_node_from_CP * mult_ab,
ab_node_to = ab_node_to_CP * mult_ab )
new_habitats_ab<-converted_area %>%
left_join(abundances_CP, by = c("node_from" = "node_id")) %>%  #incorporate abundances and taxa of node_from
left_join(abundances_CP, by = c("node_to" = "node_id")) %>%  #incorporate abundances and taxa of nodes_to
rename("ab_node_from_CP" = "abundance.x", "taxon_node_from" = "taxon.x",
"ab_node_to_CP" = "abundance.y", "taxon_node_to" = "taxon.y")
new_habitats_ab<-converted_area %>%
left_join(abundances_CP, by = c("node_from" = "node_id")) %>%  #incorporate abundances and taxa of node_from
left_join(abundances_CP, by = c("node_to" = "node_id")) %>%  #incorporate abundances and taxa of nodes_to
rename("ab_node_from_CP" = "abundance.x", "taxon_node_from" = "taxon.x",
"ab_node_to_CP" = "abundance.y", "taxon_node_to" = "taxon.y") %>%
mutate(ab_node_from = ab_node_from_CP * mult_ab,
ab_node_to = ab_node_to_CP * mult_ab )
new_habitats_ab<-converted_area %>%
left_join(abundances_CP, by = c("node_from" = "node_id")) %>%  #incorporate abundances and taxa of node_from
left_join(abundances_CP, by = c("node_to" = "node_id")) %>%  #incorporate abundances and taxa of nodes_to
rename("ab_node_from_CP" = "abundance.x", "taxon_node_from" = "taxon.x",
"ab_node_to_CP" = "abundance.y", "taxon_node_to" = "taxon.y") %>%
mutate(ab_node_from = ab_node_from_CP * mult_ab,
ab_node_to = ab_node_to_CP * mult_ab ) %>% #estimate the new abundances
select(new_hab,node_from,ab_node_from,taxon_node_from,node_to,ab_node_to,
taxon_node_to,weight) %>% rename ("habitat" = "new_hab")
new_habitats_ab_rem<- new_habitats_ab %>% filter(ab_node_from >=1 & ab_node_to >=1)
sem_ext_edgelist_no_aggr<- rbind(sem_ext_edgelist_rem,new_habitats_ab_rem)  #join new habitats and old habitats
View(sem_ext_edgelist_no_aggr)
state_node_sem_ext_from<- sem_ext_edgelist_no_aggr %>% select(habitat,node_from,ab_node_from,
taxon_node_from) %>%
rename("node_id" ="node_from", "abundances" = "ab_node_from",
"taxon" = "taxon_node_from")
View(state_node_sem_ext_from)
state_node_sem_ext_to<- sem_ext_edgelist_no_aggr %>% select(habitat,node_to,ab_node_to,
taxon_node_to) %>%
rename("node_id" ="node_to", "abundances" = "ab_node_to",
"taxon" = "taxon_node_to")
#node_from
state_node_sem_ext_from<- sem_ext_edgelist_no_aggr %>% select(habitat,node_from,ab_node_from,
taxon_node_from) %>%
rename("node_id" ="node_from", "abundances" = "ab_node_from",
"taxon" = "taxon_node_from") %>%
group_by(habitat,node_id) %>% unique() #eliminate duplicate species within each habitat
#node_to
state_node_sem_ext_to<- sem_ext_edgelist_no_aggr %>% select(habitat,node_to,ab_node_to,
taxon_node_to) %>%
rename("node_id" ="node_to", "abundances" = "ab_node_to",
"taxon" = "taxon_node_to") %>%
group_by(habitat,node_id) %>% unique() #eliminate duplicate species within each habitat
state_node_sem_ext_agg<-rbind(state_node_sem_ext_from, state_node_sem_ext_to)
View(state_nodes_ab)
View(state_node_sem_ext_agg)
prueba<- state_node_sem_ext_agg %>% filter(taxon == "Crop")
View(prueba)
state_node_sem_ext_agg<-rbind(state_node_sem_ext_from, state_node_sem_ext_to)
state_node_sem_ext_agg<-rbind(state_node_sem_ext_from, state_node_sem_ext_to) %>%
select(-habitat) %>% group_by(node_id,taxon)
state_node_sem_ext_agg<-rbind(state_node_sem_ext_from, state_node_sem_ext_to) %>% ungroup() %>%
select(-habitat) %>% group_by(node_id,taxon)
state_node_sem_ext_agg<-rbind(state_node_sem_ext_from, state_node_sem_ext_to) %>% ungroup() %>%
select(-habitat) %>% group_by(node_id,taxon) %>%
mutate(abun = sum(abundances))
state_node_sem_ext_agg<-rbind(state_node_sem_ext_from, state_node_sem_ext_to) %>% ungroup() %>%
select(-habitat) %>% group_by(node_id,taxon) %>%
mutate(abun = sum(abundances)) %>% distinct(abun)
state_node_sem_ext_agg<-rbind(state_node_sem_ext_from, state_node_sem_ext_to) %>% ungroup() %>%
select(-habitat)
prueba<- state_node_sem_ext_agg %>% filter(taxon == "Crop")
state_node_sem_ext_agg<-rbind(state_node_sem_ext_from, state_node_sem_ext_to) %>% ungroup() %>%
select(-habitat) %>% group_by(node_id,taxon) %>%
mutate(abun = sum(abundances)
prueba<- state_node_sem_ext_agg %>% filter(taxon == "Crop")
state_node_sem_ext_agg<-rbind(state_node_sem_ext_from, state_node_sem_ext_to) %>% ungroup() %>%
select(-habitat) %>% group_by(node_id,taxon) %>%
mutate(abun = sum(abundances))
prueba<- state_node_sem_ext_agg %>% filter(taxon == "Crop")
state_node_sem_ext_agg<-rbind(state_node_sem_ext_from, state_node_sem_ext_to) %>% ungroup() %>%
select(-habitat) %>% group_by(node_id,taxon)
prueba2<- state_node_sem_ext_agg %>% filter(taxon == "Crop")
View(prueba2)
state_node_sem_ext_agg<-rbind(state_node_sem_ext_from, state_node_sem_ext_to) %>% ungroup() %>%
group_by(node_id,taxon) %>%
preuba3<-state_node_sem_ext_agg %>% filter(taxon == "Crop")
preuba3<-state_node_sem_ext_agg %>% filter(taxon == "Crop")
View(preuba3)
state_node_sem_ext_agg<-rbind(state_node_sem_ext_from, state_node_sem_ext_to)
preuba3<-state_node_sem_ext_agg %>% filter(taxon == "Crop")
state_node_sem_ext_agg<-rbind(state_node_sem_ext_from, state_node_sem_ext_to) %>% ungroup() %>%
select(-habitat) %>% group_by(node_id) %>%
mutate(abun = sum(abundances))
prueba2<- state_node_sem_ext_agg %>% filter(taxon == "Crop")
state_node_sem_ext_agg<-rbind(state_node_sem_ext_from, state_node_sem_ext_to) %>% ungroup() %>%
select(-habitat) %>% group_by(node_id) %>%
mutate(abun = sum(abundances)) %>% distinct(abun)
prueba2<- state_node_sem_ext_agg %>% filter(taxon == "Crop")
state_node_sem_ext_agg<-rbind(state_node_sem_ext_from, state_node_sem_ext_to) %>% ungroup() %>%
select(-habitat) %>% group_by(node_id,taxon) %>%
mutate(abun = sum(abundances)) %>% distinct(abun)
prueba2<- state_node_sem_ext_agg %>% filter(taxon == "Crop")
View(prueba2)
state_node_sem_ext_agg<-rbind(state_node_sem_ext_from, state_node_sem_ext_to) %>% ungroup() %>%
select(-habitat) %>% group_by(node_id,taxon) %>%
mutate(abun = sum(abundances)) %>% distinct(abun) %>% group_by(taxon) %>%
mutate(tot_ab_taxon = sum(abun)) %>% #total abundance per taxon
group_by(node_id) %>%
mutate(rel_ab=abun/tot_ab_taxon)
prueba2<- state_node_sem_ext_agg %>% filter(taxon == "Crop")
sem_ext_edgelist_aggr<-sem_ext_edgelist_no_aggr %>% select(node_from,node_to) %>%
unique() %>%  #aggregated edge list
left_join(state_node_sem_ext_agg, by = c("node_from" = "node_id")) %>%  #incorporate rel abundances of node_from
left_join(state_node_sem_ext_agg, by = c("node_to" = "node_id")) %>%  #incorporate rel abundances of nodes_to
select(node_from,node_to, rel_ab.x,rel_ab.y) %>%
mutate(weight = rel_ab.x * rel_ab.y,management = "SE") %>% #calculate weight
select(-rel_ab.x,-rel_ab.y)
View(sem_ext_edgelist_aggr)
mod_edgelist_rem<- Norwood_farm$extended_ids %>%
filter(layer_from != 9 & layer_from != 11 & layer_from != 5 & layer_from != 6) %>% #links from "WD", "RG", "MH", and "NH" removed
select(-layer_to) %>% rename("habitat" = "layer_from") %>%
left_join(state_nodes_ab, by = c("node_from" = "node_id",
"habitat" = "layer_id")) %>%  #incorporate abundances and taxa of node_from
left_join(state_nodes_ab, by = c("node_to" = "node_id",
"habitat" = "layer_id")) %>%  #incorporate abundances and taxa of nodes_to
rename("ab_node_from" = "abundance.x", "taxon_node_from" = "taxon.x",
"ab_node_to" = "abundance.y", "taxon_node_to" = "taxon.y")
mod_edgelist_rem<-mod_edgelist_rem[,c(1,2,5,6,3,7,8,4)]
# create habitats CP to replace WD,RG, MH and NH (WD and RG were created before)
MH_CP<- Norwood_farm$extended_ids %>% filter(layer_from  == 1) %>% select(-layer_to,-layer_from) %>%
mutate (new_hab = 14, prev_hab = "MH", hab_cp = "CP")#links from "CP" to add as new habitat (14)
NH_CP<- Norwood_farm$extended_ids %>% filter(layer_from  == 1) %>% select(-layer_to,-layer_from) %>%
mutate (new_hab = 15, prev_hab = "NH", hab_cp = "CP")#links from "CP" to add as new habitat (15)
# calculate changes in the area between CP and the habitat to replace
converted_area<-rbind(WD_CP, RG_CP, MH_CP, NH_CP) %>% left_join(habitat_area,
by = c("prev_hab" = "HabitatCode")) %>%
left_join(habitat_area, by = c("hab_cp" = "HabitatCode")) %>%
select(node_from,node_to,weight,new_hab,prev_hab,hab_cp,area_ave.x,area_ave.y) %>%
rename("area_prev_hab" ="area_ave.x", "area_CP" = "area_ave.y") %>%
mutate(mult_ab = (area_prev_hab/area_CP)) %>% #multplied abundances of CP for this value (to estimate according to the new habitat)
select(-prev_hab,-hab_cp,-area_prev_hab,-area_CP)#clean dataframe
# add abundances and modify them according to the new area
abundances_CP<-state_nodes_ab %>% filter(layer_id ==1)#filter species abundances to show just layer CP
new_habitats_ab<-converted_area %>%
left_join(abundances_CP, by = c("node_from" = "node_id")) %>%  #incorporate abundances and taxa of node_from
left_join(abundances_CP, by = c("node_to" = "node_id")) %>%  #incorporate abundances and taxa of nodes_to
rename("ab_node_from_CP" = "abundance.x", "taxon_node_from" = "taxon.x",
"ab_node_to_CP" = "abundance.y", "taxon_node_to" = "taxon.y") %>%
mutate(ab_node_from = ab_node_from_CP * mult_ab,
ab_node_to = ab_node_to_CP * mult_ab ) %>% #estimate the new abundances
select(new_hab,node_from,ab_node_from,taxon_node_from,node_to,ab_node_to,
taxon_node_to,weight) %>% rename ("habitat" = "new_hab") #clean to match the rest of farm edgelist
new_habitats_ab_rem<- new_habitats_ab %>% filter(ab_node_from >=1 & ab_node_to >=1)
mod_edgelist_no_aggr<- rbind(mod_edgelist_rem,new_habitats_ab_rem)  #join new habitats and old habitats
#node_from
state_node_mod_from<- mod_edgelist_no_aggr %>% select(habitat,node_from,ab_node_from,
taxon_node_from) %>%
rename("node_id" ="node_from", "abundances" = "ab_node_from",
"taxon" = "taxon_node_from") %>%
group_by(habitat,node_id) %>% unique() #eliminate duplicate species within each habitat
#node_to
state_node_mod_to<- mod_edgelist_no_aggr %>% select(habitat,node_to,ab_node_to,
taxon_node_to) %>%
rename("node_id" ="node_to", "abundances" = "ab_node_to",
"taxon" = "taxon_node_to") %>%
group_by(habitat,node_id) %>% unique() #eliminate duplicate species within each habitat
state_node_mod_agg<-rbind(state_node_mod_from, state_node_mod_to) %>% ungroup() %>%
select(-habitat) %>% group_by(node_id,taxon) %>%
mutate(abun = sum(abundances)) %>% distinct(abun) %>% group_by(taxon) %>%
mutate(tot_ab_taxon = sum(abun)) %>% #total abundance per taxon
group_by(node_id) %>%
mutate(rel_ab=abun/tot_ab_taxon)#rel abundance of species per taxon
View(state_node_mod_agg)
mod_edgelist_aggr<-mod_edgelist_no_aggr %>% select(node_from,node_to) %>%
unique() %>%  #aggregated edge list
left_join(state_node_mod_agg, by = c("node_from" = "node_id")) %>%  #incorporate rel abundances of node_from
left_join(state_node_mod_agg, by = c("node_to" = "node_id")) %>%  #incorporate rel abundances of nodes_to
select(node_from,node_to, rel_ab.x,rel_ab.y) %>%
mutate(weight = rel_ab.x * rel_ab.y,management = "M") %>% #calculate weight
select(-rel_ab.x,-rel_ab.y)
prueba<-state_node_mod_agg %>% filter(taxon =="Crop")
View(prueba)
sem_int_edgelist_rem<- Norwood_farm$extended_ids %>%
filter(layer_from != 9 & layer_from != 11 &  layer_from != 5 &
layer_from != 6 & layer_from != 2 & layer_from != 10 &
layer_from != 8 ) %>% #links from "WD", "RG", "MH", "NH","GM", "SF" and "PP"" removed
select(-layer_to) %>% rename("habitat" = "layer_from") %>%
left_join(state_nodes_ab, by = c("node_from" = "node_id",
"habitat" = "layer_id")) %>%  #incorporate abundances and taxa of node_from
left_join(state_nodes_ab, by = c("node_to" = "node_id",
"habitat" = "layer_id")) %>%  #incorporate abundances and taxa of nodes_to
rename("ab_node_from" = "abundance.x", "taxon_node_from" = "taxon.x",
"ab_node_to" = "abundance.y", "taxon_node_to" = "taxon.y")
sem_int_edgelist_rem<-sem_int_edgelist_rem[,c(1,2,5,6,3,7,8,4)]
# create habitats CP to replace WD,RG, MH,NH and GM (WD,RG,MH and NH were created before)
GM_CP<- Norwood_farm$extended_ids %>% filter(layer_from  == 1) %>% select(-layer_to,-layer_from) %>%
mutate (new_hab = 16, prev_hab = "GM", hab_cp = "CP")#links from "CP" to add as new habitat (16)
SF_CP<- Norwood_farm$extended_ids %>% filter(layer_from  == 1) %>% select(-layer_to,-layer_from) %>%
mutate (new_hab = 17, prev_hab = "SF", hab_cp = "CP")#links from "CP" to add as new habitat (17)
PP_CP<- Norwood_farm$extended_ids %>% filter(layer_from  == 1) %>% select(-layer_to,-layer_from) %>%
mutate (new_hab = 18, prev_hab = "PP", hab_cp = "CP")#links from "CP" to add as new habitat (18)
# calculate changes in the area between CP and the habitat to replace
converted_area<-rbind(WD_CP, RG_CP, MH_CP, NH_CP, GM_CP,SF_CP,PP_CP) %>%
left_join(habitat_area,  by = c("prev_hab" = "HabitatCode")) %>%
left_join(habitat_area, by = c("hab_cp" = "HabitatCode")) %>%
select(node_from,node_to,weight,new_hab,prev_hab,hab_cp,area_ave.x,area_ave.y) %>%
rename("area_prev_hab" ="area_ave.x", "area_CP" = "area_ave.y") %>%
mutate(mult_ab = (area_prev_hab/area_CP)) %>% #multplied abundances of CP for this value (to estimate according to the new habitat)
select(-prev_hab,-hab_cp,-area_prev_hab,-area_CP)#clean dataframe
# add abundances and modify them according to the new area
abundances_CP<-state_nodes_ab %>% filter(layer_id ==1)#filter species abundances to show just layer CP
new_habitats_ab<-converted_area %>%
left_join(abundances_CP, by = c("node_from" = "node_id")) %>%  #incorporate abundances and taxa of node_from
left_join(abundances_CP, by = c("node_to" = "node_id")) %>%  #incorporate abundances and taxa of nodes_to
rename("ab_node_from_CP" = "abundance.x", "taxon_node_from" = "taxon.x",
"ab_node_to_CP" = "abundance.y", "taxon_node_to" = "taxon.y") %>%
mutate(ab_node_from = ab_node_from_CP * mult_ab,
ab_node_to = ab_node_to_CP * mult_ab ) %>% #estimate the new abundances
select(new_hab,node_from,ab_node_from,taxon_node_from,node_to,ab_node_to,
taxon_node_to,weight) %>% rename ("habitat" = "new_hab") #clean to match the rest of farm edgelist
new_habitats_ab_rem<- new_habitats_ab %>% filter(ab_node_from >=1 & ab_node_to >=1)
sem_int_edgelist_no_aggr<- rbind(sem_int_edgelist_rem,new_habitats_ab_rem)  #join new habitats and old habitats
#node_from
state_node_sem_int_from<- sem_int_edgelist_no_aggr %>% select(habitat,node_from,ab_node_from,
taxon_node_from) %>%
rename("node_id" ="node_from", "abundances" = "ab_node_from",
"taxon" = "taxon_node_from")%>%
group_by(habitat,node_id) %>% unique() #eliminate duplicate species within each habitat
#node_to
state_node_sem_int_to<- sem_int_edgelist_no_aggr %>% select(habitat,node_to,ab_node_to,
taxon_node_to) %>%
rename("node_id" ="node_to", "abundances" = "ab_node_to",
"taxon" = "taxon_node_to")%>%
group_by(habitat,node_id) %>% unique() #eliminate duplicate species within each habitat
state_node_sem_int_agg<-rbind(state_node_sem_int_from, state_node_sem_int_to) %>% ungroup() %>%
select(-habitat) %>% group_by(node_id,taxon) %>%
mutate(abun = sum(abundances)) %>% distinct(abun) %>% group_by(taxon) %>%
mutate(tot_ab_taxon = sum(abun)) %>% #total abundance per taxon
group_by(node_id) %>%
mutate(rel_ab=abun/tot_ab_taxon)#rel abundance of species per taxon
sem_int_edgelist_aggr<-sem_int_edgelist_no_aggr %>% select(node_from,node_to) %>%
unique() %>%  #aggregated edge list
left_join(state_node_sem_int_agg, by = c("node_from" = "node_id")) %>%  #incorporate rel abundances of node_from
left_join(state_node_sem_int_agg, by = c("node_to" = "node_id")) %>%  #incorporate rel abundances of nodes_to
select(node_from,node_to, rel_ab.x,rel_ab.y) %>%
mutate(weight = rel_ab.x * rel_ab.y,management = "SI") %>% #calculate weight
select(-rel_ab.x,-rel_ab.y)
int_edgelist_rem<- Norwood_farm$extended_ids %>%
filter(layer_from != 9 & layer_from != 11 &  layer_from != 5 &
layer_from != 6 & layer_from != 2 &  layer_from != 10 &
layer_from != 8 & layer_from != 3 &  layer_from != 4 &
layer_from != 7) %>% #links from "WD", "RG", "MH", "NH","GM","SF", "PP", "LP","LU", and"NL removed
select(-layer_to) %>% rename("habitat" = "layer_from") %>%
left_join(state_nodes_ab, by = c("node_from" = "node_id",
"habitat" = "layer_id")) %>%  #incorporate abundances and taxa of node_from
left_join(state_nodes_ab, by = c("node_to" = "node_id",
"habitat" = "layer_id")) %>%  #incorporate abundances and taxa of nodes_to
rename("ab_node_from" = "abundance.x", "taxon_node_from" = "taxon.x",
"ab_node_to" = "abundance.y", "taxon_node_to" = "taxon.y")
int_edgelist_rem<-int_edgelist_rem[,c(1,2,5,6,3,7,8,4)]
# create habitats CP to replace LP,LU and NL (the rest were created before)
LP_CP<- Norwood_farm$extended_ids %>% filter(layer_from  == 1) %>% select(-layer_to,-layer_from) %>%
mutate (new_hab = 19, prev_hab = "LP", hab_cp = "CP")#links from "CP" to add as new habitat (19)
LU_CP<- Norwood_farm$extended_ids %>% filter(layer_from  == 1) %>% select(-layer_to,-layer_from) %>%
mutate (new_hab = 20, prev_hab = "LU", hab_cp = "CP")#links from "CP" to add as new habitat (20)
NL_CP<- Norwood_farm$extended_ids %>% filter(layer_from  == 1) %>% select(-layer_to,-layer_from) %>%
mutate (new_hab = 21, prev_hab = "NL", hab_cp = "CP")#links from "CP" to add as new habitat (21)
# calculate changes in the area between CP and the habitat to replace
converted_area<-rbind(WD_CP, RG_CP, MH_CP, NH_CP, GM_CP,SF_CP,PP_CP, LP_CP,LU_CP,NL_CP) %>%
left_join(habitat_area,   by = c("prev_hab" = "HabitatCode")) %>%
left_join(habitat_area, by = c("hab_cp" = "HabitatCode")) %>%
select(node_from,node_to,weight,new_hab,prev_hab,hab_cp,area_ave.x,area_ave.y) %>%
rename("area_prev_hab" ="area_ave.x", "area_CP" = "area_ave.y") %>%
mutate(mult_ab = (area_prev_hab/area_CP)) %>% #multplied abundances of CP for this value (to estimate according to the new habitat)
select(-prev_hab,-hab_cp,-area_prev_hab,-area_CP)#clean dataframe
# add abundances and modify them according to the new area
abundances_CP<-state_nodes_ab %>% filter(layer_id ==1)#filter species abundances to show just layer CP
new_habitats_ab<-converted_area %>%
left_join(abundances_CP, by = c("node_from" = "node_id")) %>%  #incorporate abundances and taxa of node_from
left_join(abundances_CP, by = c("node_to" = "node_id")) %>%  #incorporate abundances and taxa of nodes_to
rename("ab_node_from_CP" = "abundance.x", "taxon_node_from" = "taxon.x",
"ab_node_to_CP" = "abundance.y", "taxon_node_to" = "taxon.y") %>%
mutate(ab_node_from = ab_node_from_CP * mult_ab,
ab_node_to = ab_node_to_CP * mult_ab ) %>% #estimate the new abundances
select(new_hab,node_from,ab_node_from,taxon_node_from,node_to,ab_node_to,
taxon_node_to,weight) %>% rename ("habitat" = "new_hab") #clean to match the rest of farm edgelist
new_habitats_ab_rem<- new_habitats_ab %>% filter(ab_node_from >=1 & ab_node_to >=1)
int_edgelist_no_aggr<- rbind(int_edgelist_rem,new_habitats_ab_rem)  #join new habitats and old habitats
#node_from
state_node_int_from<- int_edgelist_no_aggr %>% select(habitat,node_from,ab_node_from,
taxon_node_from) %>%
rename("node_id" ="node_from", "abundances" = "ab_node_from",
"taxon" = "taxon_node_from")%>%
group_by(habitat,node_id) %>% unique() #eliminate duplicate species within each habitat
#node_to
state_node_int_to<- int_edgelist_no_aggr %>% select(habitat,node_to,ab_node_to,
taxon_node_to) %>%
rename("node_id" ="node_to", "abundances" = "ab_node_to",
"taxon" = "taxon_node_to") %>%
group_by(habitat,node_id) %>% unique() #eliminate duplicate species within each habitat
state_node_int_agg<-rbind(state_node_int_from, state_node_int_to) %>% ungroup() %>%
select(-habitat) %>% group_by(node_id,taxon) %>%
mutate(abun = sum(abundances)) %>% distinct(abun) %>% group_by(taxon) %>%
mutate(tot_ab_taxon = sum(abun)) %>% #total abundance per taxon
group_by(node_id) %>%
mutate(rel_ab=abun/tot_ab_taxon)#rel abundance of species per taxon
int_edgelist_aggr<-int_edgelist_no_aggr %>% select(node_from,node_to) %>%
unique() %>%  #aggregated edge list
left_join(state_node_int_agg, by = c("node_from" = "node_id")) %>%  #incorporate rel abundances of node_from
left_join(state_node_int_agg, by = c("node_to" = "node_id")) %>%  #incorporate rel abundances of nodes_to
select(node_from,node_to, rel_ab.x,rel_ab.y) %>%
mutate(weight = rel_ab.x * rel_ab.y,management = "I") %>% #calculate weight
select(-rel_ab.x,-rel_ab.y)
land_change_weighted<-rbind(ext_edgelist_aggr,sem_ext_edgelist_aggr,mod_edgelist_aggr,
sem_int_edgelist_aggr,int_edgelist_aggr)
#final state_node list with abundances
state_nodes_weighted_ab<-rbind(ab_ext[,1:3],state_node_sem_ext_agg[,1:3],
state_node_mod_agg[,1:3],state_node_sem_int_agg[,1:3],
state_node_int_agg[,1:3])
#add management label
state_nodes_weighted<-cbind(management = rep(c("E","SE","M","SI","I"),
c(nrow(ab_ext),nrow(state_node_sem_ext_agg),
nrow(state_node_mod_agg), nrow(state_node_sem_int_agg),
nrow(state_node_int_agg))), state_nodes_weighted_ab)
check<- state_nodes_weighted_ab %>% filter(taxon=="Crop")
View(check)
check<- state_nodes_weighted %>% filter(taxon=="Crop")
check<- state_nodes_weighted %>% filter(taxon=="Crop") %>% group_by(management) %>%
summarize(tot=sum(abun))
View(check)
nodes_ES<- right_join(state_nodes_weighted, Norwood_farm$nodes, by = "node_id")%>%
select(management,node_id,taxon.x,abun, "Crop production",
"Pollination", "Crop damage", "Pest control", "Seed dispersal", "Butterfly watching", "Bird watching") %>%
group_by(management,node_id) %>% rename("taxon" = "taxon.x") %>%
gather("services","value", 5:11) #we conserve species that not directly provide ES because can serve as intermediate hop
nodes_ES$management <- factor(nodes_ES$management, levels = c("E", "SE", "M", "SI","I")) #change order of factors
#upload file with body mass
body_mass<-read.csv("Data/biomass.csv",header=T)
#add body mass to the dataframe
direct_ES <- nodes_ES %>% filter (value ==1) %>%
left_join(body_mass,by = "node_id") %>% select(-node_name,-taxon.y) %>%
rename("taxon"="taxon.x", "body_mass" = "biomass.g") %>%
mutate (type = "D",
weight = abun * body_mass,
output = case_when( #output + or - according to the service
services == "Crop damage"~ "-",
TRUE ~ "+")) %>% #weight of direct ES provision
select(-value)
write.csv(direct_ES,"Data/Land_use_dir_weighted_CP_intense.csv", row.names= FALSE)
#direct
direct_ES<- read.csv("Data/Land_use_dir_weighted_CP_intense.csv", sep =",")
direct_ES$management <- factor(direct_ES$management, levels = c("E", "SE", "M", "SI","I")) #change order of factors
#indirect
output_ind_ES <- read.csv("Data/Land_use_output_weighted_CP_intense.csv", sep =",")
output_ind_ES$management <- factor(output_ind_ES$management, levels = c("E", "SE", "M", "SI","I")) #change order of factors
tot_services_emp<-direct_ES %>% filter(management=="E") %>% group_by(management,services) %>%
summarize(tot_empirical = sum(weight))
View(tot_services_emp)
View(tot_services_emp)
Prop_weight<-direct_ES %>% group_by(management,services) %>%
summarize(tot = sum(weight)) %>% ungroup() %>%
mutate(Extensive_tot = case_when(
services == "Bird watching"~ 823859.6127,
services == "Butterfly watching"~ 249.5355,
services == "Crop damage"~ 1291466.5674,
services == "Crop production"~ 343050.0000,
services == "Pest control"~ 39399.6775,
services == "Pollination"~ 37052.8931,
services == "Seed dispersal"~ 851745.2231),
ratio_change = tot / Extensive_tot  #ratio of change: values higher than 1 indicates increasing in the amount of E(D)S
)
View(Prop_weight)
prop_weight_direct<- Prop_weight %>% ggplot(aes(x = management, y = ratio_change)) +
geom_boxplot(color = "black") +
geom_point(position=position_jitterdodge(jitter.width=2, dodge.width = 0.5),
pch=21, aes(fill=factor(services)), size = 4, show.legend = T) +
# scale_fill_manual(values = col) +
scale_fill_brewer(palette="PRGn") +
scale_y_continuous(name = "Change in the mount of direct E(D)S provided ", limits = c(0, 1)) +
scale_x_discrete(name = "Management")+
theme(panel.background = element_rect(fill = "white"),
panel.grid.major=element_line(color = "gray"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=11, color='black'),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =13),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11),
legend.position = "bottom")
prop_weight_direct
prop_weight_direct<- Prop_weight %>% ggplot(aes(x = management, y = ratio_change)) +
geom_boxplot(color = "black") +
geom_point(position=position_jitterdodge(jitter.width=2, dodge.width = 0.5),
pch=21, aes(fill=factor(services)), size = 4, show.legend = T) +
# scale_fill_manual(values = col) +
scale_fill_brewer(palette="PRGn") +
scale_y_continuous(name = "Change in the mount of direct E(D)S provided ", limits = c(0, 1.5)) +
scale_x_discrete(name = "Management")+
theme(panel.background = element_rect(fill = "white"),
panel.grid.major=element_line(color = "gray"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=11, color='black'),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =13),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11),
legend.position = "bottom")
prop_weight
prop_weight_direct
prop_weight_direct<- Prop_weight %>% ggplot(aes(x = management, y = ratio_change)) +
geom_boxplot(color = "black") +
geom_point(position=position_jitterdodge(jitter.width=2, dodge.width = 0.5),
pch=21, aes(fill=factor(services)), size = 4, show.legend = T) +
# scale_fill_manual(values = col) +
scale_fill_brewer(palette="PRGn") +
scale_y_continuous(name = "Change in the mount of direct E(D)S provided ", limits = c(0, 1.2)) +
scale_x_discrete(name = "Management")+
theme(panel.background = element_rect(fill = "white"),
panel.grid.major=element_line(color = "gray"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=11, color='black'),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =13),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11),
legend.position = "bottom")
prop_weight_direct
ggsave("Land_use_weight_CP_intense.png")
ggsave("Land_use_weight_CP_intense.png")
