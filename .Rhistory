facet_grid(man_2 ~ man_1)
posthoc_distr_PP
#smimulated
man_lev<-c("E","SE","M","SI","I")
post_hoc_sim<- iterations_post_hocs %>% separate(contrast, into = c("man_1", "man_2"), sep = " - ") %>%
select(-p.value)
post_hoc_sim$man_1 <- factor(post_hoc_sim$man_1, levels = man_lev)
post_hoc_sim$man_2 <- factor(post_hoc_sim$man_2, levels = man_lev)
#empirical
post_hoc_emp_pre<- man_pairs_emp %>% separate(contrast, into = c("man_1", "man_2"), sep = " - ") %>%
select(-p.value) %>% mutate (iteration = 0) %>% select(man_1,man_2,estimate,iteration)#empirical
new_combinations_empirical <- data.frame(
man_1 = c("E", "SE", "M", "SI", "I"),
man_2 = c("E", "SE", "M", "SI", "I"),
estimate = rep(0, 5),
iteration = rep(0, 5)
)
post_hoc_emp_fin<-rbind(post_hoc_emp_pre,new_combinations_empirical)
post_hoc_emp_fin$man_1 <- factor(post_hoc_emp_fin$man_1, levels = man_lev)
post_hoc_emp_fin$man_2 <- factor(post_hoc_emp_fin$man_2, levels = man_lev)
# plot
posthoc_distr_PP<- ggplot(data = post_hoc_sim, aes(x=estimate)) +
geom_histogram(fill = "steelblue") +
labs(y = "Count", x = "Estimate value") +
geom_vline(data = post_hoc_emp_fin[1:10,], mapping = aes(xintercept = estimate),
colour="#BB0000", linetype="dashed") +
facet_grid(man_2 ~ man_1)
posthoc_distr_PP
#smimulated
man_lev<-c("E","SE","M","SI","I")
man_lev
levels(post_hoc_sim$man_1)
levels(post_hoc_sim$man_2)
levels(post_hoc_emp_fin$man_1)
levels(post_hoc_emp_fin$man_2)
# plot
posthoc_distr_PP<- ggplot(data = post_hoc_sim, aes(x=estimate)) +
geom_histogram(fill = "steelblue") +
labs(y = "Count", x = "Estimate value") +
geom_vline(data = post_hoc_emp_fin[1:10,], mapping = aes(xintercept = estimate),
colour="#BB0000", linetype="dashed") +
facet_grid(man_2 ~ man_1,scales ="free")
posthoc_distr_PP
table(post_hoc_sim$man_1, post_hoc_sim$man_2)
levels(post_hoc_sim$man_1)=levels(post_hoc_sim$man_2)
levels(post_hoc_sim$man_1)== levels(post_hoc_sim$man_2)
levels(post_hoc_emp_fin$man_1)== levels(post_hoc_emp_fin$man_2)
post_hoc_sim$man_1 <- factor(post_hoc_sim$man_1)
post_hoc_sim$man_2 <- factor(post_hoc_sim$man_2)
# plot
posthoc_distr_PP<- ggplot(data = post_hoc_sim, aes(x=estimate)) +
geom_histogram(fill = "steelblue") +
labs(y = "Count", x = "Estimate value") +
geom_vline(data = post_hoc_emp_fin[1:10,], mapping = aes(xintercept = estimate),
colour="#BB0000", linetype="dashed") +
facet_grid(man_2 ~ man_1)
posthoc_distr_PP
table(post_hoc_sim$man_1, post_hoc_sim$man_2)
#smimulated
man_lev<-c("E","SE","M","SI","I")
post_hoc_sim<- iterations_post_hocs %>% separate(contrast, into = c("man_1", "man_2"), sep = " - ") %>%
select(-p.value)
post_hoc_sim$man_1 <- factor(post_hoc_sim$man_1, levels = man_lev)
post_hoc_sim$man_2 <- factor(post_hoc_sim$man_2, levels = man_lev)
#empirical
post_hoc_emp_pre<- man_pairs_emp %>% separate(contrast, into = c("man_1", "man_2"), sep = " - ") %>%
select(-p.value) %>% mutate (iteration = 0) %>% select(man_1,man_2,estimate,iteration)#empirical
new_combinations_empirical <- data.frame(
man_1 = c("E", "SE", "M", "SI", "I"),
man_2 = c("E", "SE", "M", "SI", "I"),
estimate = rep(0, 5),
iteration = rep(0, 5)
)
post_hoc_emp_fin<-rbind(post_hoc_emp_pre,new_combinations_empirical)
post_hoc_emp_fin$man_1 <- factor(post_hoc_emp_fin$man_1, levels = man_lev)
post_hoc_emp_fin$man_2 <- factor(post_hoc_emp_fin$man_2, levels = man_lev)
table(post_hoc_sim$man_1, post_hoc_sim$man_2)
table(post_hoc_sim$man_2, post_hoc_sim$man_1)
View(post_hoc_emp_fin)
table(post_hoc_emp_fin$man_2, post_hoc_emp_fin$man_1)
post_hoc_sim<- iterations_post_hocs %>% separate(contrast, into = c("man_1", "man_2"), sep = " - ") %>%
select(man_1,man_2,estimate,interation)
#smimulated
man_lev<-c("E","SE","M","SI","I")
post_hoc_sim<- iterations_post_hocs %>% separate(contrast, into = c("man_1", "man_2"), sep = " - ") %>%
select(man_1,man_2,estimate,iteration)
post_hoc_sim$man_1 <- factor(post_hoc_sim$man_1, levels = man_lev)
post_hoc_sim$man_2 <- factor(post_hoc_sim$man_2, levels = man_lev)
#empirical
post_hoc_emp_pre<- man_pairs_emp %>% separate(contrast, into = c("man_1", "man_2"), sep = " - ") %>%
select(-p.value) %>% mutate (iteration = 0) %>% select(man_1,man_2,estimate,iteration)#empirical
new_combinations_empirical <- data.frame(
man_1 = c("E", "SE", "M", "SI", "I"),
man_2 = c("E", "SE", "M", "SI", "I"),
estimate = rep(0, 5),
iteration = rep(0, 5)
)
post_hoc_emp_fin<-rbind(post_hoc_emp_pre,new_combinations_empirical)
post_hoc_emp_fin$man_1 <- factor(post_hoc_emp_fin$man_1, levels = man_lev)
post_hoc_emp_fin$man_2 <- factor(post_hoc_emp_fin$man_2, levels = man_lev)
table(post_hoc_sim$man_2, post_hoc_sim$man_1)
table(post_hoc_emp_fin$man_2, post_hoc_emp_fin$man_1)
View(post_hoc_emp_fin)
post_hoc_sim$man_1 <- factor(post_hoc_sim$man_1, levels = man_lev)
post_hoc_sim$man_2 <- factor(post_hoc_sim$man_2, levels = man_lev)
table(post_hoc_sim$man_2, post_hoc_sim$man_1)
View(post_hoc_sim)
posy_hoc_sim<-post_hoc_sim %>% arrange(man_!)
posy_hoc_sim<-post_hoc_sim %>% arrange(man_1)
post_hoc_sim<-post_hoc_sim %>% arrange(man_1)
table(post_hoc_sim$man_2, post_hoc_sim$man_1)
table(post_hoc_sim$man_1, post_hoc_sim$man_2)
#smimulated
man_lev<-c("E","SE","M","SI","I")
post_hoc_sim<- iterations_post_hocs %>% separate(contrast, into = c("man_1", "man_2"), sep = " - ") %>%
select(man_1,man_2,estimate,iteration)
post_hoc_sim$man_1 <- factor(post_hoc_sim$man_1, levels = man_lev)
post_hoc_sim$man_2 <- factor(post_hoc_sim$man_2, levels = man_lev)
post_hoc_sim<-post_hoc_sim %>% group_by(iteration) %>% arrange(man_1)
table(post_hoc_sim$man_1, post_hoc_sim$man_2)
table(post_hoc_sim$man_2, post_hoc_sim$man_1)
#smimulated
man_lev<-c("E","SE","M","SI","I")
post_hoc_sim<- iterations_post_hocs %>% separate(contrast, into = c("man_1", "man_2"), sep = " - ") %>%
select(man_1,man_2,estimate,iteration)
post_hoc_sim$man_1 <- factor(post_hoc_sim$man_1, levels = man_lev)
post_hoc_sim$man_2 <- factor(post_hoc_sim$man_2, levels = man_lev)
post_hoc_sim<-post_hoc_sim %>% group_by(iteration,man_1) %>% arrange(man_1)
#empirical
post_hoc_emp_pre<- man_pairs_emp %>% separate(contrast, into = c("man_1", "man_2"), sep = " - ") %>%
select(-p.value) %>% mutate (iteration = 0) %>% select(man_1,man_2,estimate,iteration)#empirical
new_combinations_empirical <- data.frame(
man_1 = c("E", "SE", "M", "SI", "I"),
man_2 = c("E", "SE", "M", "SI", "I"),
estimate = rep(0, 5),
iteration = rep(0, 5)
)
post_hoc_emp_fin<-rbind(post_hoc_emp_pre,new_combinations_empirical)
post_hoc_emp_fin$man_1 <- factor(post_hoc_emp_fin$man_1, levels = man_lev)
post_hoc_emp_fin$man_2 <- factor(post_hoc_emp_fin$man_2, levels = man_lev)
table(post_hoc_sim$man_2, post_hoc_sim$man_1)
table(post_hoc_emp_fin$man_2, post_hoc_emp_fin$man_1)
table(post_hoc_sim$man_2, post_hoc_sim$man_1)
#smimulated
man_lev<-c("E","SE","M","SI","I")
post_hoc_sim<- iterations_post_hocs %>% separate(contrast, into = c("man_1", "man_2"), sep = " - ") %>%
select(man_1,man_2,estimate,iteration)
post_hoc_sim$man_1 <- factor(post_hoc_sim$man_1, levels = man_lev)
post_hoc_sim$man_1 <- factor(post_hoc_sim$man_1, levels = man_lev)
post_hoc_sim$man_2 <- factor(post_hoc_sim$man_2, levels = man_lev)
#empirical
post_hoc_emp_pre<- man_pairs_emp %>% separate(contrast, into = c("man_1", "man_2"), sep = " - ") %>%
select(-p.value) %>% mutate (iteration = 0) %>% select(man_1,man_2,estimate,iteration)#empirical
new_combinations_empirical <- data.frame(
man_1 = c("E", "SE", "M", "SI", "I"),
man_2 = c("E", "SE", "M", "SI", "I"),
estimate = rep(0, 5),
iteration = rep(0, 5)
)
post_hoc_emp_fin<-rbind(post_hoc_emp_pre,new_combinations_empirical)
post_hoc_emp_fin$man_1 <- factor(post_hoc_emp_fin$man_1, levels = man_lev)
post_hoc_emp_fin$man_2 <- factor(post_hoc_emp_fin$man_2, levels = man_lev)
table(post_hoc_sim$man_2, post_hoc_sim$man_1)
table(post_hoc_emp_fin$man_2, post_hoc_emp_fin$man_1)
# plot
posthoc_distr_PP<- ggplot(data = post_hoc_sim, aes(x=estimate)) +
geom_histogram(fill = "steelblue") +
labs(y = "Count", x = "Estimate value") +
geom_vline(data = post_hoc_emp_fin[1:10,], mapping = aes(xintercept = estimate),
colour="#BB0000", linetype="dashed") +
facet_grid(man_2 ~ man_1)
posthoc_distr_PP
man_lev
man_2
library(emln)#multilayer package
library(readr)
library(ggplot2)
library(cowplot)
setwd("/Users/agustin/Desktop/Papers/Norwood_farm/Norwood_Tinio")
source("/Users/agustin/Desktop/Papers/Norwood_farm/Norwood_Tinio/Exploratory/Scenario_ES/functions.R")
# Upload dataframe of indirect effect of each simulation in each management (run in the HPC, keep 500 iterations)
E_ind_2<-read.csv("Data/HPC/E_ind_2hop_CP.csv", sep =",") #empirical extensive
# Upload dataframe of indirect effect of each simulation in each management (run in the HPC, keep 500 iterations)
E_ind_2<-read.csv("Data/HPC/E_ind_2hop_PP.csv", sep =",") #empirical extensive
SE_ind_2 <-read.csv("Data/HPC/SE_ind_2hop_sim_CP.csv", sep =",") %>% filter(iteration == "Emp" | iteration <=500)
M_ind_2 <-read.csv("Data/HPC/M_ind_2hop_sim_CP.csv", sep =",") %>% filter(iteration == "Emp" | iteration <=500)
SI_ind_2 <-read.csv("Data/HPC/SI_ind_2hop_sim_CP.csv", sep =",") %>% filter(iteration == "Emp" | iteration <=500)
I_ind_2 <-read.csv("Data/HPC/I_ind_2hop_sim_CP.csv", sep =",") %>% filter(iteration == "Emp" | iteration <=500)
Ind_2hop_sim<-rbind(E_ind_2, SE_ind_2,M_ind_2,SI_ind_2,I_ind_2)
# Join both 1 and 2 hops indirect effects dataframes
Indirect_1hop<-read.csv("Data/ind_1hop_sim_CP.csv", sep =",") %>%
filter((iteration == "Emp" | iteration <=500) & services_to !="None")
# 1 hop
Indirect_1hop_sim<-Indirect_1hop %>%  rename("services" ="services_from",
"node_id" = "node_from",
"taxon" = "taxon_from") %>%
mutate(node_int = NA)
Indirect_1hop_sim<-Indirect_1hop_sim[,c(1,2,4,6,3,10,5,7,9,8)]
# 2 hop
Indirect_2hop_sim2<-Ind_2hop_sim %>% rename("taxon" = "taxon_from")
#  Total Indirect effect of ES
I_ES_sim <- rbind(Indirect_1hop_sim,Indirect_2hop_sim2)
write.csv(I_ES_sim,"Data/Indirect_ES_sim_CP.csv", row.names= FALSE)
View(I_ES_sim)
View(I_ES_sim)
#upload and prepare dataframe
output_ind_ES<- read.csv("Data/Indirect_ES_sim_CP.csv", sep =",")
#upload and prepare dataframe
output_ind_ES<- read.csv("Data/Indirect_ES_sim_CP.csv", sep =",")
output_ind_ES$management <- factor(output_ind_ES$management, levels = c("E", "SE", "M", "SI","I")) #change order of factors
output_ind_ES$management <- factor(output_ind_ES$management, levels = c("E", "SE", "M", "SI","I")) #change order of factors
#Empirical
Prop_indir_Emp<-output_ind_ES %>% filter(iteration == "Emp") %>%
group_by(management,services_to) %>%
mutate(tot = n()) %>% ungroup() %>%
group_by(services_to) %>%
mutate(prop = tot/max(tot)) %>%  #prop of indirect effects on E(D)S retained in the empirical
dplyr::select(management,services_to,tot,prop) %>%
unique() %>% rename("Prop_mean" = "prop") %>%
mutate (type = "Empirical")
# adjust the extreme values according to the beta conditions
Prop_indir_Emp$Prop_mean <- ifelse(Prop_indir_Emp$Prop_mean == 0, 0.000001,
ifelse(Prop_indir_Emp$Prop_mean == 1, 0.9999999, Prop_indir_Emp$Prop_mean))
#Simulations
Prop_ind_null<-output_ind_ES %>% filter(!(iteration == "Emp" & management !="E")) %>%
group_by(management,iteration,services_to) %>%
mutate(tot = n(),
tot_emp = case_when( #Values of denominator
services_to == "Crop production"~ 280,
services_to == "Pollination" ~ 18733,
services_to == "Crop damage"~ 9816,
services_to == "Pest control"~ 3261,
services_to == "Seed dispersal" ~ 4154,
services_to == "Butterfly watching"~ 3515,
services_to == "Bird watching"~ 5722 )) %>% ungroup() %>%
group_by(services_to) %>%
mutate(Prop_mean = tot/tot_emp) %>%  #prop of E(D)S rtained across habitat management per iteration and habitat management
dplyr::select(management,iteration,services_to,Prop_mean) %>%
unique() %>% mutate(type = "Null")
# adjust the extreme values according to the beta conditions
Prop_ind_null$Prop_mean <- ifelse(Prop_ind_null$Prop_mean == 0, 0.000001,
ifelse(Prop_ind_null$Prop_mean == 1, 0.9999999, Prop_ind_null$Prop_mean))
View(Prop_ind_null)
write.csv(Prop_ind_null, "Data/Prop_ind_null_CP.csv",  row.names = FALSE)
# empirical
Prop_ind_emp <- glmmTMB (Prop_mean ~ management + services_to, family=beta_family(link="logit"),
data = Prop_indir_Emp)# the best mode #model used in the empirical
par_emp<-Anova(Prop_ind_emp)
par_emp<-Anova(Prop_ind_emp)
post_man_emp <-emmeans(Prop_ind_emp, ~ management) #posthoc management
man_pairs_emp <- as.data.frame(pairs(post_man_emp))
#Null
#we do the same model for each iteration to create the null distribution of the model coefficient
Prop_ind_null<- read.csv("Data/Prop_ind_null_CP.csv", sep =",")
iterations_coefficients<-NULL
iterations_post_hocs<-NULL
iterations_rem<- unique(Prop_ind_null$iteration)
rm(output_ind_ES)
iterations_rem<- unique(Prop_ind_null$iteration)
iterations<- iterations_rem[2:length(iterations_rem)]#separate between interations and Empirical
for (i in iterations){ #for each iteration
print(i)
iteration_coeff<-Prop_ind_null %>% filter(iteration == i | iteration == "Emp")
glmm_val_iterations <- glmmTMB (Prop_mean ~ management + services_to,family=beta_family(link="logit"), data = iteration_coeff)
par<-Anova(glmm_val_iterations)
post_man <-emmeans(glmm_val_iterations, ~ management) #posthoc management
man_pairs <- as.data.frame(pairs(post_man))
iterations_coefficients <- rbind(iterations_coefficients,
tibble(iteration = i,
chisqr_man = par$Chisq[1],
chisqr_ser = par$Chisq[2],
pval_man = par[1,3],
pval_ser = par[2,3],
))
iterations_post_hocs <- rbind(iterations_post_hocs,
tibble(man_pairs[,c("contrast","estimate","p.value")],
iteration = rep(i,10)))
}
iterations_coefficients
write.csv(iterations_coefficients, "Data/iterations_coefficients_indirect_CP.csv", row.names = FALSE)
iterations_post_hocs
write.csv(iterations_post_hocs, "Data/iterations_post_hocs_indirect_CP.csv", row.names = FALSE)
#General Test
greater <- sum(iterations_coefficients$chisqr_man > par_emp[1,1])
less <- sum(iterations_coefficients$chisqr_man  < par_emp[1,1])
p_management<- 2 * min(greater, less) / 500 #calculate manually t-test two tailed
#Merge simulated and empirical
iterations_sim_empirical<-rbind(iterations_coefficients,tibble(
iteration = "Empirical",
chisqr_man = par_emp$Chisq[1],
chisqr_ser = par_emp$Chisq[2],
pval_man = par_emp[1,3],
pval_ser = par_emp[2,3],
)) %>% mutate(iteration = ifelse(iteration == "Empirical", "Empirical","Null")) %>% rename("Type "= "iteration")
#Plot general
iterations_sim_empirical<-iterations_coefficients %>% mutate(type = "Null")
iterations_sim_empirical %>% ggplot(aes(x = chisqr_man, fill= type))+
geom_density(alpha = 0.6)+
geom_vline(xintercept = par_emp[1,1], linetype = "dashed", color = "#FB3B1E") + #line represting rsquared empirical
labs(x= "Statistic", y="Density")+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=15, color='black'),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))
ggsave("Graphs/distri_indirect_CP.png")
# Plot combination of treatments level
iterations_post_hocs<-read.csv("Data/iterations_post_hocs_indirect_CP.csv", sep =",")
#Post hoc (each combination of management )
p_contrast_man<-NULL
for (i in unique(iterations_post_hocs$contrast)){
#filter data
post_comb<-iterations_post_hocs %>% filter(contrast == i) #filter per combination of treatmens (simulated data)
post_emp<-man_pairs_emp %>% filter(contrast == i) #filter per combination of treatmens (empirical)
#test
greater <- sum(post_comb$estimate >  post_emp$estimate)
less <- sum(post_comb$estimate  <  post_emp$estimate)
p_comb<- 2 * min(greater, less) / 500 #calculate manually t-test two tailed
#storage
p_contrast_man <- rbind(p_contrast_man,
tibble(contrast = i,
p_value = p_comb))
}
p_contrast_man
#smimulated
man_lev<-c("E","SE","M","SI","I")
post_hoc_sim<- iterations_post_hocs %>% separate(contrast, into = c("man_1", "man_2"), sep = " - ") %>%
select(man_1,man_2,estimate,iteration)
post_hoc_sim$man_1 <- factor(post_hoc_sim$man_1, levels = man_lev)
post_hoc_sim$man_2 <- factor(post_hoc_sim$man_2, levels = man_lev)
#empirical
post_hoc_emp_pre<- man_pairs_emp %>% separate(contrast, into = c("man_1", "man_2"), sep = " - ") %>%
select(-p.value) %>% mutate (iteration = 0) %>% select(man_1,man_2,estimate,iteration)#empirical
new_combinations_empirical <- data.frame(
man_1 = c("E", "SE", "M", "SI", "I"),
man_2 = c("E", "SE", "M", "SI", "I"),
estimate = rep(0, 5),
iteration = rep(0, 5)
)
post_hoc_emp_fin<-rbind(post_hoc_emp_pre,new_combinations_empirical)
post_hoc_emp_fin$man_1 <- factor(post_hoc_emp_fin$man_1, levels = man_lev)
post_hoc_emp_fin$man_2 <- factor(post_hoc_emp_fin$man_2, levels = man_lev)
# plot
posthoc_distr_PP<- ggplot(data = post_hoc_sim, aes(x=estimate)) +
geom_histogram(fill = "steelblue") +
labs(y = "Count", x = "Estimate value") +
geom_vline(data = post_hoc_emp_fin[1:10,], mapping = aes(xintercept = estimate),
colour="#BB0000", linetype="dashed") +
facet_grid(man_2 ~ man_1)
# plot
posthoc_distr_CP<- ggplot(data = post_hoc_sim, aes(x=estimate)) +
geom_histogram(fill = "steelblue") +
labs(y = "Count", x = "Estimate value") +
geom_vline(data = post_hoc_emp_fin[1:10,], mapping = aes(xintercept = estimate),
colour="#BB0000", linetype="dashed") +
facet_grid(man_2 ~ man_1)
posthoc_distr_CP
#smimulated
man_lev<-c("E","SE","M","SI","I")
post_hoc_sim<- iterations_post_hocs %>% separate(contrast, into = c("man_1", "man_2"), sep = " - ") %>%
select(man_1,man_2,estimate,iteration)
post_hoc_sim$man_1 <- factor(post_hoc_sim$man_1, levels = man_lev)
#empirical
post_hoc_emp_pre<- man_pairs_emp %>% separate(contrast, into = c("man_1", "man_2"), sep = " - ") %>%
select(-p.value) %>% mutate (iteration = 0) %>% select(man_1,man_2,estimate,iteration)#empirical
new_combinations_empirical <- data.frame(
man_1 = c("E", "SE", "M", "SI", "I"),
man_2 = c("E", "SE", "M", "SI", "I"),
estimate = rep(0, 5),
iteration = rep(0, 5)
)
post_hoc_emp_fin<-rbind(post_hoc_emp_pre,new_combinations_empirical)
post_hoc_emp_fin$man_1 <- factor(post_hoc_emp_fin$man_1, levels = man_lev)
post_hoc_emp_fin$man_2 <- factor(post_hoc_emp_fin$man_2, levels = man_lev)
# plot
posthoc_distr_CP<- ggplot(data = post_hoc_sim, aes(x=estimate)) +
geom_histogram(fill = "steelblue") +
labs(y = "Count", x = "Estimate value") +
geom_vline(data = post_hoc_emp_fin[1:10,], mapping = aes(xintercept = estimate),
colour="#BB0000", linetype="dashed") +
facet_grid(man_2 ~ man_1)
posthoc_distr_CP
#smimulated
man_lev<-c("E","SE","M","SI","I")
post_hoc_sim<- iterations_post_hocs %>% separate(contrast, into = c("man_1", "man_2"), sep = " - ") %>%
select(man_1,man_2,estimate,iteration)
post_hoc_sim$man_1 <- factor(post_hoc_sim$man_1, levels = man_lev)
#empirical
post_hoc_emp_pre<- man_pairs_emp %>% separate(contrast, into = c("man_1", "man_2"), sep = " - ") %>%
select(-p.value) %>% mutate (iteration = 0) %>% select(man_1,man_2,estimate,iteration)#empirical
new_combinations_empirical <- data.frame(
man_1 = c("E", "SE", "M", "SI", "I"),
man_2 = c("E", "SE", "M", "SI", "I"),
estimate = rep(0, 5),
iteration = rep(0, 5)
)
post_hoc_emp_fin<-rbind(post_hoc_emp_pre,new_combinations_empirical)
post_hoc_emp_fin$man_1 <- factor(post_hoc_emp_fin$man_1, levels = man_lev)
# plot
posthoc_distr_CP<- ggplot(data = post_hoc_sim, aes(x=estimate)) +
geom_histogram(fill = "steelblue") +
labs(y = "Count", x = "Estimate value") +
geom_vline(data = post_hoc_emp_fin[1:10,], mapping = aes(xintercept = estimate),
colour="#BB0000", linetype="dashed") +
facet_grid(man_2 ~ man_1)
posthoc_distr_CP
#smimulated
man_lev<-c("E","SE","M","SI","I")
post_hoc_sim<- iterations_post_hocs %>% separate(contrast, into = c("man_1", "man_2"), sep = " - ") %>%
select(man_1,man_2,estimate,iteration)
post_hoc_sim$man_1 <- factor(post_hoc_sim$man_1, levels = man_lev)
post_hoc_sim$man_2 <- factor(post_hoc_sim$man_2, levels = man_lev)
#empirical
post_hoc_emp_pre<- man_pairs_emp %>% separate(contrast, into = c("man_1", "man_2"), sep = " - ") %>%
select(-p.value) %>% mutate (iteration = 0) %>% select(man_1,man_2,estimate,iteration)#empirical
new_combinations_empirical <- data.frame(
man_1 = c("E", "SE", "M", "SI", "I"),
man_2 = c("E", "SE", "M", "SI", "I"),
estimate = rep(0, 5),
iteration = rep(0, 5)
)
post_hoc_emp_fin<-rbind(post_hoc_emp_pre,new_combinations_empirical)
post_hoc_emp_fin$man_1 <- factor(post_hoc_emp_fin$man_1, levels = man_lev)
post_hoc_emp_fin$man_2 <- factor(post_hoc_emp_fin$man_2, levels = man_lev)
# plot
posthoc_distr_CP<- ggplot(data = post_hoc_sim, aes(x=estimate)) +
geom_histogram(fill = "steelblue") +
labs(y = "Count", x = "Estimate value") +
geom_vline(data = post_hoc_emp_fin[1:10,], mapping = aes(xintercept = estimate),
colour="#BB0000", linetype="dashed") +
facet_grid(man_2 ~ man_1)
posthoc_distr_CP
View(Prop_ind_null)
Prop_indir_sim<- Prop_ind_null %>% group_by(management,services_to) %>%
summarise(Prop_mean = mean(Prop_mean))
View(Prop_indir_sim)
View(Prop_indir_Emp)
View(Prop_indir_Emp)
View(Prop_indir_sim)
Prop_indir_sim<- Prop_ind_null %>% group_by(management,services_to) %>%
summarise(Prop_mean = mean(Prop_mean)) %>%
filter(management !="E")
View(Prop_indir_sim)
# Merge empirical and simulations and remove extensive scenario
Prop_indir_sim2 <- rbind(Prop_ind_Emp, Prop_indir_sim)
View(Prop_indir_Emp)
# Merge empirical and simulations and remove extensive scenario
Prop_indir_sim2 <- rbind(Prop_indir_Emp, Prop_indir_sim)
View(Prop_indir_sim2)
Prop_indir_sim<- Prop_ind_null %>% group_by(management,services_to) %>%
summarise(Prop_mean = mean(Prop_mean)) %>%
filter(management !="E") %>% mutate(type = "Null")
# Merge empirical and simulations and remove extensive scenario
Prop_indir_sim2 <- rbind(Prop_indir_Emp, Prop_indir_sim)
#Plot
prop_EDS_indirect <- Prop_indir_sim2%>% ggplot(aes(x = management, y = Prop_mean)) +
geom_boxplot(aes(colour = type),
outlier.shape = NA) +
geom_point(aes(fill = factor(services_to), color = type),
position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.4),
pch = 21, size = 2.5, stroke = 1, show.legend = TRUE) +
scale_fill_brewer(palette = "PRGn")+
scale_color_manual(values = c("black","#d7301f"))+
scale_y_continuous(name = "Fraction of E(D)S retained", limits = c(0, 1)) +
scale_x_discrete(name = "Management")+
theme(panel.background = element_rect(fill = "white"),
panel.grid.major=element_line(color = "gray"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13, color='black'),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =14),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))
prop_EDS_indirect
# Merge empirical and simulations and remove extensive scenario
Prop_indir_sim2 <- rbind(Prop_indir_Emp, Prop_indir_sim)
Prop_indir_sim2$management <- factor(Prop_indir_sim2$management, levels = c("E", "SE", "M", "SI","I")) #change order of factors
#Plot
prop_EDS_indirect <- Prop_indir_sim2%>% ggplot(aes(x = management, y = Prop_mean)) +
geom_boxplot(aes(colour = type),
outlier.shape = NA) +
geom_point(aes(fill = factor(services_to), color = type),
position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.4),
pch = 21, size = 2.5, stroke = 1, show.legend = TRUE) +
scale_fill_brewer(palette = "PRGn")+
scale_color_manual(values = c("black","#d7301f"))+
scale_y_continuous(name = "Fraction of E(D)S retained", limits = c(0, 1)) +
scale_x_discrete(name = "Management")+
theme(panel.background = element_rect(fill = "white"),
panel.grid.major=element_line(color = "gray"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13, color='black'),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =14),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))
prop_EDS_indirect
ggsave("Graphs/Indirect_ES_sim_CP.png")
ggsave("Graphs/Indirect_ES_sim_CP.png")
