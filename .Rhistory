#Homogeneity
EM<-resid(Prop_indi, type= "response")
FM<-fitted(Prop_indi)
plot(x=FM, y=EM, xlab = "Ajustados", ylab = "Residuales normalizados")
abline(0,0, col="red", lwd= 3)
#independence
E1_lme<-resid(Prop_indi, type= "response")
boxplot(E1_lme ~ management, data = Prop_ind, main = "Management")
# posthoc
post_ind<- emmeans(Prop_indi, ~ management)
pairs(post_ind)
post_ser<- emmeans(Prop_indi, ~ services_to)
pairs(post_ser)
#prepare dataframe
tot_services_emp<-direct_ES %>% filter(management=="E") %>% group_by(management,services) %>%
summarize(tot_empirical = sum(weight))
dir_amount<-direct_ES %>% group_by(management,services) %>%
summarize(tot = sum(weight)) %>% ungroup() %>%
mutate(Extensive_tot = case_when(
services == "Bird watching"~ 330890.9200,
services == "Butterfly watching"~ 244.7676,
services == "Crop damage"~ 645963.6269,
services == "Resource provision"~ 209300.0000,
services == "Pest control"~ 7108.3108,
services == "Pollination"~ 36736.7426,
services == "Seed dispersal"~ 305215.3300),
ratio_change = tot / Extensive_tot  #ratio of change: values higher than 1 indicates increasing in the amount of E(D)S
)
# Model
library(glmmTMB)
m_amount<- glmmTMB(ratio_change ~ management + services,family = Gamma(link = "log"),
data = dir_amount)
m_amount_2<- glmmTMB(ratio_change ~ management + (1|services),family = Gamma(link = "log"),
data = dir_amount)
Anova(m_amount)
m_amount_2<- glmmTMB(ratio_change ~ management + (1|services),family = Gamma(link = "log"),
data = dir_amount)
Anova(m_amount)
m_amount<- glmmTMB(ratio_change ~ management:services,family = Gamma(link = "log"),
data = dir_amount)
Anova(m_amount)
summary(m_amount)
m_amount<- glmmTMB(ratio_change ~ management +services,family = Gamma(link = "log"),
data = dir_amount)
m_amount_2<- glmmTMB(ratio_change ~ management + (1|services),family = Gamma(link = "log"),
data = dir_amount)
AIC(m_amount,m_amount_2)
#m_amount_2<- glmmTMB(ratio_change ~ management + (1|services),family = Gamma(link = "log"),
#          data = dir_amount)
Anova(m_amount)
summary(m_amount)
# posthoc
post_amount<- emmeans(m_amount, ~ management)
pairs(post_amount)
post_amount_ser<- emmeans(m_amount, ~ services)
pairs(post_amount_ser)
#upload and prepare dataframe
direct_ES<- read.csv("Data/Land_use_dir_weighted_CP_intense.csv", sep =",") %>%
mutate(services = case_when(services == "Crop production"~ "Resource provision",
TRUE~services))
View(direct_ES)
direct_ES$management <- factor(direct_ES$management, levels = c("E", "SE", "M", "SI","I")) #change order of factors
Prop_dir<-direct_ES %>% group_by(management,services) %>%
mutate(tot = n()) %>% ungroup() %>%
group_by(services) %>%
mutate(prop = tot/max(tot)) %>%  #prop of E(D)S rtained across habitat management
dplyr::select(management,services,tot,prop) %>%
unique()
View(Prop_dir)
View(direct_ES)
Prop_dir<-direct_ES %>% group_by(management,services,node_id) %>%
mutate(tot = n())
Prop_dir<-direct_ES %>% group_by(management,services,node_id) %>%
mutate(tot = n()) %>% ungroup() %>%
group_by(node_id) %>%
mutate(prop = tot/max(tot))
Prop_dir<-direct_ES %>% group_by(management,services,node_id) %>%
mutate(tot = n())
Prop_dir<-direct_ES %>% group_by(management,services,node_id) %>%
mutate(tot = n()) %>% ungroup() %>%
group_by(node_id)
Prop_dir<-direct_ES %>% group_by(management,node_id) %>%
mutate(tot = n())
#upload and prepare dataframe
direct_ES<- read.csv("Data/Land_use_dir_weighted_CP_intense.csv", sep =",") %>%
mutate(services = case_when(services == "Crop production"~ "Resource provision",
TRUE~services))
direct_ES$management <- factor(direct_ES$management, levels = c("E", "SE", "M", "SI","I")) #change order of factors
Prop_dir<-direct_ES %>% group_by(management,services) %>%
mutate(tot = n())
Prop_dir_SP<-direct_ES %>% group_by(management,node_id) %>%
mutate(tot = n())
View(Prop_dir_SP)
Prop_dir_SP<-direct_ES %>% group_by(management,node_id,services) %>%
mutate(tot = n())
Prop_dir_SP<-direct_ES %>% group_by(management,node_id,services) %>%
mutate(tot = n()) %>% ungroup() %>%
group_by(node_id) %>%
mutate(prop = tot/max(tot))
Prop_dir_SP<-direct_ES %>% group_by(management,node_id,services) %>%
mutate(tot = n())
# FOR SP level (change in the amount of ES provided)
tot_services_emp<-direct_ES %>% filter(management=="E") %>% group_by(management, node_id,services) %>%
summarize(tot_empirical = sum(weight))
View(tot_services_emp)
dir_amount_sp<-direct_ES %>% group_by(management,node_id,services) %>%
summarize(tot = sum(weight)) %>% ungroup() %>%
mutate(ratio_change = tot / tot_emp  #ratio of change: values higher than 1 indicates increasing in the amount of E(D)S
)
dir_amount_sp<-direct_ES %>% group_by(management,node_id,services) %>%
summarize(tot = sum(weight)) %>% ungroup() %>%
mutate(ratio_change = tot / tot_empirical) #ratio of change: values higher than 1 indicates increasing in the amount of E(D)S
# FOR SP level (change in the amount of ES provided)
tot_services_emp<-direct_ES %>% filter(management=="E") %>% group_by(management, node_id,services) %>%
summarize(tot_empirical = sum(weight))
View(tot_services_emp)
dir_amount_sp<-direct_ES %>% group_by(management,node_id,services) %>%
summarize(tot = sum(weight)) %>% ungroup() %>%
mutate(ratio_change = tot / tot_empirical) #ratio of change: values higher than 1 indicates increasing in the amount of E(D)S
dir_amount_sp<-direct_ES %>% group_by(management,node_id,services) %>%
mutate(tot_emp = sum(weight))
View(dir_amount_sp)
View(direct_ES)
#Amount of ES provided by each species
extensive_amount <- direct_ES %>%
filter(treatment == "E") %>%
select(node_id, services, weight)
#Amount of ES provided by each species
extensive_amount <- direct_ES %>%
filter(management == "E") %>%
select(node_id, services, weight)
View(extensive_amount)
dir_amount <- direct_ES %>%
left_join(extensive_amount, by = c("nodes_id", "services"), suffix = c("", "_extensive"))
dir_amount <- direct_ES %>%
left_join(extensive_amount, by = c("node_id", "services"), suffix = c("", "_extensive"))
View(dir_amount)
# Merging and other managements and calculate ratio of change
dir_amount <- direct_ES %>%
left_join(extensive_amount, by = c("node_id", "services"), suffix = c("", "_extensive")) %>%
mutate(ratio_change = weight / weight_extensive) #ratio of change: values higher than 1 indicates increasing in the amount of E(D)S
m_amount<- glmmTMB(ratio_change ~ management +services + (1|node_id),family = Gamma(link = "log"),
data = dir_amount)
Anova(m_amount)
m_amount<- glmmTMB(ratio_change ~ management:services + (1|node_id),family = Gamma(link = "log"),
data = dir_amount)
Anova(m_amount)
summary(m_amount)
#prepare dataframe
tot_services_emp<-direct_ES %>% filter(management=="E") %>% group_by(management,services) %>%
summarize(tot_empirical = sum(weight))
dir_amount_2<-direct_ES %>% group_by(management,services) %>%
summarize(tot = sum(weight)) %>% ungroup() %>%
mutate(Extensive_tot = case_when(
services == "Bird watching"~ 330890.9200,
services == "Butterfly watching"~ 244.7676,
services == "Crop damage"~ 645963.6269,
services == "Resource provision"~ 209300.0000,
services == "Pest control"~ 7108.3108,
services == "Pollination"~ 36736.7426,
services == "Seed dispersal"~ 305215.3300),
ratio_change = tot / Extensive_tot  #ratio of change: values higher than 1 indicates increasing in the amount of E(D)S
)
m_amount_2<- glmmTMB(ratio_change ~ management +services,family = Gamma(link = "log"),
data = dir_amount)
AIC(m_amount,m_amount_2)
#Homogeneity
EM<-resid(m_amount, type= "response")
FM<-fitted(m_amount)
plot(x=FM, y=EM, xlab = "Ajustados", ylab = "Residuales normalizados")
abline(0,0, col="red", lwd= 3)
#independence
E1_lme<-resid(m_amount, type= "response")
boxplot(E1_lme~dir_amount$management, main="Management")
# posthoc
post_amount<- emmeans(m_amount, ~ management)
# posthoc
emms <- emmeans(model, pairwise ~ factor1 | factor2)
contrast <- contrast(emms, method = "pairwise")  # pairwise comparisons
# posthoc
emms <- emmeans(m_amount, pairwise ~ management | services)
contrast <- contrast(emms, method = "pairwise")  # pairwise comparisons
summary(contrast)
# posthoc
emms <- emmeans(m_amount, pairwise ~ management | services)
contrast <- contrast(emms, method = "pairwise")  # pairwise comparisons
summary(contrast)
contrast
# posthoc
library(multcomp)
Anova(m_amount)
summary(m_amount)
#Homogeneity
EM<-resid(m_amount, type= "response")
FM<-fitted(m_amount)
plot(x=FM, y=EM, xlab = "Ajustados", ylab = "Residuales normalizados")
abline(0,0, col="red", lwd= 3)
#independence
E1_lme<-resid(m_amount, type= "response")
boxplot(E1_lme~dir_amount$management, main="Management")
# posthoc
emms <- emmeans(m_amount, pairwise ~ management | services)
contrast <- contrast(emms, method = "pairwise")  # pairwise comparisons
summary(contrast)
contrast
library(emln)#multilayer package
library(readr)
library(ggplot2)
library(cowplot)
setwd("/Users/agustin/Desktop/Papers/Norwood_farm/Norwood_Tinio")
#Amount of ES provided by each species
extensive_amount <- direct_ES %>%
filter(management == "E") %>%
select(node_id, services, weight)
#upload and prepare dataframe
direct_ES<- read.csv("Data/Land_use_dir_weighted_PP_intense.csv", sep =",")
direct_ES$management <- factor(direct_ES$management, levels = c("E", "SE", "M", "SI","I")) #change order of factors
# Model
library("glmmTMB")
library("stats4")
library("bbmle")
library(emmeans)
library(car)
#Amount of ES provided by each species
extensive_amount <- direct_ES %>%
filter(management == "E") %>%
select(node_id, services, weight)
View(direct_ES)
#Amount of ES provided by each species
extensive_amount <- direct_ES %>%
filter(management == "E") %>%
dplyrr::select(node_id, services, weight)
#Amount of ES provided by each species
extensive_amount <- direct_ES %>%
filter(management == "E") %>%
dplyr::select(node_id, services, weight)
# Merging and other managements and calculate ratio of change
dir_amount <- direct_ES %>%
left_join(extensive_amount, by = c("node_id", "services"), suffix = c("", "_extensive")) %>%
mutate(ratio_change = weight / weight_extensive) #ratio of change: values higher than 1 indicates increasing in the amount of E(D)S
# Model
library(glmmTMB)
m_amount<- glmmTMB(ratio_change ~ management:services + (1|node_id),family = Gamma(link = "log"),
data = dir_amount)
Anova(m_amount)
m_amount<- glmmTMB(ratio_change ~ management:services + (1|node_id),family = Gamma(link = "log"),
control = glmmTMBControl(optCtrl = list(iter.max = 10000, eval.max = 10000))
data = dir_amount)
m_amount<- glmmTMB(ratio_change ~ management:services + (1|node_id),family = Gamma(link = "log"),
control = glmmTMBControl(optCtrl = list(iter.max = 10000, eval.max = 10000)),
data = dir_amount)
Anova(m_amount)
summary(m_amount)
View(dir_amount)
#Amount of ES provided by each species
extensive_amount <- direct_ES %>%
filter(management == "E") %>%
dplyr::select(node_id, services, weight)
View(extensive_amount)
# Merging and other managements and calculate ratio of change
dir_amount <- direct_ES %>%
left_join(extensive_amount, by = c("node_id", "services"), suffix = c("", "_extensive")) %>%
mutate(ratio_change = weight / weight_extensive) #ratio of change: values higher than 1 indicates increasing in the amount of E(D)S
# Model
library(glmmTMB)
m_amount<- glmmTMB(ratio_change ~ management:services + (1|node_id),family = Gamma(link = "log"),
control = glmmTMBControl(optCtrl = list(iter.max = 10000, eval.max = 10000)),
data = dir_amount)
vignette("troubleshooting", package = "glmmTMB")
fixef(m_amount)
# Model
library(glmmTMB)
m_amount<- glmmTMB(ratio_change ~ management + services + (1|node_id),family = Gamma(link = "log"),
control = glmmTMBControl(optCtrl = list(iter.max = 10000, eval.max = 10000)),
data = dir_amount)
Anova(m_amount)
summary(m_amount)
fixef(m_amount)
# Model
library(glmmTMB)
m_amount<- glmmTMB(ratio_change ~ management + services + (1|node_id),family = Gamma(link = "log"),
data = dir_amount)
Anova(m_amount)
summary(m_amount)
fixef(m_amount)
m_amount<- glmmTMB(ratio_change ~ management:services,family = Gamma(link = "log"),
data = dir_amount)
m_amount_2<- glmmTMB(ratio_change ~ management + (1|node_id),family = Gamma(link = "log"),
data = dir_amount)
AIC(m_amount_1,m_amount_2)
m_amount_1<- glmmTMB(ratio_change ~ management + services + (1|node_id),family = Gamma(link = "log"),
data = dir_amount)
m_amount_2<- glmmTMB(ratio_change ~ management + (1|node_id),family = Gamma(link = "log"),
data = dir_amount)
AIC(m_amount_1,m_amount_2)
#m_amount_2<- glmmTMB(ratio_change ~ management + (1|node_id),family = Gamma(link = "log"),
#   data = dir_amount)
Anova(m_amount)
m_amount<- glmmTMB(ratio_change ~ management + services + (1|node_id),family = Gamma(link = "log"),
data = dir_amount) #model that best fit
#m_amount_2<- glmmTMB(ratio_change ~ management + (1|node_id),family = Gamma(link = "log"),
#   data = dir_amount)
Anova(m_amount)
m_amount<- glmmTMB(ratio_change ~ management + services + (1|node_id),family = Gamma(link = "log"),
data = dir_amount) #model that best fit
AIC(m_amount_1,m_amount)
AIC(m_amount_2,m_amount)
m_amount<- glmmTMB(ratio_change ~ management + (1|node_id),family = Gamma(link = "log"),
data = dir_amount) #model that best fit
AIC(m_amount_2,m_amount)
#m_amount_2<- glmmTMB(ratio_change ~ management + services (1|node_id),family = Gamma(link = "log"),
#   data = dir_amount)
Anova(m_amount)
summary(m_amount)
# Model
library(glmmTMB)
m_amount<- glmmTMB(ratio_change ~ management + (1|node_id),family = Gamma(link = "log"),
data = dir_amount) #model that best fit
#m_amount_2<- glmmTMB(ratio_change ~ management + services (1|node_id),family = Gamma(link = "log"),
#   data = dir_amount)
Anova(m_amount)
summary(m_amount)
#Homogeneity
EM<-resid(m_amount, type= "response")
FM<-fitted(m_amount)
plot(x=FM, y=EM, xlab = "Ajustados", ylab = "Residuales normalizados")
abline(0,0, col="red", lwd= 3)
#independence
E1_lme<-resid(m_amount, type= "response")
boxplot(E1_lme~dir_amount$management, main="Management")
# posthoc
post_amount<- emmeans(m_amount, ~ management)
pairs(post_amount)
#upload and prepare dataframe
output_ind_ES <- read.csv("Data/Land_use_output_weighted_PP_intense.csv", sep =",")
output_ind_ES$management <- factor(output_ind_ES$management, levels = c("E", "SE", "M", "SI","I")) #change order of factors
Prop_ind<-output_ind_ES %>% group_by(management,services_to) %>%
mutate(tot = n()) %>% ungroup() %>%
group_by(services_to) %>%
mutate(prop = tot/max(tot)) %>%  #prop of E(D)S rtained across habitat management
dplyr::select(management,services_to,tot,prop) %>% unique()
# adjust the extreme values according to the beta conditions
Prop_ind$prop <- ifelse(Prop_ind$prop == 0, 0.000001,
ifelse(Prop_ind$prop == 1, 0.9999999, Prop_ind$prop))
# Model
Prop_indi<-glmmTMB (prop ~ management + services_to, family=beta_family(link="logit"), data = Prop_ind)
Prop_indi_2<-glmmTMB (prop ~ management + ( 1| services_to), family=beta_family(link="logit"), data = Prop_ind)
Anova(Prop_indi)
summary(Prop_indi)
AIC(Prop_indi,Prop_indi_2)
#Homogeneity
EM<-resid(Prop_indi, type= "response")
FM<-fitted(Prop_indi)
plot(x=FM, y=EM, xlab = "Ajustados", ylab = "Residuales normalizados")
abline(0,0, col="red", lwd= 3)
#independence
E1_lme<-resid(Prop_indi, type= "response")
boxplot(E1_lme ~ management, data = Prop_ind, main = "Management")
# posthoc
post_ind<- emmeans(Prop_indi, ~ management)
pairs(post_ind)
post_ser<- emmeans(Prop_indi, ~ services_to)
pairs(post_ser)
#Get species in management Extensive
species_in_E <- direct_ES %>%
filter(management == "E") %>%
distinct(node_id)
#Add presence/absence of that species
direct_ES <- direct_ES %>%
mutate(presence = ifelse(node_id %in% species_in_E$node_id, 'present', 'not present'))
View(direct_ES)
#Get species in management Extensive
species_in_E <- direct_ES %>%
filter(management == "E") %>%
distinct(node_id) %>%
select(management,node_id,services)
#Get species in management Extensive
species_in_E <- direct_ES %>%
filter(management == "E") %>%
distinct(node_id) %>%
dyplr::select(management,node_id,services)
#Get species in management Extensive
species_in_E <- direct_ES %>%
filter(management == "E") %>%
distinct(node_id) %>%
dplyr::select(management,node_id,services)
species_in_E <- direct_ES %>%
filter(management == "E") %>%
distinct(node_id) %>%
dplyr::select(management,node_id,services)
#Get species in management Extensive
species_in_E <- direct_ES %>%
filter(management == "E") %>%
distinct(node_id) %>%
dplyr::select(node_id,services)
View(species_in_E)
#Get species in management Extensive
species_in_E <- direct_ES %>%
filter(management == "E") %>%
distinct(node_id) %>%
dplyr::select(node_id)
direct_ES<- read.csv("Data/Land_use_dir_weighted_CP_intense.csv", sep =",") %>%
mutate(services = case_when(services == "Crop production"~ "Resource provision",
TRUE~services))
# Create all unique combinations of node_id and management
all_combinations_species <- expand.grid(node_id = unique(direct_ES$node_id),
management = unique(direct_ES$management))
View(all_combinations_species)
# Step 2: Left join this with the original dataframe
direct_ES_full <- all_combinations_species %>%
left_join(by = c(direct_ES,"node_id", "management"))
# Step 2: Left join this with the original dataframe
direct_ES_full <- all_combinations_species %>%
left_join(direct_ES, by = c("node_id", "management"))
View(direct_ES_full)
# Step 3: Fill in missing data for the new rows
direct_ES_presence <- direct_ES_full %>%
mutate(
abun = ifelse(is.na(abun), 0, abun),  # Assuming absent species have an abundance of 0
presence = ifelse(is.na(presence), 'not present', presence)
)
# Step 3: Fill in missing data for the new rows
direct_ES_presence <- direct_ES_full %>%
mutate(
presence = ifelse(is.na(abun), 0, 1)
)
View(direct_ES_full)
View(direct_ES_presence)
# Step 3: Fill in missing data for the new rows
direct_ES_presence <- direct_ES_full %>%
mutate(
presence = ifelse(is.na(abun), 0, 1) ) %>%
select(management,node_id,services,presence)
# Step 3: Fill in missing data for the new rows
direct_ES_presence <- direct_ES_full %>%
mutate(
presence = ifelse(is.na(abun), 0, 1) ) %>%
dplyr::select(management,node_id,services,presence)
View(direct_ES_presence)
#Fill missing data with ES
direct_ES_presence_updated <- direct_ES_presence %>%
left_join(direct_ES %>% select(node_id, services), by = "node_id", suffix = c("", "_from_aux")) %>%
mutate(services = ifelse(is.na(services), services_from_aux, services)) %>%
select(-services_from_aux)
#Fill missing data with ES
direct_ES_presence_updated <- direct_ES_presence %>%
left_join(direct_ES %>% dplyr::select(node_id, services), by = "node_id", suffix = c("", "_from_aux")) %>%
mutate(services = ifelse(is.na(services), services_from_aux, services)) %>%
dplyr::select(-services_from_aux)
View(direct_ES_presence_updated)
#Fill missing data with ES
direct_ES_presence_updated <- direct_ES_presence %>%
left_join(direct_ES %>% dplyr::select(node_id, services), by = "node_id", suffix = c("", "_from_aux"),
relationship = "many-to-many") %>%
mutate(services = ifelse(is.na(services), services_from_aux, services)) %>%
dplyr::select(-services_from_aux)
View(direct_ES_presence_updated)
#Fill missing data with ES
direct_ES_presence_updated <- direct_ES_presence %>%
left_join(direct_ES %>% dplyr::select(node_id, services), by = "node_id", suffix = c("", "_from_aux"),
relationship = "many-to-many") %>%
mutate(services = ifelse(is.na(services), services_from_aux, services)) %>%
dplyr::select(-services_from_aux) %>% unique()
View(direct_ES_presence_updated)
#Model
pers_2<-glmer (presence ~ management:services + ( 1| node_id), family = binomial(link= "logit"), data = direct_ES_presence_updated)
# Model
library("glmmTMB")
library("stats4")
library("bbmle")
library(emmeans)
library(car)
#Model
library(lme4)
pers_2<-glmer (presence ~ management:services + ( 1| node_id), family = binomial(link= "logit"), data = direct_ES_presence_updated)
pers_2<-glmer (presence ~ management:services + ( 1| node_id), family = binomial(link= "logit"), data = direct_ES_presence_updated,
control = glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun = 10000)))
View(direct_ES_presence)
pers_2<-glmer (presence ~ management*services + ( 1| node_id), family = binomial(link= "logit"), data = direct_ES_presence_updated,
control = glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun = 10000)))
pers_2<-glmer (presence ~ management*services + ( 1| node_id), family = binomial(link= "logit"), data = direct_ES_presence_updated,
control = glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun = 10 * length(par)^2)))
pers_2<-glmer (presence ~ management*services + ( 1| node_id), family = binomial(link= "logit"), data = direct_ES_presence_updated,
control = glmerControl(optimizer = "bobyqa",
optCtrl = list(maxfun = 20000)))
pers_2<-glmer (presence ~ management+services + ( 1| node_id), family = binomial(link= "logit"), data = direct_ES_presence_updated,
control = glmerControl(optimizer = "bobyqa",
optCtrl = list(maxfun = 20000)))
#load packages
library(igraph)
library(dplyr)
library(tidyverse)
library(emln)
setwd("/Users/agustin/Desktop/Papers/Norwood_farm/Norwood_Tinio") #set directory
#upload and arrange dataframe
short_path_CP<-read.csv("Data/Land_use_shortpath_weighted_CP_intense.csv", row.names = 1) %>% mutate(land_use = "CP")
short_path_PP<-read.csv("Data/Land_use_shortpath_weighted_PP_intense.csv", row.names = 1)%>% mutate(land_use = "PP")
short_path_land_change<-rbind(short_path_CP,short_path_PP)
#calculate average short path of each species to all E(D)S in each habitat management
short_path_land_change_ave<- short_path_land_change %>% group_by(land_use, management,node_id) %>%
mutate(short_path_ave = mean(short_ave)) %>% select(-services, - short_ave) %>% unique()
?seelct
?select
detach("package:MASS", unload = TRUE)
#calculate average short path of each species to all E(D)S in each habitat management
short_path_land_change_ave<- short_path_land_change %>% group_by(land_use, management,node_id) %>%
mutate(short_path_ave = mean(short_ave)) %>% select(-services, - short_ave) %>% unique()
detach("package:tidyverse", unload = TRUE)
library(tidyverse)
#calculate average short path of each species to all E(D)S in each habitat management
short_path_land_change_ave<- short_path_land_change %>% group_by(land_use, management,node_id) %>%
mutate(short_path_ave = mean(short_ave)) %>% select(-services, - short_ave) %>% unique()
