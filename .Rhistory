state_nodes<-read.csv("Data/Land_use_rat_state_nodes_CP_intense.csv",header=T)
Perc_sp_lost <- state_nodes %>% filter(management == "E" | management == "I") %>%
group_by(management) %>%  summarise(Num_sp = n()) %>%
mutate(Perc_sp_lost= ((1 - Num_sp/551)*100))
tota_sp_trophic_lost <- state_nodes %>% filter(management == "E" ) %>%
group_by(management,taxon) %>%
summarize(tot_trophic = n())
Perc_sp_trophic <- state_nodes %>% filter(management == "I") %>%
group_by(management, taxon) %>%
summarize(tot = n()) %>% ungroup() %>%
mutate(Extensive_tot = case_when(
taxon == "Aphid"~ 44,
taxon == "Butterfly"~ 16,
taxon == "Crop"~ 6,
taxon == "Flower-visiting"~ 237,
taxon == "Leaf-miner parasitoid"~ 93,
taxon == "Plant"~ 93,
taxon == "Insect seed-feeder parasitoid"~ 17,
taxon == "Primary aphid parasitoid"~ 11,
taxon == "Rodent ectoparasite"~ 8,
taxon == "Secondary aphid parasitoid"~ 7,
taxon == "Seed-feeding bird"~ 12,
taxon == "Seed-feeding insect"~ 19,
taxon == "Seed-feeding rodent"~ 4),
Perc_sp_lost= ((1 - tot/Extensive_tot)*100)  #ratio of change: values higher than 1 indicates increasing in the amount of E(D)S
)
#direct
direct_ES<- read.csv("Data/Land_use_dir_weighted_CP_intense.csv", sep =",")
direct_ES$management <- factor(direct_ES$management, levels = c("E", "SE", "M", "SI","I","IM")) #change order of factors
#indirect
output_ind_ES <- read.csv("Data/Land_use_output_weighted_CP_intense.csv", sep =",")
output_ind_ES$management <- factor(output_ind_ES$management, levels = c("E", "SE", "M", "SI","I","IM")) #change order of factors
color_services <-tibble(
services = unique(direct_ES$services),
color = c('#1b9e77','#d95f02','#7570b3','#e7298a','#2c7fb8','#e6ab02','#a6761d'))
#direct
Prop<-direct_ES %>% group_by(management,services) %>%
mutate(tot = n()) %>% ungroup() %>%
group_by(services) %>%
mutate(prop = tot/max(tot)) %>%  #prop of E(D)S rtained across habitat management
select(management,services,tot,prop) %>% unique()
#direct
Prop<-direct_ES %>% group_by(management,services) %>%
mutate(tot = n()) %>% ungroup() %>%
group_by(services) %>%
mutate(prop = tot/max(tot)) %>%  #prop of E(D)S rtained across habitat management
select(management,services,tot,prop) %>% unique()
prop_EDS_direct<- Prop %>% ggplot(aes(x = management, y = prop)) +
geom_boxplot(color = "black") +
geom_point(position=position_jitterdodge(jitter.width=2, dodge.width = 0.5),
pch=21, aes(fill=factor(services)), size = 3.5, show.legend = T) +
scale_fill_manual(values = color_services$color) +
scale_y_continuous(name = "Prop. of direct E(D)S retained", limits = c(0, 1)) +
scale_x_discrete(name = "Management")+
theme(panel.background = element_rect(fill = "white"),
panel.grid.major=element_line(color = "gray"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13, color='black'),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =14),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 14, color = "black"),
legend.text = element_text(size = 12))
prop_EDS_direct<- Prop %>% ggplot(aes(x = management, y = prop)) +
geom_boxplot(color = "black") +
geom_point(position=position_jitterdodge(jitter.width=2, dodge.width = 0.5),
pch=21, aes(fill=factor(services)), size = 3.5, show.legend = T) +
scale_fill_manual(values = color_services$color) +
scale_y_continuous(name = "Prop. of direct E(D)S retained", limits = c(0, 1)) +
scale_x_discrete(name = "Management")+
theme(panel.background = element_rect(fill = "white"),
panel.grid.major=element_line(color = "gray"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13, color='black'),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =14),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 14, color = "black"),
legend.text = element_text(size = 12))+
labs(fill = "E(D)S")
prop_EDS_direct
ggsave("Graphs/Land_use_retained_direct_CP_intense_IM.png", width = 7, height = 5, dpi = 300)
Prop_ind<-output_ind_ES %>% group_by(management,services_to) %>%
mutate(tot = n()) %>% ungroup() %>%
group_by(services_to) %>%
mutate(prop = tot/max(tot)) %>%  #prop of E(D)S rtained across habitat management
select(management,services_to,tot,prop) %>% unique()
prop_EDS_indirect<- Prop_ind %>% ggplot(aes(x = management, y = prop)) +
geom_boxplot(color = "black") +
geom_point(position=position_jitterdodge(jitter.width=2, dodge.width = 0.5),
pch=21, aes(fill=factor(services)), size = 3.5, show.legend = T) +
scale_fill_manual(values = color_services$color) +
scale_y_continuous(name = "Prop. of indirect effects on E(D)S retained", limits = c(0, 1)) +
scale_x_discrete(name = "Management")+
theme(panel.background = element_rect(fill = "white"),
panel.grid.major=element_line(color = "gray"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13, color='black'),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =14),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 14, color = "black"),
legend.text = element_text(size = 12))+
labs(fill = "E(D)S")
prop_EDS_indirect
prop_EDS_indirect<- Prop_ind %>% ggplot(aes(x = management, y = prop)) +
geom_boxplot(color = "black") +
geom_point(position=position_jitterdodge(jitter.width=2, dodge.width = 0.5),
pch=21, aes(fill=factor(services_to)), size = 3.5, show.legend = T) +
scale_fill_manual(values = color_services$color) +
scale_y_continuous(name = "Prop. of indirect effects on E(D)S retained", limits = c(0, 1)) +
scale_x_discrete(name = "Management")+
theme(panel.background = element_rect(fill = "white"),
panel.grid.major=element_line(color = "gray"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13, color='black'),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =14),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 14, color = "black"),
legend.text = element_text(size = 12))+
labs(fill = "E(D)S")
prop_EDS_indirect
ggsave("Graphs/Land_use_retained_indirect_CP_intense_IM.png", width = 7, height = 5, dpi = 300)
#upload and prepare dataframe
direct_ES<- read.csv("Data/Land_use_dir_weighted_CP_intense.csv", sep =",") %>%
mutate(services = case_when(services == "Crop production"~ "Resource provision",
TRUE~services))
direct_ES$management <- factor(direct_ES$management, levels = c("E", "SE", "M", "SI","I","IM")) #change order of factors
Prop_dir<-direct_ES %>% group_by(management,services) %>%
mutate(tot = n()) %>% ungroup() %>%
group_by(services) %>%
mutate(prop = tot/max(tot)) %>%  #prop of E(D)S rtained across habitat management
dplyr::select(management,services,tot,prop) %>%
unique()
# adjust the extreme values according to the beta conditions
Prop_dir$prop <- ifelse(Prop_dir$prop == 0, 0.000001,
ifelse(Prop_dir$prop == 1, 0.9999999, Prop_dir$prop))
# Model
library("glmmTMB")
library("stats4")
library("bbmle")
library(emmeans)
library(car)
Prop_dire<- glmmTMB (prop ~ management + services, family=beta_family(link="logit"), data = Prop_dir) # model that best fit
#Prop_dire2<-glmmTMB (prop ~ management + ( 1| services), family=beta_family(link="logit"), data = Prop_dir)
Anova(Prop_dire)
#upload and prepare dataframe
output_ind_ES <- read.csv("Data/Land_use_output_weighted_CP_intense.csv", sep =",")
output_ind_ES$management <- factor(output_ind_ES$management, levels = c("E", "SE", "M", "SI","I","IM")) #change order of factors
Prop_ind<-output_ind_ES %>% group_by(management,services_to) %>%
mutate(tot = n()) %>% ungroup() %>%
group_by(services_to) %>%
mutate(prop = tot/max(tot)) %>%  #prop of E(D)S rtained across habitat management
dplyr::select(management,services_to,tot,prop) %>% unique()
# adjust the extreme values according to the beta conditions
Prop_ind$prop <- ifelse(Prop_ind$prop == 0, 0.000001,
ifelse(Prop_ind$prop == 1, 0.9999999, Prop_ind$prop))
# Model
library("glmmTMB")
library("stats4")
library("bbmle")
Prop_indi<-glmmTMB (prop ~ management + services_to, family=beta_family(link="logit"), data = Prop_ind) #model that best fit
#Prop_indi_2<-glmmTMB (prop ~ management :services_to, family=beta_family(link="logit"), data = Prop_ind)
Anova(Prop_indi)
summary(Prop_indi)
#Amount of ES provided by each species
extensive_amount <- direct_ES %>%
filter(management == "E") %>%
select(node_id, services, weight)
# Merging and other managements and calculate ratio of change
dir_amount <- direct_ES %>%
left_join(extensive_amount, by = c("node_id", "services"), suffix = c("", "_extensive")) %>%
mutate(ratio_change = weight / weight_extensive) #ratio of change: values higher than 1 indicates increasing in the amount of E(D)S
# Model
library(glmmTMB)
m_amount<- glmmTMB(ratio_change ~ management+services + (1|node_id),family = Gamma(link = "log"),
data = dir_amount) #the lowest AIC, interaction did not converge
Anova(m_amount)
## - upload and prepare dataframe
direct_ES_emp<- read.csv("Data/Land_use_dir_weighted_CP_intense.csv", sep =",")
extensive_amount <- direct_ES_emp %>%
filter(management == "E") %>%
select(node_id, services, weight)
dir_amount_emp <- direct_ES_emp %>%
left_join(extensive_amount, by = c("node_id", "services"), suffix = c("", "_extensive")) %>%
mutate(ratio_change = weight / weight_extensive) #ratio of change: values higher than 1 indicates increasing in the amount of E(D)S
ratio_empirical<-dir_amount_emp %>%
select(management, services,node_id, ratio_change) %>% group_by(management,services,node_id) %>%
summarise(ratio_change_ave = mean(ratio_change)) %>%
mutate(type = "Empirical")
# Calculate the ratio change in the amount of ES per species in each simulation
direct_ES_sim<- read.csv("Data/direct_ES_sim_CP.csv", sep =",")
dir_amount_sim <- direct_ES_sim %>% filter(!(iteration == "Emp" & management !="E"))%>%
left_join(extensive_amount, by = c("node_id", "services"), suffix = c("", "_extensive")) %>%
mutate(ratio_change = weight / weight_extensive) #ratio of change: values higher than 1 indicates increasing in the amount of E(D)S
ratio_sim<-dir_amount_sim  %>%
select(management,iteration, services,node_id, ratio_change) %>% group_by(management,iteration,services,node_id) %>%
summarise(ratio_change_ave = mean(ratio_change))
# Compare between empirical and simulations
iterations_coefficients<-read.csv("Data/iterations_coefficients_amount_CP.csv", sep = ",")
# General Test
greater <- sum(iterations_coefficients$chisqr_man > par_emp[1,1])
less <- sum(iterations_coefficients$chisqr_man  < par_emp[1,1])
p_management<- 2 * min(greater, less) / nrow(iterations_coefficients) #calculate manually t-test two tailed
# empirical
amount_emp <- glmmTMB(ratio_change_ave ~ management + services + (1|node_id),family = Gamma(link = "log"),
data = ratio_empirical)
#amount_emp2 <- glmmTMB(ratio_change_ave ~ management+services + (1|node_id),family = Gamma(link = "log"),
#                     data = ratio_empirical) #don't converge properly
par_emp<-Anova(amount_emp)
post_man_emp <-emmeans(amount_emp, ~ management) #posthoc management
man_pairs_emp <- as.data.frame(pairs(post_man_emp))
# Compare between empirical and simulations
iterations_coefficients<-read.csv("Data/iterations_coefficients_amount_CP.csv", sep = ",")
# General Test
greater <- sum(iterations_coefficients$chisqr_man > par_emp[1,1])
less <- sum(iterations_coefficients$chisqr_man  < par_emp[1,1])
p_management<- 2 * min(greater, less) / nrow(iterations_coefficients) #calculate manually t-test two tailed
#Merge simulated and empirical
iterations_sim_empirical<-rbind(iterations_coefficients,tibble(
iteration = "Empirical",
chisqr_man = par_emp$Chisq[1],
chisqr_ser = par_emp$Chisq[2],
pval_man = par_emp[1,3],
pval_ser = par_emp[2,3],
)) %>% mutate(iteration = ifelse(iteration == "Empirical", "Empirical","Null")) %>% rename("Type "= "iteration")
#Plot general
iterations_sim_empirical<-iterations_coefficients %>% mutate(type = "Null")
iterations_sim_empirical %>% ggplot(aes(x = chisqr_man, fill= type))+
geom_density(alpha = 0.6)+
geom_vline(xintercept = par_emp[1,1], linetype = "dashed", color = "#FB3B1E") + #line represting rsquared empirical
labs(x= "Statistic", y="Density")+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=15, color='black'),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))
ggsave("Graphs/distri_amount_CP_IM.png", width = 7, height = 5, dpi = 300)
iterations_sim_empirical %>% ggplot(aes(x = chisqr_man, fill= type))+
geom_density(alpha = 0.6)+
geom_vline(xintercept = par_emp[1,1], linetype = "dashed", color = "#FB3B1E") + #line represting rsquared empirical
labs(x= "Statistic", y="Density")+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=15, color='black'),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))
ggsave("Graphs/distri_amount_CP_IM.png", width = 6, height = 5, dpi = 300)
# empirical
Prop_ind_emp <- glmmTMB (Prop_mean ~ management + services_to, family=beta_family(link="logit"),
data = Prop_indir_Emp)# the best mode #model used in the empirical
par_emp<-Anova(Prop_ind_emp)
post_man_emp <-emmeans(Prop_ind_emp, ~ management) #posthoc management
#Null
#we do the same model for each iteration to create the null distribution of the model coefficient
Prop_ind_null<- read.csv("Data/Prop_ind_null_CP.csv", sep =",")
#General Test
iterations_coefficients<-read.csv("Data/iterations_coefficients_indirect_CP.csv", sep =",")
greater <- sum(iterations_coefficients$chisqr_man > par_emp[1,1])
less <- sum(iterations_coefficients$chisqr_man  < par_emp[1,1])
p_management<- 2 * min(greater, less) / nrow(iterations_coefficients) #calculate manually t-test two tailed
#Null
#we do the same model for each iteration to create the null distribution of the model coefficient
Prop_ind_null<- read.csv("Data/Prop_ind_null_CP.csv", sep =",")
#General Test
iterations_coefficients<-read.csv("Data/iterations_coefficients_indirect_CP.csv", sep =",")
greater <- sum(iterations_coefficients$chisqr_man > par_emp[1,1])
less <- sum(iterations_coefficients$chisqr_man  < par_emp[1,1])
p_management<- 2 * min(greater, less) / nrow(iterations_coefficients) #calculate manually t-test two tailed
#Merge simulated and empirical
iterations_sim_empirical<-rbind(iterations_coefficients,tibble(
iteration = "Empirical",
chisqr_man = par_emp$Chisq[1],
chisqr_ser = par_emp$Chisq[2],
pval_man = par_emp[1,3],
pval_ser = par_emp[2,3],
)) %>% mutate(iteration = ifelse(iteration == "Empirical", "Empirical","Null")) %>% rename("Type "= "iteration")
#Plot general
iterations_sim_empirical<-iterations_coefficients %>% mutate(type = "Null")
iterations_sim_empirical %>% ggplot(aes(x = chisqr_man, fill= type))+
geom_density(alpha = 0.6)+
geom_vline(xintercept = par_emp[1,1], linetype = "dashed", color = "#FB3B1E") + #line represting rsquared empirical
labs(x= "Statistic", y="Density")+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=15, color='black'),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))
#upload and prepare dataframe
output_ind_ES<- read.csv("Data/Indirect_ES_sim_CP_final.csv", sep =",") %>% filter(services_to !="None")
output_ind_ES$management <- factor(output_ind_ES$management, levels = c("E", "SE", "M", "SI","I","IM")) #change order of factors
#Empirical
Prop_indir_Emp<-output_ind_ES %>% filter(iteration == "Emp") %>%
group_by(management,services_to) %>%
mutate(tot = n()) %>% ungroup() %>%
group_by(services_to) %>%
mutate(prop = tot/max(tot)) %>%  #prop of indirect effects on E(D)S retained in the empirical
dplyr::select(management,services_to,tot,prop) %>%
unique() %>% rename("Prop_mean" = "prop") %>%
mutate (type = "Empirical")
# adjust the extreme values according to the beta conditions
Prop_indir_Emp$Prop_mean <- ifelse(Prop_indir_Emp$Prop_mean == 0, 0.000001,
ifelse(Prop_indir_Emp$Prop_mean == 1, 0.9999999, Prop_indir_Emp$Prop_mean))
# empirical
Prop_ind_emp <- glmmTMB (Prop_mean ~ management + services_to, family=beta_family(link="logit"),
data = Prop_indir_Emp)# the best mode #model used in the empirical
par_emp<-Anova(Prop_ind_emp)
post_man_emp <-emmeans(Prop_ind_emp, ~ management) #posthoc management
man_pairs_emp <- as.data.frame(pairs(post_man_emp))
#General Test
iterations_coefficients<-read.csv("Data/iterations_coefficients_indirect_CP.csv", sep =",")
greater <- sum(iterations_coefficients$chisqr_man > par_emp[1,1])
less <- sum(iterations_coefficients$chisqr_man  < par_emp[1,1])
p_management<- 2 * min(greater, less) / nrow(iterations_coefficients) #calculate manually t-test two tailed
#Merge simulated and empirical
iterations_sim_empirical<-rbind(iterations_coefficients,tibble(
iteration = "Empirical",
chisqr_man = par_emp$Chisq[1],
chisqr_ser = par_emp$Chisq[2],
pval_man = par_emp[1,3],
pval_ser = par_emp[2,3],
)) %>% mutate(iteration = ifelse(iteration == "Empirical", "Empirical","Null")) %>% rename("Type "= "iteration")
#Plot general
iterations_sim_empirical<-iterations_coefficients %>% mutate(type = "Null")
iterations_sim_empirical %>% ggplot(aes(x = chisqr_man, fill= type))+
geom_density(alpha = 0.6)+
geom_vline(xintercept = par_emp[1,1], linetype = "dashed", color = "#FB3B1E") + #line represting rsquared empirical
labs(x= "Statistic", y="Density")+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=15, color='black'),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))
ggsave("Graphs/distri_indirect_CP_IM.png", width = 6, height = 5, dpi = 300)
#upload and prepare dataframe
direct_ES<- read.csv("Data/direct_ES_sim_CP.csv", sep =",") %>% filter(iteration == "Emp"|iteration <=500)
direct_ES$management <- factor(direct_ES$management, levels = c("E", "SE", "M", "SI","I","IM")) #change order of factors
#upload and prepare dataframe
direct_ES<- read.csv("Data/direct_ES_sim_CP.csv", sep =",") %>% filter(iteration == "Emp"|iteration <=500)
direct_ES$management <- factor(direct_ES$management, levels = c("E", "SE", "M", "SI","I","IM")) #change order of factors
#Empirical
Prop_dir_Emp<-direct_ES %>% filter(iteration == "Emp") %>% group_by(management,services) %>%
mutate(tot = n()) %>% ungroup() %>%
group_by(services) %>%
mutate(prop = tot/max(tot)) %>%  #prop of E(D)S rtained across habitat management
dplyr::select(management,services,tot,prop) %>%
unique() %>% rename("Prop_mean" = "prop")
# adjust the extreme values according to the beta conditions and remove extensive scenario
Prop_dir_Emp$Prop_mean <- ifelse(Prop_dir_Emp$Prop_mean == 0, 0.000001,
ifelse(Prop_dir_Emp$Prop_mean == 1, 0.9999999, Prop_dir_Emp$Prop_mean))
# Value of empirical
values_emp<- Prop_dir_Emp %>% filter (management == "E" ) %>% select(management,tot)
#Simulations
Prop_dir_null<-direct_ES %>% filter(!(iteration == "Emp" & management !="E"))%>% group_by(management,iteration,services) %>%
mutate(tot = n(),
tot_emp = case_when( #Values of denominator
services == "Crop production"~ 6,
services == "Pollination" ~ 117,
services == "Crop damage"~ 15,
services == "Pest control"~ 28,
services == "Seed dispersal" ~ 5,
services == "Butterfly watching"~ 16,
services == "Bird watching"~ 7 )) %>% ungroup() %>%
group_by(services) %>%
mutate(prop = tot/tot_emp) %>%  #prop of E(D)S rtained across habitat management per iteration and habitat management
dplyr::select(management,iteration,services,prop) %>%
unique() %>% rename("Prop_mean" = "prop")
#empirical
Prop_dir_emp<-glmmTMB (Prop_mean ~ management + services, family=beta_family(link="logit"), data = Prop_dir_Emp)
par_emp<-Anova(Prop_dir_emp)
post_man_emp <-emmeans(Prop_dir_emp, ~ management) #posthoc management
man_pairs_emp <- as.data.frame(pairs(post_man_emp))
#General
greater <- sum(iterations_coefficients$chisqr_man > par_emp[1,1])
less <- sum(iterations_coefficients$chisqr_man  < par_emp[1,1])
p_management<- 2 * min(greater, less) /nrow(iterations_coefficients) #calculate manually t-test two tailed #CAMBIAR ESTO LENGTH..
# Compare between empirical and simulations
iterations_coefficients<-read.csv("Data/iterations_coefficients_direct_CP.csv", sep =",")
#General
greater <- sum(iterations_coefficients$chisqr_man > par_emp[1,1])
less <- sum(iterations_coefficients$chisqr_man  < par_emp[1,1])
p_management<- 2 * min(greater, less) /nrow(iterations_coefficients) #calculate manually t-test two tailed #CAMBIAR ESTO LENGTH..
#Merge simulated and empirical
iterations_sim_empirical<-rbind(iterations_coefficients,tibble(
iteration = "Empirical",
chisqr_man = par_emp$Chisq[1],
chisqr_ser = par_emp$Chisq[2],
pval_man = par_emp[1,3],
pval_ser = par_emp[2,3],
)) %>% mutate(iteration = ifelse(iteration == "Empirical", "Empirical","Null")) %>% rename("Type "= "iteration")
#Plot general
iterations_sim_empirical<-iterations_coefficients %>% mutate(type = "Null")
iterations_sim_empirical %>% ggplot(aes(x = chisqr_man, fill= type))+
geom_density(alpha = 0.6)+
geom_vline(xintercept = par_emp[1,1], linetype = "dashed", color = "#FB3B1E") + #line represting rsquared empirical
labs(x= "Statistic", y="Density")+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=15, color='black'),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))
ggsave("posthoc_distri_direct_CP_IM.png", width = 6, height = 5, dpi = 300)
ggsave("distri_direct_CP_IM.png",width = 6, height = 5, dpi = 300)
#Plot combination of treatments level
iterations_post_hocs<-read.csv("Data/iterations_post_hocs_direct_CP.csv", sep =",")
#Post hoc (each combination of management )
p_contrast_man<-NULL
for (i in unique(iterations_post_hocs$contrast)){
#filter data
post_comb<-iterations_post_hocs %>% filter(contrast == i) #filter per combination of treatmens (simulated data)
post_emp<-man_pairs_emp %>% filter(contrast == i) #filter per combination of treatmens (empirical)
#test
greater <- sum(post_comb$estimate >  post_emp$estimate)
less <- sum(post_comb$estimate  <  post_emp$estimate)
p_comb<- 2 * min(greater, less) / nrow(iterations_coefficients)  #calculate manually t-test two tailed
#storage
p_contrast_man <- rbind(p_contrast_man,
tibble(contrast = i,
p_value = p_comb))
}
p_contrast_man
#smimulated
man_lev<-c("E","SE","M","SI","I","IM")
post_hoc_sim<- iterations_post_hocs %>% separate(contrast, into = c("man_1", "man_2"), sep = " - ") %>%
select(-p.value)
post_hoc_sim$man_1 <- factor(post_hoc_sim$man_1, levels = man_lev)
post_hoc_sim$man_2 <- factor(post_hoc_sim$man_2, levels = man_lev)
#empirical
post_hoc_emp_pre<- man_pairs_emp %>% separate(contrast, into = c("man_1", "man_2"), sep = " - ") %>%
select(-p.value) %>% mutate (iteration = "0") %>% select(man_1,man_2,estimate,iteration)#empirical
new_combinations_empirical <- data.frame(
man_1 = c("E", "SE", "M", "SI", "I","IM"),
man_2 = c("E", "SE", "M", "SI", "I","IM"),
estimate = rep(0, 6),
iteration = rep(0, 6)
)
post_hoc_emp_fin<-rbind(post_hoc_emp_pre,new_combinations_empirical)
post_hoc_emp_fin$man_1 <- factor(post_hoc_emp_fin$man_1, levels = man_lev)
post_hoc_emp_fin$man_2 <- factor(post_hoc_emp_fin$man_2, levels = man_lev)
# plot
posthoc_distr_CP<- ggplot(data = post_hoc_sim, aes(x=estimate)) +
geom_histogram(fill = "steelblue") +
labs(y = "Count", x = "Estimate value") +
geom_vline(data = post_hoc_emp_fin[1:15,], mapping = aes(xintercept = estimate),
colour="#BB0000", linetype="dashed") +
facet_grid(man_2 ~ man_1)
posthoc_distr_CP
ggsave("posthoc_distri_direct_CP_IM.png")
iterations_sim_empirical %>% ggplot(aes(x = chisqr_man, fill= type))+
geom_density(alpha = 0.6)+
geom_vline(xintercept = par_emp[1,1], linetype = "dashed", color = "#FB3B1E") + #line represting rsquared empirical
labs(x= "Statistic", y="Density")+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=15, color='black'),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))
ggsave("Graphs/distri_direct_CP_IM.png",width = 6, height = 5, dpi = 300)
# plot
posthoc_distr_CP<- ggplot(data = post_hoc_sim, aes(x=estimate)) +
geom_histogram(fill = "steelblue") +
labs(y = "Count", x = "Estimate value") +
geom_vline(data = post_hoc_emp_fin[1:15,], mapping = aes(xintercept = estimate),
colour="#BB0000", linetype="dashed") +
facet_grid(man_2 ~ man_1)
posthoc_distr_CP
ggsave("Graphs/posthoc_distri_direct_CP_IM.png")
#empirical
Prop_dir_emp<-glmmTMB (Prop_mean ~ management:services, family=beta_family(link="logit"), data = Prop_dir_Emp)
