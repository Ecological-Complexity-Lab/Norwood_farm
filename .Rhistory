install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("manlius/muxViz")
remove.packages("muxViz")
devtools::install_github("manlius/muxViz")
library(htmltools)
library(htmltools)
install.packages("htmltools")
detach("package:htmltools", unload = TRUE)
install.packages("htmltools")
devtools::install_github("manlius/muxViz")
install.packages("htmltools")
devtools::install_github("manlius/muxViz")
library(emln)#multilayer package
library(bipartite)
library(vegan)
library(sna)
library(tidyverse)
setwd("D:/Trabajo/Papers/Norwood_Farm/norwood-ecosystem-services-main_Tinio")
#Data frame
plants<-read.csv("/Data/PLANT_HABITAT3.csv",header=T) # abundance of plants
setwd("D:/Trabajo/Papers/Norwood_Farm/norwood-ecosystem-services-main_Tinio")
#Data frame
plants<-read.csv("/Data/PLANT_HABITAT3.csv",header=T) # abundance of plants
#Data frame
plants<-read.csv("Data/PLANT_HABITAT3.csv",header=T) # abundance of plants
nore<-read.csv("nore2.csv",header=T) #potential dataframe of abundances
nore<-read.csv("Data/nore2.csv",header=T) #potential dataframe of abundances
nore<-read.csv("Data/nore2.csv",header=T) #potential dataframe of abundances
# Rearrange dataframe
plants_habitat<-plants %>% select(-ST) %>%  # remove standing trees (ST)
rename ("WD" = "W", "SF" ="CSF", "CP" = "C")
plants_ab<-plants_habitat %>% gather("habitat","abundance",2:12)
View(plants_ab)
# summary tables
guild.names<-sort(unique(substr(nore$lower,1,4)))  #define guild names          # MJOP: added 'sort' to this line
full.guild.names<-c("plants","flower visitors","aphids","aphid parasitoids (primary)","aphid parasitoids (secondary)","leaf miner parasitoids","seed-feeding invertebrates","birds (seed feeders)","mammals (seed feeders)","bees","hoverflies","butterflies","fleas","other flower visitors")
lower.guild<-substr(nore$lower,1,4)
upper.guild<-substr(nore$upper,1,4)
nore<-cbind(nore,lower.guild,upper.guild)
# Remove the arbitrary self loops added for previous robustness calculations
direct.link<-rep(1,dim(nore)[1])
direct.link[lower.guild==upper.guild]<-0; #remove link between same trophic group species
direct.link[lower.guild=="01PL" & upper.guild=="04PR"]<-0;#remove link between plant and aphid parasitoid
direct.link[lower.guild=="01PL" & upper.guild=="05SE"]<-0; #remove link between plant and second parastoid of aphids
direct.link[lower.guild=="02FV" & upper.guild=="01PL"]<-0; #remove duplicated links between flower visitors and plants
direct.link[lower.guild=="01PL" & upper.guild=="14FL"]<-0; #Remove link between plants and fleas
direct.link[lower.guild=="01PL" & upper.guild=="13SF"]<-0 #Remove links between plants and seed-feedigin parastioid
nore.direct.only<-nore[direct.link==1,]
nore_2<-nore.direct.only %>% filter(!(habitat == "ST"))
## Change names of habitats
nore_names<- nore_2%>% mutate(habitat = case_when(habitat == "P"~ "PP",#typing error
habitat == "C"~ "CP",
habitat == "CSF"~ "SF",
habitat == "RGyard"~"RG", # tomerge RG and RGyard into "RG"
habitat == "W"~ "WD",
habitat == "WU"~ "WD", # to merge W and WU into "WD"
TRUE~habitat))
# Filter species
FV<- nore_names %>% filter(upper.guild=="02FV") %>% select(upper,upper.guild) %>%
unique() #list of all flower visitors
FV.sp<-substr(FV$upper,6,nchar(FV$upper)) #substract species name
FV.list<-cbind(FV,FV.sp)
FVOTHER<- nore_names %>% filter(upper.guild=="15FV") %>% select(upper,upper.guild) %>%
unique() #list of flower visitor others
FVOTHER.sp<-substr(FVOTHER$upper,11,nchar(FVOTHER$upper)) #substract species name
FVOTHER.list<-cbind(FVOTHER,FVOTHER.sp)
# Eliminate flower visitor others from the flower visitor list (02FV)
FV_justpoll<-FV.list %>% filter(!(FV.sp %in% FVOTHER.list$FVOTHER.sp))
# Eliminate duplicated flower visitors in 02FV from the dataframe
nore_fvjust_poll<-nore_names %>% filter(upper %in% FV_justpoll$upper)
nore_flowervis<-nore_names %>% filter(upper.guild != "02FV")
nore_flowervis<-rbind(nore_flowervis,nore_fvjust_poll) #remove "15FVOTHERS" pollinators from "02FV"pollinators
nore_fwvisitor<- nore_flowervis %>% filter (!(upper.guild== "11HO" |
upper.guild == "10BE")) #remove hoverflies and bees because they are already in 02FV
birds_WD_RG<-nore_flowervis %>% filter(upper.guild == "08BI", habitat =="RG" |
habitat == "WD")  #abundances birds in WD and RG
birds_rest<-nore_flowervis %>% filter(upper.guild == "08BI", habitat =="all") #Birds move widely over the landscape, and the habitats in which they were mostly observed (e.g. hedgerows) were often not the habitats in which they were feeding, so we pooled them together as abundance of all habitats (RG and WD as exception)
#abundances of birds in the rest of the habitats
birds_CP<-birds_rest %>% mutate(habitat = ifelse(habitat =="all", "CP"))
birds_SF<-birds_rest %>% mutate(habitat = ifelse(habitat =="all", "SF"))
birds_GM<-birds_rest %>% mutate(habitat = ifelse(habitat =="all", "GM"))
birds_LP<-birds_rest %>% mutate(habitat = ifelse(habitat =="all", "LP"))
birds_LU<- birds_rest %>% mutate(habitat = ifelse(habitat =="all", "LU"))
birds_MH<-birds_rest %>% mutate(habitat = ifelse(habitat =="all", "MH"))
birds_NH<-birds_rest %>% mutate(habitat = ifelse(habitat =="all", "NH"))
birds_NL<-birds_rest %>% mutate(habitat = ifelse(habitat =="all", "NL"))
birds_PP<-birds_rest %>% mutate(habitat = ifelse(habitat =="all", "PP"))
# Merge to create dataframe of birds abundances
birds_abundances<-rbind(birds_WD_RG,birds_CP,birds_SF,birds_GM,birds_LP,birds_LU,
birds_MH,birds_NH,birds_NL,birds_PP)
nore_without_bird<- nore_fwvisitor %>% filter (!(upper.guild== "08BI")) #remove old data of birds
nore_to_abundances<-rbind (nore_without_bird,birds_abundances)
View(nore_to_abundances)
animals_ab<-nore_to_abundances %>%  group_by(upper,habitat, upper.guild) %>%
summarize(Ab =sum(fortotals))
View(animals_ab)
animals_ab<-nore_to_abundances %>%  group_by(upper,habitat, upper.guild) %>%
summarize(abundance =sum(fortotals))
View(animals_ab)
plants_ab<-plants_habitat %>% gather("habitat","abundance",2:12) %>%
filter(abundance >0)
View(plants_ab)
# Rearrange dataframe
plants_habitat<-plants %>% select(-ST) %>%  # remove standing trees (ST)
rename ("WD" = "W", "SF" ="CSF", "CP" = "C")
plants_ab<-plants_habitat %>% gather("habitat","abundance",2:12) %>%
filter(abundance >0) %>% rename("species_name" = "lower")
View(plants_ab)
animals_ab<-nore_to_abundances %>%  group_by(upper,habitat, upper.guild) %>%
summarize(abundance =sum(fortotals)) %>% select(-upper.guild) %>%
rename("species_name" == "upper")
animals_ab<-nore_to_abundances %>%  group_by(upper,habitat, upper.guild) %>%
summarize(abundance =sum(fortotals)) %>% select(-upper.guild) %>%
rename("species_name" = "upper")
species_abundances<-rbind(plants_ab,animals_ab)
View(species_abundances)
View(nore_to_abundances)
prueba<-nore_to_abundances %>% select(-fortotals,-round,-lower.guild)
View(prueba)
prueba<-nore_to_abundances %>% select(-fortotals,-round,-lower.guild) %>% unique()
View(prueba)
birds<-prueba %>% filter(upper.guild== "08BI")
View(birds)
View(plants_ab)
## Split out into individual bird lists
elistbirds_split <- split(birds, birds$habitat) # Split out the bird edgelist into different habitats
View(elistbirds_split)
## Split out into individual bird lists
plant_list<-split(plants_ab,plants_ab$habitat)
View(plant_list)
## Keep interactions when the plant is in the specific habitat
edgelist_birds<- NULL
for (i in 1:length(elistbirds_split)){
edgelist_birds[[i]] <- elistbirds_split[[i]] %>%
filter(lower %in% plant_list[[i]])
}
View(edgelist_birds)
plant_list[[i]]
## Keep interactions when the plant is in the specific habitat
edgelist_birds<- NULL
for (i in 1:length(elistbirds_split)){
edgelist_birds[[i]] <- elistbirds_split[[i]] %>%
filter(lower %in% plant_list[[i]]$species_name)
}
View(edgelist_birds)
elist_birds<-prueba %>% filter(upper.guild== "08BI")
elist_birds<-prueba %>% filter(upper.guild== "08BI")
elist_birds<-nore_to_abundances %>% filter(upper.guild== "08BI")
## Split out into individual bird lists
plant_list<-split(plants_ab,plants_ab$habitat)
elistbirds_split <- split(e_listbirds, elist_birds$habitat) # Split out the bird edgelist into different habitats
elist_birds<-nore_to_abundances %>% filter(upper.guild== "08BI")
## Split out into individual bird lists
plant_list<-split(plants_ab,plants_ab$habitat)
elistbirds_split <- split(elistbirds, elist_birds$habitat) # Split out the bird edgelist into different habitats
elist_birds<-nore_to_abundances %>% filter(upper.guild== "08BI")
## Split out into individual bird lists
plant_list<-split(plants_ab,plants_ab$habitat)
elistbirds_split <- split(elist_birds, elist_birds$habitat) # Split out the bird edgelist into different habitats
## Keep interactions when the plant is in the specific habitat
edgelist_birds<- NULL
for (i in 1:length(elistbirds_split)){
edgelist_birds[[i]] <- elistbirds_split[[i]] %>%
filter(lower %in% plant_list[[i]]$species_name)
}
View(species_abundances)
View(prueba)
View(prueba)
View(nore_to_abundances)
edge_list_nore<-nore_to_abundances %>% select(-fortotals,-round,-lower.guild)
View(edge_list_nore)
edge_list_nore<-nore_to_abundances %>% select(-fortotals,-round,-lower.guild) %>%
%>% unique()
edge_list_nore<-nore_to_abundances %>% select(-fortotals,-round,-lower.guild) %>%
unique()
edge_list_nore<-nore_to_abundances %>% select(-fortotals,-round,-lower.guild) %>%
unique()
## Filtering bird-plant interactions in each habitat according to the list of plants
elist_birds<-edge_list_nore %>% filter(upper.guild== "08BI")
## Split out into individual bird and plant  lists
plant_list<-split(plants_ab,plants_ab$habitat)#list of plants in each habitat
elistbirds_split <- split(elist_birds, elist_birds$habitat) # Split out the bird edgelist into different habitats
## Keep interactions when the plant is in the specific habitat
edgelist_birds<- NULL
for (i in 1:length(elistbirds_split)){
edgelist_birds[[i]] <- elistbirds_split[[i]] %>%
filter(lower %in% plant_list[[i]]$species_name)
}
edge_list_nore_withoutbird<- edge_list_nore %>% filter(upper.guild != "08BI")
View(edge_list_nore_withoutbird)
edge_list_nore_pre<-nore_to_abundances %>% select(-fortotals,-round,-lower.guild) %>%
unique()
## Filtering bird-plant interactions in each habitat according to the list of plants
elist_birds<-edge_list_nore_pre %>% filter(upper.guild== "08BI")
## Split out into individual bird and plant  lists
plant_list<-split(plants_ab,plants_ab$habitat)#list of plants in each habitat
elistbirds_split <- split(elist_birds, elist_birds$habitat) # Split out the bird edgelist into different habitats
## Keep interactions when the plant is in the specific habitat
edgelist_birds<- NULL
for (i in 1:length(elistbirds_split)){
edgelist_birds[[i]] <- elistbirds_split[[i]] %>%
filter(lower %in% plant_list[[i]]$species_name)
}
# Merge real bird-plant interaction per habitat to the previous dataframe
edge_list_nore_withoutbird<- edge_list_nore %>% filter(upper.guild != "08BI")
View(edge_list_nore_withoutbird)
edgelist_birds_long <- bind_rows(edgelist_birds, .id = "habitat")
View(edgelist_birds_long)
?bind_rows
View(edgelist_birds_long)
View(elistbirds_split)
edgelist_birds_long <- bind_rows(edgelist_birds, .id = "habitat") %>%
mutate(habitat= case_when(
x== 1 ~ "CP", x== 2 ~ "GM", x== 3 ~ "LP" , x== 4 ~ "LU", x== 5 ~ "MH", x== 6 ~ "NH",
x== 7 ~ "NL", x== 8 ~ "PP", x== 9 ~ "RG" , x== 10 ~ "SF", x== 11 ~ "WD"))
edgelist_birds_long <- bind_rows(edgelist_birds, .id = "habitat") %>%
mutate(habitat= case_when(
habitat== 1 ~ "CP", habitat== 2 ~ "GM", habitat== 3 ~ "LP" , habitat== 4 ~ "LU", habitat== 5 ~ "MH", habitat== 6 ~ "NH",
habitat== 7 ~ "NL", habitat== 8 ~ "PP", habitat== 9 ~ "RG" , habitat== 10 ~ "SF", habitat== 11 ~ "WD"))
View(edgelist_birds_long)
## Merge real bird-plant interaction per habitat to the previous dataframe
edge_list_nore_withoutbird<- edge_list_nore %>% filter(upper.guild != "08BI")
edge_list_nore_final<-rbind(edge_list_nore_withoutbird,edgelist_birds_long)
View(edge_list_nore_final)
edge_list_nore_final<-rbind(edge_list_nore_withoutbird,edgelist_birds_long) %>% select(habitat,lower,upper)
edge_list_nore_final<-rbind(edge_list_nore_withoutbird,edgelist_birds_long) %>% select(habitat,lower,upper) %>% unique()
write.csv(edge_list_nore_final,"Data/elist_nore.csv", row.names= FALSE)
