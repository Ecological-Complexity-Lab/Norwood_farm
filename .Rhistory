"Rod ectopar","Sec par","Birds",
"Seed - ins", "Rodents"),
values = c("#1f78b4","#6a3d9a","#b15928","#a6cee3","#ffff99","#e31a1c","#33a02c","#b2df8a","#ff7f00","#fb9a99",
"#6a3d9a", "#ffff99", "#cab2d6"))+
labs( y="Prop. Ind effect mediated") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=9, color='black'),
axis.text.x= element_text(size =11, angle = 90),
axis.text.y= element_text(size =11),
axis.title = element_text(size=15, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_blank(),
legend.text = element_text(size = 8))
int_indirect_effecs
color_trophic <-tibble(taxon = c("Plant","Crop","Flw visitors","Aphids","Prim par","Sec par",
"Leaf par","Seed - ins","Birds",
"Rodents","Butterflies","Seed - ins Par","Rod ectopar"),
color = c("#33a02c","#b15928","#a6cee3","#1f78b4","#b2df8a","#fb9a99","#e31a1c","#fdbf6f","#ff7f00","#cab2d6",
"#6a3d9a", "#ffff99", "#e7298a"))
int_indirect_effecs<- int_trophic %>%
ggplot(aes(y=Prop, x= taxon, fill = taxon)) +
geom_bar(position="stack", stat="identity", color = "black")+
scale_fill_manual(values = color_trophic$color[match(levels(int_trophic$taxon), color_trophic$taxon)])+
labs( y="Prop. Ind effect mediated") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=9, color='black'),
axis.text.x= element_text(size =11, angle = 90),
axis.text.y= element_text(size =11),
axis.title = element_text(size=15, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_blank(),
legend.text = element_text(size = 8))
int_indirect_effecs
color_trophic <-tibble(taxon = c("Plant","Crop","Flw visitors","Aphids","Prim par","Sec par",
"Leaf par","Seed - ins","Birds",
"Rodents","Butterflies","Seed - ins Par","Rod ectopar"),
color = c("#33a02c","#b15928","#a6cee3","#1f78b4","#b2df8a","#fb9a99","#e31a1c","#fdbf6f","#ff7f00","#cab2d6",
"#6a3d9a", "#ffff99", "#e7298a"))
int_indirect_effecs<- int_trophic %>%
ggplot(aes(y=Prop, x= taxon, fill = taxon)) +
geom_bar(position="stack", stat="identity", color = "black")+
scale_fill_manual(values = color_trophic$color[match(levels(int_trophic$taxon), color_trophic$taxon)])+
labs( y="Prop. Ind effect mediated") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=9, color='black'),
axis.text.x= element_text(size =11, angle = 90),
axis.text.y= element_text(size =11),
axis.title = element_text(size=15, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_blank(),
legend.text = element_text(size = 8))
int_indirect_effecs
View(color_trophic)
int_trophic<-Final_ES %>% filter(!is.na(node_int)) %>%
mutate(taxon_int =case_when(
node_int%in%plants ~ "Plant",
node_int%in%crops ~ "Crop",
node_int%in%flow_vis ~ "Flw visitors",
node_int%in%aphid ~ "Aphids",
node_int%in%pri_par ~ "Prim par",
node_int%in%sec_par ~ "Sec par",
node_int%in%leaf_par ~ "Leaf par",
node_int%in%seed_ins ~ "Seed - ins",
node_int%in%seed_bird ~ "Birds",
node_int%in%seed_rod ~ "Rodents",
node_int%in%butt ~ "Butterflies",
node_int%in%seed_ins_par ~ "Seed - ins Par",
node_int%in%rod_par ~ "Rod ectopar",
)) %>% select(node_int,taxon_int) %>%ungroup() %>%
mutate(Total = n()) %>% group_by(taxon_int) %>%
reframe(Number = n(), Prop = Number /Total) %>% unique() %>%
rename("taxon" = "taxon_int")
color_trophic <-tibble(taxon = c("Plant","Crop","Flw visitors","Aphids","Prim par","Sec par",
"Leaf par","Seed - ins","Birds",
"Rodents","Butterflies","Seed - ins Par","Rod ectopar"),
color = c("#33a02c","#b15928","#a6cee3","#1f78b4","#b2df8a","#fb9a99","#e31a1c","#fdbf6f","#ff7f00","#cab2d6",
"#6a3d9a", "#ffff99", "#e7298a"))
int_indirect_effecs<- int_trophic %>%
ggplot(aes(y=Prop, x= taxon, fill = taxon)) +
geom_bar(position="stack", stat="identity", color = "black")+
scale_fill_manual(values = color_trophic$color[match(levels(int_trophic$taxon), color_trophic$taxon)])+
labs( y="Prop. Ind effect mediated") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=9, color='black'),
axis.text.x= element_text(size =11, angle = 90),
axis.text.y= element_text(size =11),
axis.title = element_text(size=15, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_blank(),
legend.text = element_text(size = 8))
int_indirect_effecs
int_indirect_effecs<- int_trophic %>%
ggplot(aes(y=Prop, x= taxon, fill = taxon)) +
geom_bar(position="stack", stat="identity", color = "black")+
scale_fill_manual(values = setNames(color_trophic$color, color_trophic$taxon))+
labs( y="Prop. Ind effect mediated") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=9, color='black'),
axis.text.x= element_text(size =11, angle = 90),
axis.text.y= element_text(size =11),
axis.title = element_text(size=15, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_blank(),
legend.text = element_text(size = 8))
int_indirect_effecs
int_indirect_effecs<- int_trophic %>%
ggplot(aes(y=Prop, x= taxon, fill = taxon)) +
geom_bar(position="stack", stat="identity", color = "black")+
scale_fill_manual(values = setNames(color_trophic$color, color_trophic$taxon))+
labs( y="Prop. Ind effect mediated by") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=9, color='black'),
axis.text.x= element_text(size =11, angle = 90),
axis.text.y= element_text(size =11),
axis.title = element_text(size=15, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_blank(),
legend.text = element_text(size = 8))
ggsave("empirical_taxon_mediating.png")
seed_bird = 495:506
seed_bird_crop<- ext_edgelist_aggr %>% filter(node_to %in%seed_bird & node_from %in%crops)
Indirect_ES<-read.csv("Data/Land_use_output_weighted_CP_intense.csv", sep = ",") %>%
filter(management == "E") %>% select(-management) #change for "Data/Land_use_output_weighted.csv"
direct_1<-direct_ES %>% mutate(node_int = NA,
node_to = NA,
services_to = NA,
hop = NA) %>% select(-body_size,-abundance)
direct_1<-direct_1[,c(3,1,2,7,8,9,5,10,4,6)]
Final_ES<-rbind(direct_1,Indirect_ES) %>%
mutate(type = case_when(type == "D"~ "Direct",
type == "I"~ "Indirect"),
output = case_when (output == "+" ~ "Positive",
output == "-" ~ "Negative"))
Number<-Final_ES %>% group_by(type) %>% summarize(Number = n()) %>% mutate(provision = "E(D)S")
Number$type <- factor(Number$type, levels = c("Indirect","Direct")) #change order of factors
Number<-Number%>%
ggplot(aes(y=Number, x= "E(D)S", fill =type)) +
geom_bar(position="stack", stat="identity", color = "black")+
labs(x='Type of provision', y="Number of E(D)S provided") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=15, color='black'),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank())
output_type<-Final_ES %>% group_by(type) %>%
mutate(Total = n()) %>% group_by(type,output) %>%
summarise(prop = n() /Total) %>% unique()
Prop_output_type<-output_type %>%
ggplot(aes(y=prop, x=type, fill = output)) +
geom_bar(position="stack", stat="identity", color = "black")+
ggtitle("Ratio direct +/- per type")+
labs(x='Type of E(D)S provision', y="Prop of output") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=13, color='black'),
axis.title = element_text(size=15, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11),
legend.position = "bottom")
D_taxon_output<-Final_ES %>% filter(type == "Direct") %>% group_by(output) %>%
mutate(Total = n()) %>% group_by(output, taxon) %>%
summarise(Number = n(), Prop = Number /Total) %>% unique()
D_taxon_output$output <- factor(D_taxon_output$output, levels = c("Positive","Negative")) #change order of factors
D_taxon_output<- D_taxon_output %>%
ggplot(aes(y=Prop, x=output, fill = taxon)) +
geom_bar(position="stack", stat="identity", color = "black")+
scale_fill_manual(label = c("Aph","Butt", "Crop","Flower-visitor ins",
"Insect seed-feeder par", "Leaf-miner par",
"Prim aphid par","Sec aphid par", "Seed-feeding bird",
"Seed-feeding ins","Seed-feeding rod"), values = c("#F8766D",
"#E18A00","#BE9C00", "#8CAB00", "#24B700", "#00BE70","#00BBDA",
"#8B93FF", "#D575FE","#F962DD", "#FF65AC"))+
ggtitle("Direct provision")+
labs(x='Output', y="Prop output provided per taxon") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=13, color='black'),
axis.text.x= element_text(size =11, angle = 90),
axis.text.y= element_text(size =11, angle = 90),
axis.title = element_text(size=15, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_blank(),
legend.text = element_text(size = 8))
D_taxon_output
#direct
direct_ES<- read.csv("Data/Land_use_dir_weighted_CP_intense.csv", sep =",")
direct_ES$management <- factor(direct_ES$management, levels = c("E", "SE", "M", "SI","I","IM")) #change order of factors
#indirect
output_ind_ES <- read.csv("Data/Land_use_output_weighted_CP_intense.csv", sep =",")
output_ind_ES$management <- factor(output_ind_ES$management, levels = c("E", "SE", "M", "SI","I","IM")) #change order of factors
# Direct
D_taxon_output<-direct_ES %>% group_by(management,output) %>%
mutate(Total = n()) %>% group_by(management,output, taxon) %>%
summarise(Number = n(), Prop = Number /Total) %>% unique()
# positive
D_taxon_positive<- D_taxon_output %>% filter(output == "+")
Direct_taxon_positive<- D_taxon_positive  %>%
ggplot(aes(y=Prop, x= management, fill = taxon)) +
geom_bar(position="stack", stat="identity", color = "black")+
scale_fill_manual(label = c("Butterfly", "Crop","Flower-visitor ins",
"Leaf-miner par",
"Prim aphid par","Rodent ectoparasite","Sec aphid par", "Seed-feeding bird",
"Seed-feeding ins","Seed-feeding rod"),
values = c("#E18A00",  "#BE9C00", "#8CAB00", "#00BE70","#00BBDA", "#00ACFC",
"#8B93FF",  "#D575FE","#F962DD", "#FF65AC" ))+
ggtitle("Direct provision")+
labs(x='Output', y="Prop output provided per taxon") +theme_bw()+
theme_classic()+
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13, color='black'),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =15),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11),
legend.position = "bottom")
Direct_taxon_positive
ratio_direct<-read.csv("Data/Land_use_rat_dir_weighted_CP_intense.csv")
ratio_direct$management <- factor(ratio_direct$management, levels = c("E", "SE", "M", "SI","I","IM")) #change order of factors
ratio_direct<-ratio_direct%>% gather("type","value", 2:3) %>% group_by(management) %>%
mutate(Total = sum(value)) %>% group_by(management,type) %>%
summarise(prop = value /Total) %>%
ggplot(aes(y=prop, x=management, fill = type)) +
geom_bar(position="stack", stat="identity")+ ggtitle("Direct provision")+
labs(x='Management', y="Prop of E(D)S") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=15, color='black'),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11),
legend.position = "bottom")
ratio_direct
# Direct
D_taxon_output<-direct_ES %>% group_by(management,output) %>%
mutate(Total = n()) %>% group_by(management,output, taxon) %>%
summarise(Number = n(), Prop = Number /Total) %>% unique()
# positive
D_taxon_positive<- D_taxon_output %>% filter(output == "+")
Direct_taxon_positive<- D_taxon_positive  %>%
ggplot(aes(y=Prop, x= management, fill = taxon)) +
geom_bar(position="stack", stat="identity", color = "black")+
scale_fill_manual(label = c("Butterfly", "Crop","Flower-visitor ins",
"Leaf-miner par",
"Prim aphid par","Rodent ectoparasite","Sec aphid par", "Seed-feeding bird",
"Seed-feeding ins","Seed-feeding rod"),
values = c("#E18A00",  "#BE9C00", "#8CAB00", "#00BE70","#00BBDA", "#00ACFC",
"#8B93FF",  "#D575FE","#F962DD", "#FF65AC" ))+
ggtitle("Direct provision")+
labs(x='Output', y="Prop output provided per taxon") +theme_bw()+
theme_classic()+
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13, color='black'),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =15),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11),
legend.position = "bottom")
Direct_taxon_positive
# negative
D_taxon_negative<- D_taxon_output %>% filter(output == "-")
Direct_taxon_negative<- D_taxon_negative  %>%
ggplot(aes(y=Prop, x= management, fill = taxon)) +
geom_bar(position="stack", stat="identity", color = "black")+
scale_fill_manual(label = c("Aphid",  "Seed-feeding bird",
"Seed-feeding rod"),
values = c("#F8766D", "#D575FE", "#FF65AC" ))+
ggtitle("Direct provision")+
labs(x='Output', y="Prop output provided per taxon") +theme_bw()+
theme_classic()+
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13, color='black'),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =15),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11),
legend.position = "bottom")
Direct_taxon_negative
# Direct
D_ES<-direct_ES %>% group_by(management) %>%
mutate(Total = n()) %>% group_by(management,services) %>%
summarise(Number = n(), Prop = Number /Total) %>% unique()
Direct_ES_management<- D_ES  %>%
ggplot(aes(y=Prop, x= management, fill = services)) +
geom_bar(position="stack", stat="identity", color = "black")+
scale_fill_manual(values = color_services$color) +
labs(x='Management', y="Prop. direct E(D)S per management") +theme_bw()+
theme_classic()+
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13, color='black'),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =15),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11),
legend.position = "bottom")
#direct
direct_ES<- read.csv("Data/Land_use_dir_weighted_PP_intense.csv", sep =",")
direct_ES$management <- factor(direct_ES$management, levels = c("E", "SE", "M", "SI","I","IM")) #change order of factors
#indirect
output_ind_ES <- read.csv("Data/Land_use_output_weighted_PP_intense.csv", sep =",")
output_ind_ES$management <- factor(output_ind_ES$management, levels = c("E", "SE", "M", "SI","I","IM")) #change order of factors
color_services <-tibble(
services = unique(direct_ES$services),
color = c('#1b9e77','#d95f02','#7570b3','#e7298a','#2c7fb8','#e6ab02','#a6761d'))
# Direct
D_ES<-direct_ES %>% group_by(management) %>%
mutate(Total = n()) %>% group_by(management,services) %>%
summarise(Number = n(), Prop = Number /Total) %>% unique()
Direct_ES_management<- D_ES  %>%
ggplot(aes(y=Prop, x= management, fill = services)) +
geom_bar(position="stack", stat="identity", color = "black")+
scale_fill_manual(values = color_services$color) +
labs(x='Management', y="Prop. direct E(D)S per management") +theme_bw()+
theme_classic()+
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13, color='black'),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =15),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11),
legend.position = "bottom")
Direct_ES_management
#direct
direct_ES<- read.csv("Data/Land_use_dir_weighted_CP_intense.csv", sep =",")
direct_ES$management <- factor(direct_ES$management, levels = c("E", "SE", "M", "SI","I","IM")) #change order of factors
#indirect
output_ind_ES <- read.csv("Data/Land_use_output_weighted_CP_intense.csv", sep =",")
output_ind_ES$management <- factor(output_ind_ES$management, levels = c("E", "SE", "M", "SI","I","IM")) #change order of factors
# Direct
D_ES<-direct_ES %>% group_by(management) %>%
mutate(Total = n()) %>% group_by(management,services) %>%
summarise(Number = n(), Prop = Number /Total) %>% unique()
Direct_ES_management<- D_ES  %>%
ggplot(aes(y=Prop, x= management, fill = services)) +
geom_bar(position="stack", stat="identity", color = "black")+
scale_fill_manual(values = color_services$color) +
labs(x='Management', y="Prop. direct E(D)S per management") +theme_bw()+
theme_classic()+
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13, color='black'),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =15),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11),
legend.position = "bottom")
Direct_ES_management
ggsave("Graphs/Prop_ES_direct_CP.png")
# Direct
I_ES<-output_ind_ES %>% group_by(management) %>%
mutate(Total = n()) %>% group_by(management,services_to) %>%
summarise(Number = n(), Prop = Number /Total) %>% unique()
Indirect_ES_management<- I_ES  %>%
ggplot(aes(y=Prop, x= management, fill = services_to)) +
geom_bar(position="stack", stat="identity", color = "black")+
scale_fill_manual(values = color_services$color) +
labs(x='Management', y="Prop. indirect effects on E(D)S per management") +theme_bw()+
theme_classic()+
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13, color='black'),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =15),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11),
legend.position = "bottom")
Indirect_ES_management
ggsave("Graphs/Prop_ES_indirect_CP.png")
ggsave("Graphs/Prop_ES_indirect_CP.png",  width = 10, height = 8)
Indirect_ES_management<- I_ES  %>%
ggplot(aes(y=Prop, x= management, fill = services_to)) +
geom_bar(position="stack", stat="identity", color = "black")+
scale_fill_manual(values = color_services$color) +
labs(x='Management', y="Prop. indirect effects on E(D)S per management") +theme_bw()+
theme_classic()+
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13, color='black'),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =15),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))
Indirect_ES_management<- I_ES  %>%
ggplot(aes(y=Prop, x= management, fill = services_to)) +
geom_bar(position="stack", stat="identity", color = "black")+
scale_fill_manual(values = color_services$color) +
labs(x='Management', y="Prop. indirect effects on E(D)S per management") +theme_bw()+
theme_classic()+
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13, color='black'),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =15),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))
Indirect_ES_management
ggsave("Graphs/Prop_ES_indirect_CP.png",  width = 10, height = 8)
Direct_ES_management<- D_ES  %>%
ggplot(aes(y=Prop, x= management, fill = services)) +
geom_bar(position="stack", stat="identity", color = "black")+
scale_fill_manual(values = color_services$color) +
labs(x='Management', y="Prop. direct E(D)S per management") +theme_bw()+
theme_classic()+
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13, color='black'),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =15),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11),
legend.position = "bottom")
ggsave("Graphs/Prop_ES_direct_CP.png", width = 10, height = 8)
Direct_ES_management<- D_ES  %>%
ggplot(aes(y=Prop, x= management, fill = services)) +
geom_bar(position="stack", stat="identity", color = "black")+
scale_fill_manual(values = color_services$color) +
labs(x='Management', y="Prop. direct E(D)S per management") +theme_bw()+
theme_classic()+
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13, color='black'),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =15),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))
Direct_ES_management
ggsave("Graphs/Prop_ES_direct_CP.png", width = 10, height = 8)
