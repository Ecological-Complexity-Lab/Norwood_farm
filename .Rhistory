summarize( layer= "Tot",Number = n(), Prop = Number /Total) %>% unique()
taxon_tot<-taxon_tot[,c(3,1,2,4,5)]
taxon_ES<-rbind(taxon_tot,taxon_ES)
#Direct
D_taxon_ES<-taxon_ES %>% filter(type == "D") %>%
ggplot(aes(y=Prop, x=layer, fill = taxon)) +
geom_bar(position="stack", stat="identity")+ ggtitle("Direct ES - 2 hops")+
labs(x='Habitat', y="Prop ES provided per taxon") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=13, color='black'),
axis.text.x= element_text(size =11, angle = 90),
axis.text.y= element_text(size =11, angle = 90),
axis.title = element_text(size=15, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_blank(),
legend.text = element_text(size = 5),
legend.position = "bottom",
legend.key.size = unit(0.7,"line"))
#Indirect
I_taxon_ES<-taxon_ES %>% filter(type == "I") %>%
ggplot(aes(y=Prop, x=layer, fill = taxon)) +
geom_bar(position="stack", stat="identity")+ ggtitle("Indirect ES - 2 hops")+
labs(x='Habitat', y="Prop ES provided per taxon") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=13, color='black'),
axis.text.x= element_text(size =11, angle = 90),
axis.text.y= element_text(size =11, angle = 90),
axis.title = element_text(size=15, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_blank(),
legend.text = element_text(size = 5),
legend.position = "bottom",
legend.key.size = unit(0.7,"line"))
upper_row
## Prop of direct and Indirect ES provided per taxon /habitat
Final_ES <- read.csv("Final_ES.csv", sep =",")
## Prop of direct and Indirect ES provided per taxon /habitat
Final_ES <- read.csv("Final_ES.csv", sep =",")
taxon_ES<-Final_ES %>% group_by(layer, type) %>% filter(services_to != "None") %>%
mutate(Total = n()) %>% group_by(layer,type, taxon) %>%
summarize( Number = n(), Prop = Number /Total) %>% unique()
taxon_tot<- Final_ES %>% group_by(type) %>% filter(services_to != "None") %>%
mutate(Total = n()) %>% group_by(type, taxon) %>%
summarize( layer= "Tot",Number = n(), Prop = Number /Total) %>% unique()
taxon_tot<- Final_ES %>% group_by(type) %>% filter(services_to != "None") %>%
mutate(Total = n()) %>% group_by(type, taxon) %>%
summarize( layer= "Tot",Number = n(), Prop = Number /Total) %>% unique()
taxon_tot<-taxon_tot[,c(3,1,2,4,5)]
taxon_ES<-rbind(taxon_tot,taxon_ES)
taxon_ES<-rbind(taxon_tot,taxon_ES)
#Direct
D_taxon_ES<-taxon_ES %>% filter(type == "D") %>%
ggplot(aes(y=Prop, x=layer, fill = taxon)) +
geom_bar(position="stack", stat="identity")+ ggtitle("Direct ES - 2 hops")+
labs(x='Habitat', y="Prop ES provided per taxon") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=13, color='black'),
axis.text.x= element_text(size =11, angle = 90),
axis.text.y= element_text(size =11, angle = 90),
axis.title = element_text(size=15, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_blank(),
legend.text = element_text(size = 5),
legend.position = "bottom",
legend.key.size = unit(0.7,"line"))
#Indirect
I_taxon_ES<-taxon_ES %>% filter(type == "I") %>%
ggplot(aes(y=Prop, x=layer, fill = taxon)) +
geom_bar(position="stack", stat="identity")+ ggtitle("Indirect ES - 2 hops")+
labs(x='Habitat', y="Prop ES provided per taxon") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=13, color='black'),
axis.text.x= element_text(size =11, angle = 90),
axis.text.y= element_text(size =11, angle = 90),
axis.title = element_text(size=15, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_blank(),
legend.text = element_text(size = 5),
legend.position = "bottom",
legend.key.size = unit(0.7,"line"))
upper_row<- plot_grid(D_taxon_ES ,
I_taxon_ES ,
ncol = 2)
upper_row
## Prop of direct and Indirect ES provided per taxon /habitat
Final_ES <- read.csv("Final_ES.csv", sep =",")
taxon_ES<-Final_ES %>% group_by(layer, type) %>% filter(services_to != "None") %>%
mutate(Total = n()) %>% group_by(layer,type, taxon) %>%
summarize( Number = n(), Prop = Number /Total) %>% unique()
taxon_tot<- Final_ES %>% group_by(type) %>% filter(services_to != "None") %>%
mutate(Total = n()) %>% group_by(type, taxon) %>%
summarize( layer= "Tot",Number = n(), Prop = Number /Total) %>% unique()
taxon_tot<-taxon_tot[,c(3,1,2,4,5)]
taxon_ES<-rbind(taxon_tot,taxon_ES)
#Direct
D_taxon_ES<-taxon_ES %>% filter(type == "D") %>%
ggplot(aes(y=Prop, x=layer, fill = taxon)) +
geom_bar(position="stack", stat="identity")+ ggtitle("Direct ES - 2 hops")+
labs(x='Habitat', y="Prop ES provided per taxon") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=13, color='black'),
axis.text.x= element_text(size =11, angle = 90),
axis.text.y= element_text(size =11, angle = 90),
axis.title = element_text(size=15, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_blank(),
legend.text = element_text(size = 5),
legend.position = "bottom",
legend.key.size = unit(0.7,"line"))
#Indirect
I_taxon_ES<-taxon_ES %>% filter(type == "I") %>%
ggplot(aes(y=Prop, x=layer, fill = taxon)) +
geom_bar(position="stack", stat="identity")+ ggtitle("Indirect ES - 2 hops")+
labs(x='Habitat', y="Prop ES provided per taxon") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=13, color='black'),
axis.text.x= element_text(size =11, angle = 90),
axis.text.y= element_text(size =11, angle = 90),
axis.title = element_text(size=15, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_blank(),
legend.text = element_text(size = 5),
legend.position = "bottom",
legend.key.size = unit(0.7,"line"))
upper_row
upper_row
upper_row<- plot_grid(D_taxon_ES ,
I_taxon_ES ,
ncol = 2)
upper_row
knitr::opts_chunk$set(echo = FALSE, results = "asis", message=FALSE, warning=FALSE, cache=TRUE, eval = TRUE, dev = c('png'), out.width = '100%', out.height='40%')
## Direct and indirect ES provided in each habitat and aggregated
Final_ES <- read.csv("Final_ES.csv", sep =",")
#1 hop
Hab_ES_prop<-Final_ES %>% group_by(layer, type) %>% filter( hop == 0 | hop == 1,
services_to != "None") %>%
summarize(count= n()) %>% group_by(layer) %>% mutate(tot =sum(count)) %>%
group_by(layer,type) %>% summarize(prop = count/tot)
#1 hop
Hab_ES_prop<-Final_ES %>% group_by(layer, type) %>% filter( hop == 0 | hop == 1,
services_to != "None") %>%
summarize(count= n()) %>% group_by(layer) %>% mutate(tot =sum(count)) %>%
group_by(layer,type) %>% summarize(prop = count/tot)
Hab_ES_1<-Hab_ES_prop%>%
ggplot(aes(y=prop, x=layer, fill =type)) +
geom_bar(position="stack", stat="identity")+ ggtitle("1 hop")+
labs(x='Habitat', y="Prop ES provided") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =13, angle = 90),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11),
legend.position = "bottom")
#2 hops
Hab_ES_prop_2<-Final_ES %>% group_by(layer, type) %>% filter(services_to != "None") %>%
summarize(count= n()) %>% group_by(layer) %>% mutate(tot =sum(count)) %>%
group_by(layer,type) %>% summarize(prop = count/tot)
Hab_ES_2<-Hab_ES_prop_2 %>%
ggplot(aes(y=prop, x=layer, fill =type)) +
geom_bar(position="stack", stat="identity")+ ggtitle("2 hops")+
labs(x='Habitat', y="Prop ES provided") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =13, angle = 90),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11),
legend.position = "bottom")
upper_row<- plot_grid(Hab_ES_1 ,
Hab_ES_2 ,
ncol = 2)
## Prop of direct and Indirect ES provided per taxon /habitat
Final_ES <- read.csv("Final_ES.csv", sep =",")
## Prop of direct and Indirect ES provided per taxon /habitat
Final_ES <- read.csv("Final_ES.csv", sep =",")
taxon_ES_1<-Final_ES %>% group_by(layer, type) %>% filter(services_to != "None", hop == 0 | hop ==1) %>%
mutate(Total = n()) %>% group_by(layer,type, taxon) %>%
summarize( Number = n(), Prop = Number /Total) %>% unique()
taxon_ES_1<-Final_ES %>% group_by(layer, type) %>% filter(services_to != "None", hop == 0 | hop ==1) %>%
mutate(Total = n()) %>% group_by(layer,type, taxon) %>%
summarize( Number = n(), Prop = Number /Total) %>% unique()
taxon_tot_1<- Final_ES %>% group_by(type) %>% filter(services_to != "None",  hop == 0 |hop == 1) %>%
mutate(Total = n()) %>% group_by(type, taxon) %>%
summarize( layer= "Tot",Number = n(), Prop = Number /Total) %>% unique()
taxon_tot_1<- Final_ES %>% group_by(type) %>% filter(services_to != "None",  hop == 0 |hop == 1) %>%
mutate(Total = n()) %>% group_by(type, taxon) %>%
summarize( layer= "Tot",Number = n(), Prop = Number /Total) %>% unique()
taxon_tot_1<-taxon_tot_1[,c(3,1,2,4,5)]
taxon_tot_1<-taxon_tot_1[,c(3,1,2,4,5)]
taxon_ES_1<-rbind(taxon_tot_1,taxon_ES_1)
taxon_ES_1<-rbind(taxon_tot_1,taxon_ES_1)
#Direct
D_taxon_ES_1<-taxon_ES_1 %>% filter(type == "D") %>%
ggplot(aes(y=Prop, x=layer, fill = taxon)) +
geom_bar(position="stack", stat="identity")+ ggtitle("Direct ES - 1 hop")+
labs(x='Habitat', y="Prop ES provided per taxon") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=13, color='black'),
axis.text.x= element_text(size =11, angle = 90),
axis.text.y= element_text(size =11, angle = 90),
axis.title = element_text(size=15, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_blank(),
legend.text = element_text(size = 5),
legend.position = "bottom",
legend.key.size = unit(0.7,"line"))
taxon_ES_1<-rbind(taxon_tot_1,taxon_ES_1)
#Direct
D_taxon_ES_1<-taxon_ES_1 %>% filter(type == "D") %>%
ggplot(aes(y=Prop, x=layer, fill = taxon)) +
geom_bar(position="stack", stat="identity")+ ggtitle("Direct ES - 1 hop")+
labs(x='Habitat', y="Prop ES provided per taxon") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=13, color='black'),
axis.text.x= element_text(size =11, angle = 90),
axis.text.y= element_text(size =11, angle = 90),
axis.title = element_text(size=15, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_blank(),
legend.text = element_text(size = 5),
legend.position = "bottom",
legend.key.size = unit(0.7,"line"))
#Indirect
I_taxon_ES_1<-taxon_ES_1 %>% filter(type == "I") %>%
ggplot(aes(y=Prop, x=layer, fill = taxon)) +
geom_bar(position="stack", stat="identity")+ ggtitle("Indirect ES - 1 hop")+
labs(x='Habitat', y="Prop ES provided per taxon") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=13, color='black'),
axis.text.x= element_text(size =11, angle = 90),
axis.text.y= element_text(size =11, angle = 90),
axis.title = element_text(size=15, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_blank(),
legend.text = element_text(size = 5),
legend.position = "bottom",
legend.key.size = unit(0.7,"line"))
taxon_ES_1<-rbind(taxon_tot_1,taxon_ES_1)
#Direct
D_taxon_ES_1<-taxon_ES_1 %>% filter(type == "D") %>%
ggplot(aes(y=Prop, x=layer, fill = taxon)) +
geom_bar(position="stack", stat="identity")+ ggtitle("Direct ES - 1 hop")+
labs(x='Habitat', y="Prop ES provided per taxon") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=13, color='black'),
axis.text.x= element_text(size =11, angle = 90),
axis.text.y= element_text(size =11, angle = 90),
axis.title = element_text(size=15, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_blank(),
legend.text = element_text(size = 5),
legend.position = "bottom",
legend.key.size = unit(0.7,"line"))
#Indirect
I_taxon_ES_1<-taxon_ES_1 %>% filter(type == "I") %>%
ggplot(aes(y=Prop, x=layer, fill = taxon)) +
geom_bar(position="stack", stat="identity")+ ggtitle("Indirect ES - 1 hop")+
labs(x='Habitat', y="Prop ES provided per taxon") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=13, color='black'),
axis.text.x= element_text(size =11, angle = 90),
axis.text.y= element_text(size =11, angle = 90),
axis.title = element_text(size=15, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_blank(),
legend.text = element_text(size = 5),
legend.position = "bottom",
legend.key.size = unit(0.7,"line"))
upper_row<- plot_grid(D_taxon_ES_1 ,
I_taxon_ES_1 ,
ncol = 2)
#Indirect
I_taxon_ES_1<-taxon_ES_1 %>% filter(type == "I") %>%
ggplot(aes(y=Prop, x=layer, fill = taxon)) +
geom_bar(position="stack", stat="identity")+ ggtitle("Indirect ES - 1 hop")+
labs(x='Habitat', y="Prop ES provided per taxon") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=13, color='black'),
axis.text.x= element_text(size =11, angle = 90),
axis.text.y= element_text(size =11, angle = 90),
axis.title = element_text(size=15, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_blank(),
legend.text = element_text(size = 5),
legend.position = "bottom",
legend.key.size = unit(0.7,"line"))
upper_row<- plot_grid(D_taxon_ES_1 ,
I_taxon_ES_1 ,
ncol = 2)
upper_row
## Prop of direct and Indirect ES provided per taxon /habitat
Final_ES <- read.csv("Final_ES.csv", sep =",")
taxon_ES_1<-Final_ES %>% group_by(layer, type) %>% filter(services_to != "None", hop == 0 | hop ==1) %>%
mutate(Total = n()) %>% group_by(layer,type, taxon) %>%
summarize( Number = n(), Prop = Number /Total) %>% unique()
taxon_tot_1<- Final_ES %>% group_by(type) %>% filter(services_to != "None",  hop == 0 |hop == 1) %>%
mutate(Total = n()) %>% group_by(type, taxon) %>%
summarize( layer= "Tot",Number = n(), Prop = Number /Total) %>% unique()
taxon_tot_1<-taxon_tot_1[,c(3,1,2,4,5)]
taxon_ES_1<-rbind(taxon_tot_1,taxon_ES_1)
#Direct
D_taxon_ES_1<-taxon_ES_1 %>% filter(type == "D") %>%
ggplot(aes(y=Prop, x=layer, fill = taxon)) +
geom_bar(position="stack", stat="identity")+ ggtitle("Direct ES - 1 hop")+
labs(x='Habitat', y="Prop ES provided per taxon") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=13, color='black'),
axis.text.x= element_text(size =11, angle = 90),
axis.text.y= element_text(size =11, angle = 90),
axis.title = element_text(size=15, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_blank(),
legend.text = element_text(size = 5),
legend.position = "bottom",
legend.key.size = unit(0.7,"line"))
upper_row<- plot_grid(D_taxon_ES_1 ,
I_taxon_ES_1 ,
ncol = 2)
upper_row
knitr::opts_chunk$set(echo = FALSE, results = "asis", message=FALSE, warning=FALSE, cache=TRUE, eval = TRUE, dev = c('png'), out.width = '100%', out.height='40%')
## Prop of direct and Indirect ES provided per taxon /habitat
Final_ES <- read.csv("Final_ES.csv", sep =",")
## Prop of direct and Indirect ES provided per taxon /habitat
Final_ES <- read.csv("Final_ES.csv", sep =",")
taxon_ES_1<-Final_ES %>% group_by(layer, type) %>% filter(services_to != "None", hop == 0 | hop ==1) %>%
mutate(Total = n()) %>% group_by(layer,type, taxon) %>%
summarize( Number = n(), Prop = Number /Total) %>% unique()
taxon_tot_1<-taxon_tot_1[,c(3,1,2,4,5)]
knitr::opts_chunk$set(echo = FALSE, results = "asis", message=FALSE, warning=FALSE, cache=TRUE, eval = TRUE, dev = c('png'), out.width = '100%', out.height='40%')
library(readxl)
library(emln)#multilayer package
library(readr)
library(ggplot2)
setwd("D:/Trabajo/Papers/Norwood_Farm/norwood-ecosystem-services-main_Tinio")
######### --- Upload multilayer network
Norwood_farm<-readRDS("Data/Norwood_farm.RData") #read multilayer object
Norwood_farm$extended_ids$weight<-1 # non-weighted for now
##### -- Extensive
extensive_edgelist<- Norwood_farm$extended_ids %>%
select(-layer_to) %>% rename("habitat" = "layer_from") %>%
mutate(management = "E")
##### -- Semi - extensive (replace "WD" and "RG" for "CP")
sem_ext_edgelist_rem<- Norwood_farm$extended_ids %>% filter(layer_from != 9 & layer_from != 11) %>%
select(-layer_to) %>% rename("habitat" = "layer_from")  #links from "WD" and "RG" removed
CP_1<- Norwood_farm$extended_ids %>% filter(layer_from  == 1) %>% select(-layer_to,-layer_from) %>%
mutate (habitat = 12)#links from "CP" to add as new habitat (12)
CP_2<- CP_1 %>% mutate(habitat = 13)#links from "CP" to add as new habitat (13)
sem_ext_edgelist<-rbind(sem_ext_edgelist_rem,CP_1, CP_2) %>% mutate(management = "SE") #two times CP because two habitats are changed from the extensive scenario
##### -- Moderate (replace "WD","RG","MH"and "NH" for "CP")
mod_edgelist_rem<- Norwood_farm$extended_ids %>% filter(layer_from != 9 & layer_from != 11 &
layer_from != 5 & layer_from != 6) %>%
select(-layer_to)%>%
rename("habitat" = "layer_from") #links from "WD","RG","MH"and "NH" removed
CP_3<- CP_1 %>% mutate(habitat = 14)#links from "CP" to add as new habitat (14)
CP_4<- CP_1 %>% mutate(habitat = 15)#links from "CP" to add as new habitat (15)
mod_edgelist<-rbind(mod_edgelist_rem,CP_1,CP_2,CP_3,CP_4) %>% mutate(management = "M") # 4times CP because 4 habitats are changed from the extensive scenario
##### -- Semi - intensive (replace "WD","RG","MH","NH"and "GM" for "CP")
sem_int_edgelist_rem<- Norwood_farm$extended_ids %>% filter(layer_from != 9 & layer_from != 11 &
layer_from != 5 & layer_from != 6 &
layer_from != 2) %>%
select(-layer_to)%>%
rename("habitat" = "layer_from")#links from "WD","RG","MH","NH"and "GM" removed
CP_5<- CP_1 %>% mutate(habitat = 16)#links from "CP" to add as new habitat (16)
sem_int_edgelist<-rbind(sem_int_edgelist_rem,CP_1,CP_2,CP_3,CP_4,CP_5) %>% mutate(management = "SI") # 5 times CP because 5 habitats are changed from the extensive scenario
##### -- Intensive (replace "WD","RG","MH","NH", "GM" and "SF" for "CP")
int_edgelist_rem<- Norwood_farm$extended_ids %>% filter(layer_from != 9 & layer_from != 11 &
layer_from != 5 & layer_from != 6 &
layer_from != 2 & layer_from != 10) %>%
select(-layer_to)%>%
rename("habitat" = "layer_from")#links from "WD","RG","MH","NH", "GM" and "SF" removed
CP_6<- CP_1 %>% mutate(habitat = 17)#links from "CP" to add as new habitat (17)
int_edgelist<-rbind(int_edgelist_rem,CP_1,CP_2,CP_3,CP_4,CP_5, CP_6) %>% mutate(management = "I") # 6 times CP because 6 habitats are changed from the extensive scenario
land_change_binary<-rbind(extensive_edgelist,sem_ext_edgelist,mod_edgelist,
sem_int_edgelist,int_edgelist)
##  Create node_list per habitat/management
node_list<-land_change_binary %>% pivot_longer(cols = 2:3, names_to = "species", values_to = "node_id") %>%
select(-species) %>%  unique()
nodes_ES_binary<- right_join(node_list, Norwood_farm$nodes, by = "node_id")%>%
select(habitat,management,node_id,taxon,"Crop production",
"Pollination", "Crop damage", "Pest control", "Seed dispersal", "Butterfly watching", "Bird watching") %>%
group_by(management,habitat,node_id) %>%
gather("services","value", 5:11) #we conserve species that not directly provide ES because can serve as intermediate hop
nodes_ES_binary$management <- factor(nodes_ES_binary$management, levels = c("E", "SE", "M", "SI","I")) #change order of factors
## -- Estimate direct E(D)S provision
direct_ES_binary <- nodes_ES_binary %>% filter (value ==1) %>%
mutate (type = "D") %>% select(-value)
write.csv(direct_ES_binary,"Data/Land_use_dir_binary.csv", row.names= FALSE)
number_ES<-nodes_ES_binary %>% group_by(management) %>%
filter (value ==1 & services != "Crop damage") %>% summarise (ES =sum(value))#count ES provision
number_EDS<-nodes_ES_binary %>% group_by(management) %>%
filter (value ==1 & services == "Crop damage") %>% summarise (EDS =sum(value))#count EDS provision
total<-cbind(number_ES,number_EDS[,-1])
ratio_direct<-total %>% mutate(ratio_direct = ES/EDS)
write.csv(ratio_direct,"Data/Land_use_rat_dir_binary.csv", row.names= FALSE)
knitr::opts_chunk$set(echo = FALSE, results = "asis", message=FALSE, warning=FALSE, cache=TRUE, eval = TRUE, dev = c('png'), out.width = '100%', out.height='40%')
direct_ES_binary <- read.csv("Land_use_dir_binary.csv", sep =",")
View(direct_ES_binary)
nodes_ES_binary$management <- factor(nodes_ES_binary$management, levels = c("E", "SE", "M", "SI","I")) #change order of factors
ratio_direct$management <- factor(ratio_direct$management, levels = c("E", "SE", "M", "SI","I")) #change order of factors
library(emln)#multilayer package
library(readr)
library(ggplot2)
setwd("D:/Trabajo/Papers/Norwood_Farm/norwood-ecosystem-services-main_Tinio")
######### --- Upload multilayer network
Norwood_farm<-readRDS("Data/Norwood_farm.RData") #read multilayer object
Norwood_farm$extended_ids$weight<-1 # non-weighted for now
extensive_edgelist<- Norwood_farm$extended_ids %>%
select(-layer_from,-layer_to) %>% unique() %>% #unique because it's presence/absence
mutate(management = "E")
##### -- Semi - extensive (replace "WD" and "RG" for "CP")
sem_ext_edgelist<- Norwood_farm$extended_ids %>% filter(layer_from != 9 & layer_from != 11) %>%
select(-layer_from,-layer_to) %>% unique() %>% mutate(management = "SE")
##### -- Moderate (replace "WD","RG","MH"and "NH" for "CP")
mod_edgelist<- Norwood_farm$extended_ids %>% filter(layer_from != 9 & layer_from != 11 &
layer_from != 5 & layer_from != 6) %>%
select(-layer_from,-layer_to) %>% unique() %>% mutate(management = "M")
##### -- Semi - intensive (replace "WD","RG","MH","NH"and "GM" for "CP")
sem_int_edgelist<- Norwood_farm$extended_ids %>% filter(layer_from != 9 & layer_from != 11 &
layer_from != 5 & layer_from != 6 &
layer_from != 2) %>%
select(-layer_from,-layer_to) %>% unique() %>% mutate(management = "SI")
##### -- Intensive (replace "WD","RG","MH","NH", "GM" and "SF" for "CP")
int_edgelist<- Norwood_farm$extended_ids %>% filter(layer_from != 9 & layer_from != 11 &
layer_from != 5 & layer_from != 6 &
layer_from != 2 & layer_from != 10) %>%
select(-layer_from,-layer_to) %>% unique() %>% mutate(management = "I")
land_change_removal<-rbind(extensive_edgelist,sem_ext_edgelist,mod_edgelist,
sem_int_edgelist,int_edgelist)
land_change_removal<-land_change_removal[,c(4,1,2,3)]
##  Create node_list per management
node_list<-land_change_removal %>% pivot_longer(cols = 2:3, names_to = "species", values_to = "node_id") %>%
select(-species) %>%  unique()
nodes_ES<- right_join(node_list, Norwood_farm$nodes, by = "node_id")%>%
select(management,node_id,taxon,"Crop production",
"Pollination", "Crop damage", "Pest control", "Seed dispersal", "Butterfly watching", "Bird watching") %>%
group_by(management,node_id) %>%
gather("services","value", 4:10) #we conserve species that not directly provide ES because can serve as intermediate hop
nodes_ES$management <- factor(nodes_ES$management, levels = c("E", "SE", "M", "SI","I")) #change order of factors
## -- Estimate direct E(D)S provision
direct_ES<- nodes_ES %>% filter (value ==1) %>%
mutate (type = "D") %>% select(-value)
write.csv(direct_ES,"Data/Land_use_dir_binary_removal.csv", row.names= FALSE)
number_ES<-nodes_ES %>% group_by(management) %>%
filter (value ==1 & services != "Crop damage") %>% summarise (ES =sum(value))#count ES provision
number_EDS<-nodes_ES %>% group_by(management) %>%
filter (value ==1 & services == "Crop damage") %>% summarise (EDS =sum(value))#count EDS provision
total<-cbind(number_ES,number_EDS[,-1])
ratio_direct<-total %>% mutate(ratio_direct = ES/EDS)
write.csv(ratio_direct,"Data/Land_use_rat_dir_binary_removal.csv", row.names= FALSE)
