labs(x='Habitat Management', y="Ecosystem (dis)services")+
theme_minimal()+
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13,  color = "blue"),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =15),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))   +
geom_segment(data = filter(z_score_tot, Output == "Benchmark"),
aes(x = as.numeric(management) - 0.5,
y = as.numeric(services) - 0.5,
xend = as.numeric(management) + 0.5,
yend = as.numeric(services) + 0.5),
color = "black", size = 0.5)
ggplot(z_score_tot, aes(management, services, fill= Output)) +
geom_tile(color = "black")+
scale_fill_manual(values = c("red","ivory1","ivory1"),
labels = c("Lower than random",
"No difference",
"Benchmark"))+
labs(x='Habitat Management', y="Ecosystem (dis)services")+
theme_minimal()+
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13,  color = c("black",'yellow',"black",'yellow',"black",'yellow','green')),
# axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =15),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))   +
geom_segment(data = filter(z_score_tot, Output == "Benchmark"),
aes(x = as.numeric(management) - 0.5,
y = as.numeric(services) - 0.5,
xend = as.numeric(management) + 0.5,
yend = as.numeric(services) + 0.5),
color = "black", size = 0.5)
ggplot(z_score_tot, aes(management, services, fill= Output)) +
geom_tile(color = "black")+
scale_fill_manual(values = c("red","ivory1","ivory1"),
labels = c("Lower than random",
"No difference",
"Benchmark"))+
labs(x='Habitat Management', y="Ecosystem (dis)services")+
theme_minimal()+
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13,  color = c('#1b9e77','#d95f02','#7570b3','#e7298a','#2c7fb8','#e6ab02','#a6761d')),
# axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =15),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))   +
geom_segment(data = filter(z_score_tot, Output == "Benchmark"),
aes(x = as.numeric(management) - 0.5,
y = as.numeric(services) - 0.5,
xend = as.numeric(management) + 0.5,
yend = as.numeric(services) + 0.5),
color = "black", size = 0.5)
tibble(
services = unique(direct_ES$services),
color = c('#1b9e77','#d95f02','#7570b3','#e7298a','#2c7fb8','#e6ab02','#a6761d'))
z_score_tot$services
ggplot(z_score_tot, aes(management, services, fill= Output)) +
geom_tile(color = "black")+
scale_fill_manual(values = c("red","ivory1","ivory1"),
labels = c("Lower than random",
"No difference",
"Benchmark"))+
labs(x='Habitat Management', y="Ecosystem (dis)services")+
theme_minimal()+
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13,  color = color_services$color[match(color_services$services, z_score_tot$services)]),
# axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =15),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))   +
geom_segment(data = filter(z_score_tot, Output == "Benchmark"),
aes(x = as.numeric(management) - 0.5,
y = as.numeric(services) - 0.5,
xend = as.numeric(management) + 0.5,
yend = as.numeric(services) + 0.5),
color = "black", size = 0.5)
ggplot(z_score_tot, aes(management, services, fill= Output)) +
geom_tile(color = "black")+
scale_fill_manual(values = c("red","ivory1","ivory1"),
labels = c("Lower than random",
"No difference",
"Benchmark"))+
labs(x='Habitat Management', y="Ecosystem (dis)services")+
theme_minimal()+
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13,  color = color_services$color[match(z_score_tot$services, color_services$services)]),
# axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =15),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))   +
geom_segment(data = filter(z_score_tot, Output == "Benchmark"),
aes(x = as.numeric(management) - 0.5,
y = as.numeric(services) - 0.5,
xend = as.numeric(management) + 0.5,
yend = as.numeric(services) + 0.5),
color = "black", size = 0.5)
ggplot(z_score_tot, aes(management, services, fill= Output)) +
geom_tile(color = "black")+
scale_fill_manual(values = c("red","ivory1","ivory1"),
labels = c("Lower than random",
"No difference",
"Benchmark"))+
labs(x='Habitat Management', y="Ecosystem (dis)services")+
theme_minimal()+
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13,  color = color_services$color[match(z_score_tot$services, levels(color_services$services))]),
# axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =15),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))   +
geom_segment(data = filter(z_score_tot, Output == "Benchmark"),
aes(x = as.numeric(management) - 0.5,
y = as.numeric(services) - 0.5,
xend = as.numeric(management) + 0.5,
yend = as.numeric(services) + 0.5),
color = "black", size = 0.5)
color_services$color[match(z_score_tot$services, levels(color_services$services))]
color_services$color
match(z_score_tot$services, levels(color_services$services))
z_score_tot$services
match(levels(z_score_tot$services), color_services$services)
ggplot(z_score_tot, aes(management, services, fill= Output)) +
geom_tile(color = "black")+
scale_fill_manual(values = c("red","ivory1","ivory1"),
labels = c("Lower than random",
"No difference",
"Benchmark"))+
labs(x='Habitat Management', y="Ecosystem (dis)services")+
theme_minimal()+
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13,  color = color_services$color[match(levels(z_score_tot$services), color_services$services)]),
# axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =15),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))   +
geom_segment(data = filter(z_score_tot, Output == "Benchmark"),
aes(x = as.numeric(management) - 0.5,
y = as.numeric(services) - 0.5,
xend = as.numeric(management) + 0.5,
yend = as.numeric(services) + 0.5),
color = "black", size = 0.5)
color_services
unique(direct_ES$services)
color_services<-tibble(
services = unique(direct_ES$services),
color = c('#1b9e77','#d95f02','#7570b3','#e7298a','#2c7fb8','#e6ab02','#a6761d')) %>%
# arrange(desc(services)) #do it manually
# Create the custom legend data
pdf("Graphs/z_score_dir_CP.pdf", width = 14, height = 7)
color_services<-tibble(
services = unique(direct_ES$services),
color = c('#1b9e77','#d95f02','#7570b3','#e7298a','#2c7fb8','#e6ab02','#a6761d')) %>%
arrange(desc(services)) #do it manually
color_services
services = unique(direct_ES$services)
color_services<-tibble(
services = unique(direct_ES$services),
#color = c('#1b9e77','#d95f02','#7570b3','#e7298a','#2c7fb8','#e6ab02','#a6761d')),
color = c('#a6761d','#e6ab02','#2c7fb8','#e7298a','#7570b3','#d95f02','#1b9e77'))%>%
arrange(desc(services)) #do it manually
ggplot(z_score_tot, aes(management, services, fill= Output)) +
geom_tile(color = "black")+
scale_fill_manual(values = c("red","ivory1","ivory1"),
labels = c("Lower than random",
"No difference",
"Benchmark"))+
labs(x='Habitat Management', y="Ecosystem (dis)services")+
theme_minimal()+
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13,  color = color_services$color[match(levels(z_score_tot$services), color_services$services)]),
# axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =15),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))   +
geom_segment(data = filter(z_score_tot, Output == "Benchmark"),
aes(x = as.numeric(management) - 0.5,
y = as.numeric(services) - 0.5,
xend = as.numeric(management) + 0.5,
yend = as.numeric(services) + 0.5),
color = "black", size = 0.5)
color_services<-tibble(
services = unique(direct_ES$services),
#color = c('#1b9e77','#d95f02','#7570b3','#e7298a','#2c7fb8','#e6ab02','#a6761d')),
color = c('#a6761d','#e6ab02','#2c7fb8','#e7298a','#7570b3','#d95f02','#1b9e77'))%>%
#arrange(desc(services)) #do it manually
# Create the custom legend data
pdf("Graphs/z_score_dir_CP.pdf", width = 14, height = 7)
color_services<-tibble(
services = unique(direct_ES$services),
#color = c('#1b9e77','#d95f02','#7570b3','#e7298a','#2c7fb8','#e6ab02','#a6761d')),
color = c('#a6761d','#e6ab02','#2c7fb8','#e7298a','#7570b3','#d95f02','#1b9e77'))
ggplot(z_score_tot, aes(management, services, fill= Output)) +
geom_tile(color = "black")+
scale_fill_manual(values = c("red","ivory1","ivory1"),
labels = c("Lower than random",
"No difference",
"Benchmark"))+
labs(x='Habitat Management', y="Ecosystem (dis)services")+
theme_minimal()+
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13,  color = color_services$color[match(levels(z_score_tot$services), color_services$services)]),
# axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =15),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))   +
geom_segment(data = filter(z_score_tot, Output == "Benchmark"),
aes(x = as.numeric(management) - 0.5,
y = as.numeric(services) - 0.5,
xend = as.numeric(management) + 0.5,
yend = as.numeric(services) + 0.5),
color = "black", size = 0.5)
color_services<-tibble(
services = unique(direct_ES$services),
#color = c('#1b9e77','#d95f02','#7570b3','#e7298a','#2c7fb8','#e6ab02','#a6761d')),
color = c('#a6761d','#e6ab02','#2c7fb8','#e7298a','#7570b3','#d95f02','#1b9e77'))
ggplot(z_score_tot, aes(management, services, fill= Output)) +
geom_tile(color = "black")+
scale_fill_manual(values = c("red","ivory1","ivory1"),
labels = c("Lower than random",
"No difference",
"Benchmark"))+
labs(x='Habitat Management', y="Ecosystem (dis)services")+
theme_minimal()+
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13,  color = color_services$color[match(levels(z_score_tot$services), color_services$services)]),
# axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =15),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))   +
geom_segment(data = filter(z_score_tot, Output == "Benchmark"),
aes(x = as.numeric(management) - 0.5,
y = as.numeric(services) - 0.5,
xend = as.numeric(management) + 0.5,
yend = as.numeric(services) + 0.5),
color = "black", size = 0.5)
ggplot(z_score_tot, aes(management, services, fill= Output)) +
geom_tile(color = "black")+
scale_fill_manual(values = c("red","ivory1","ivory1"),
labels = c("Lower than random",
"No difference",
"Benchmark"))+
labs(x='Habitat Management', y="Ecosystem (dis)services")+
theme_minimal()+
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13,  color = color_services$color[match(levels(z_score_tot$services), color_services$services)]),
# axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =15),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))   +
geom_segment(data = filter(z_score_tot, Output == "Benchmark"),
aes(x = as.numeric(management) - 0.5,
y = as.numeric(services) - 0.5,
xend = as.numeric(management) + 0.5,
yend = as.numeric(services) + 0.5),
color = "black", size = 0.5)
color_services<-tibble(
services = unique(direct_ES$services),
#color = c('#1b9e77','#d95f02','#7570b3','#e7298a','#2c7fb8','#e6ab02','#a6761d')),
color = c('#7570b3','#e6ab02','#2c7fb8','#e7298a','#a6761d','#d95f02','#1b9e77'))
color_services<-tibble(
services = unique(direct_ES$services),
#color = c('#1b9e77','#d95f02','#7570b3','#e7298a','#2c7fb8','#e6ab02','#a6761d')),
color = c('#7570b3','#e6ab02','#2c7fb8','#e7298a','#a6761d','#d95f02','#1b9e77'))
ggplot(z_score_tot, aes(management, services, fill= Output)) +
geom_tile(color = "black")+
scale_fill_manual(values = c("red","ivory1","ivory1"),
labels = c("Lower than random",
"No difference",
"Benchmark"))+
labs(x='Habitat Management', y="Ecosystem (dis)services")+
theme_minimal()+
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13,  color = color_services$color[match(levels(z_score_tot$services), color_services$services)]),
# axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =15),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))   +
geom_segment(data = filter(z_score_tot, Output == "Benchmark"),
aes(x = as.numeric(management) - 0.5,
y = as.numeric(services) - 0.5,
xend = as.numeric(management) + 0.5,
yend = as.numeric(services) + 0.5),
color = "black", size = 0.5)
View(color_services)
color_services<-tibble(
services = unique(direct_ES$services),
#color = c('#1b9e77','#d95f02','#7570b3','#e7298a','#2c7fb8','#e6ab02','#a6761d')),
color = c('#e7298a','#e6ab02','#7570b3','#e7298a','#a6761d','#d95f02','#1b9e77'))
ggplot(z_score_tot, aes(management, services, fill= Output)) +
geom_tile(color = "black")+
scale_fill_manual(values = c("red","ivory1","ivory1"),
labels = c("Lower than random",
"No difference",
"Benchmark"))+
labs(x='Habitat Management', y="Ecosystem (dis)services")+
theme_minimal()+
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13,  color = color_services$color[match(levels(z_score_tot$services), color_services$services)]),
# axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =15),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))   +
geom_segment(data = filter(z_score_tot, Output == "Benchmark"),
aes(x = as.numeric(management) - 0.5,
y = as.numeric(services) - 0.5,
xend = as.numeric(management) + 0.5,
yend = as.numeric(services) + 0.5),
color = "black", size = 0.5)
color_services<-tibble(
services = unique(direct_ES$services),
#color = c('#1b9e77','#d95f02','#7570b3','#e7298a','#2c7fb8','#e6ab02','#a6761d')),
color = c('#e7298a','#e6ab02','#7570b3','#2c7fb8','#a6761d','#d95f02','#1b9e77'))
ggplot(z_score_tot, aes(management, services, fill= Output)) +
geom_tile(color = "black")+
scale_fill_manual(values = c("red","ivory1","ivory1"),
labels = c("Lower than random",
"No difference",
"Benchmark"))+
labs(x='Habitat Management', y="Ecosystem (dis)services")+
theme_minimal()+
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13,  color = color_services$color[match(levels(z_score_tot$services), color_services$services)]),
# axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =15),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))   +
geom_segment(data = filter(z_score_tot, Output == "Benchmark"),
aes(x = as.numeric(management) - 0.5,
y = as.numeric(services) - 0.5,
xend = as.numeric(management) + 0.5,
yend = as.numeric(services) + 0.5),
color = "black", size = 0.5)
pdf("Graphs/z_score_dir_CP.pdf", width = 14, height = 7)
ggplot(z_score_tot, aes(management, services, fill= Output)) +
geom_tile(color = "black")+
scale_fill_manual(values = c("red","ivory1","ivory1"),
labels = c("Lower than random",
"No difference",
"Benchmark"))+
labs(x='Habitat Management', y="Ecosystem (dis)services")+
theme_minimal()+
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13,  color = color_services$color[match(levels(z_score_tot$services), color_services$services)]),
# axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =15),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))   +
geom_segment(data = filter(z_score_tot, Output == "Benchmark"),
aes(x = as.numeric(management) - 0.5,
y = as.numeric(services) - 0.5,
xend = as.numeric(management) + 0.5,
yend = as.numeric(services) + 0.5),
color = "black", size = 0.5)
dev.off()
pdf("Graphs/z_score_dir_CP.pdf", width = 14, height = 7)
ggplot(z_score_tot, aes(management, services, fill= Output)) +
geom_tile(color = "black")+
scale_fill_manual(values = c("red","ivory1","ivory1"),
labels = c("Lower than random",
"No difference",
"Benchmark"))+
labs(x='Habitat Management', y="Ecosystem (dis)services")+
theme_minimal()+
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13,  color = color_services$color[match(levels(z_score_tot$services), color_services$services)]),
# axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =15),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))   +
geom_segment(data = filter(z_score_tot, Output == "Benchmark"),
aes(x = as.numeric(management) - 0.5,
y = as.numeric(services) - 0.5,
xend = as.numeric(management) + 0.5,
yend = as.numeric(services) + 0.5),
color = "black", size = 0.5)
dev.off()
pdf("Graphs/z_score_dir_CP.pdf", width = 12, height = 7)
ggplot(z_score_tot, aes(management, services, fill= Output)) +
geom_tile(color = "black")+
scale_fill_manual(values = c("red","ivory1","ivory1"),
labels = c("Lower than random",
"No difference",
"Benchmark"))+
labs(x='Habitat Management', y="Ecosystem (dis)services")+
theme_minimal()+
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=13,  color = color_services$color[match(levels(z_score_tot$services), color_services$services)]),
# axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =15),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))   +
geom_segment(data = filter(z_score_tot, Output == "Benchmark"),
aes(x = as.numeric(management) - 0.5,
y = as.numeric(services) - 0.5,
xend = as.numeric(management) + 0.5,
yend = as.numeric(services) + 0.5),
color = "black", size = 0.5)
dev.off()
ggplot(z_score_tot, aes(management, services, fill= Output)) +
geom_tile(color = "black")+
scale_fill_manual(values = c("red","ivory1","ivory1"),
labels = c("Lower than random",
"No difference",
"Benchmark"))+
labs(x='Habitat Management', y="Ecosystem (dis)services")+
theme_minimal()+
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),
axis.text.y = element_text(size=13,  color = color_services$color[match(levels(z_score_tot$services), color_services$services)]),
# axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =15),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))   +
geom_segment(data = filter(z_score_tot, Output == "Benchmark"),
aes(x = as.numeric(management) - 0.5,
y = as.numeric(services) - 0.5,
xend = as.numeric(management) + 0.5,
yend = as.numeric(services) + 0.5),
color = "black", size = 0.5)
