install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("manlius/muxViz")
remove.packages("muxViz")
devtools::install_github("manlius/muxViz")
library(htmltools)
library(htmltools)
install.packages("htmltools")
detach("package:htmltools", unload = TRUE)
install.packages("htmltools")
devtools::install_github("manlius/muxViz")
install.packages("htmltools")
devtools::install_github("manlius/muxViz")
library(emln)#multilayer package
#load packages
library(igraph)
library(dplyr)
library(tidyverse)
#load packages
library(igraph)
library(dplyr)
library(tidyverse)
library(emln)
setwd("/Users/agustin/Desktop/Papers/Norwood_farm/Norwood_Tinio") #set directory
# List of noes with attributes
Norwood_farm<-readRDS("Data/Norwood_farm.RData") #read multilayer object
#upload and arrange dataframe
short_path_CP<-read.csv("Data/Land_use_shortpath_weighted_CP_intense.csv", row.names = 1) %>% mutate(land_use = "CP")
#short_path_PP<-read.csv("Data/Land_use_shortpath_weighted_PP_intense.csv", row.names = 1)%>% mutate(land_use = "PP")
short_path_land_change<-short_path_CP
## check exploratory tendency
exploratory_taxon<-short_path_land_change %>% group_by(land_use,taxon) %>%
summarise(mean_short = mean(short_ave),
se_short = sd(short_ave)/ sqrt(n())) %>%
arrange(mean_short)
exploratory_management<-short_path_land_change %>% group_by(land_use,management) %>%
summarise(mean_short = mean(short_ave),
se_short = sd(short_ave)/ sqrt(n()))
#calculate average short path of each species to all E(D)S in each habitat management
short_path_land_change_ave<- short_path_land_change %>% group_by(land_use, management,node_id) %>%
mutate(short_path_ave = mean(short_ave)) %>% select(-services, - short_ave) %>% unique()
## From Extensive to intensive CP
short_path_land_change_CP<- short_path_land_change_ave %>% filter(land_use== "CP")
prueba_type <- short_path_land_change %>% filter(land_use== "CP")
# Model
library(glmmTMB)
library(emmeans)
library(car)
short_CP<- glmmTMB(short_path_ave~management + taxon,
family = Gamma(link = "log"), data = short_path_land_change_CP) #we already check and this is the best model
Anova(short_CP)
model_summary<-summary(short_CP)
# Extract the coefficients (for GLMM It's the average including all the levels)
coefficients <- model_summary$coefficients$cond
# Extract coefficients for each factor
management_coefs <- coefficients[grep("management", rownames(coefficients)), "Estimate"]
taxon_coefs <- coefficients[grep("taxon", rownames(coefficients)), "Estimate"]
# Calculate summary statistics (e.g., mean) for each factor
management_summary <- mean(management_coefs)
taxon_summary <- mean(taxon_coefs)
#Homogeneity
EM<-resid(short_CP, type= "response")
FM<-fitted(short_CP)
plot(x=FM, y=EM, xlab = "Ajustados", ylab = "Residuales normalizados")
abline(0,0, col="red", lwd= 3)
#independence
E1_lme<-resid(short_CP, type= "response")
boxplot(E1_lme~short_path_land_change_CP$management, main="Management")
# posthoc
post_amount<- emmeans(short_CP, ~ management)#management
pairs(post_amount)
post_amount_taxon<- emmeans(short_CP, ~ taxon)#management
pairs(post_amount_taxon)
##stats
#average per management
ave_management<-short_path_land_change_CP %>% group_by(management) %>%
summarise(ave_short = mean(short_path_ave),
se_short = sd(short_path_ave) / sqrt(n()))
#average per taxon
ave_taxon<-short_path_land_change_CP %>% group_by(taxon) %>%
summarise(ave_short = mean(short_path_ave),
se_short = sd(short_path_ave) / sqrt(n()))
#average per management and taxon
ave_management_taxon<-short_path_land_change_CP %>% group_by(management,taxon) %>%
summarise(ave_short = mean(short_path_ave),
se_short = sd(short_path_ave) / sqrt(n()))
View(ave_management_taxon)
View(ave_taxon)
#average per taxon
ave_taxon<-short_path_land_change_CP %>% group_by(taxon) %>%
summarise(ave_short = mean(short_path_ave),
se_short = sd(short_path_ave) / sqrt(n())) %>%
arrange(ave_short)
#Preparing dataframe
#Vector of colors
color_trophic <-tibble(taxon = c("Plant","Crop","Flower-visiting","Aphid","Primary aphid parasitoid","Secondary aphid parasitoid",
"Leaf-miner parasitoid","Seed-feeding insect","Seed-feeding bird",
"Seed-feeding rodent","Butterfly","Insect seed-feeder parasitoid","Rodent ectoparasite"),
color = c("#33a02c","#b15928","#a6cee3","#1f78b4","#b2df8a","#fb9a99","#e31a1c","#fdbf6f","#ff7f00","#cab2d6",
"#6a3d9a", "#cccc7a", "#e7298a"))
ave_management_taxon$management <- factor(ave_management_taxon$management, levels = c("E", "SE", "M", "SI","I","IM")) #change order of factors
ave_management_taxon$taxon<-as.factor(ave_management_taxon$taxon)
#
ggplot(ave_management_taxon, aes(x = management, y = ave_short, group =taxon, color= taxon)) +
scale_color_manual(values = color_trophic$color[match(levels(ave_management_taxon$taxon), color_trophic$taxon)])+
geom_point() +
geom_line(size = 1.4)  +
geom_errorbar(aes(ymin = ave_short - se_short, ymax = ave_short + se_short), width = 0.2) +
labs(x = "Land conversion",
y = "Shorthest path ",
color = "Trophic Group") +
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),
axis.text.y = element_text(size=13, color='black'),
# axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =15),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.position = "bottom")
##stats
#average per management
ave_management<-short_path_land_change_CP %>% group_by(management) %>%
summarise(ave_short = mean(short_path_ave),
se_short = sd(short_path_ave) / sqrt(n()))
View(ave_management)
#average per management and taxon
ave_management_taxon<-short_path_land_change_CP %>% group_by(management,taxon) %>%
summarise(ave_short = mean(short_path_ave),
se_short = sd(short_path_ave) / sqrt(n()))
View(exploratory_management)
View(ave_management_taxon)
ave_management_taxon_I_IM <-ave_management_taxon %>% filter(management =="I" &
management =="IM" )
View(ave_management_taxon_I_IM)
ave_management_taxon_I_IM <-ave_management_taxon %>% filter(management =="I" |
management =="IM" )
View(ave_management_taxon)
View(ave_management_taxon_I_IM)
#### Check the 5 most important species per trophic group in Extensive
top_5_taxon_extensive<-short_path_land_change_CP %>%
filter(management == "E") %>% group_by(management, taxon) %>%
arrange(short_path_ave) %>% # Arrange by short_path_ave within each group
slice_head(n = 5) # Take the first 5 rows within each group
#Filter the importance of the top 5 species (from the extensive) across management scenarios
top_5_average<- short_path_land_change_CP %>%  filter(node_id%in%top_5_taxon_extensive$node_id)
# Model
top_5<- glmmTMB(short_path_ave~management+ taxon+(1|node_id),
family = Gamma(link = "log"), data = top_5_average) #we already check and this is the best model
Anova(top_5)
model_summary<-summary(top_5) #this model fits the best (drop taxon no significant difference)
# posthoc
post_short<- emmeans(top_5, ~ management)
pairs(post_short)
post_taxon<- emmeans(top_5, ~ taxon)
pairs(post_taxon)
library(circlize)
library(viridis)
library(ComplexHeatmap)
# Define color of each layer and sps
top_5_average$management <- factor(top_5_average$management, levels = c("E", "SE", "M", "SI","I","IM")) #change order of factors
top_5_ave <- top_5_average %>% ungroup() %>%
select(node_id,taxon,management,short_path_ave) %>%
spread(management,short_path_ave) %>%  #rearrange dataframe
ungroup()
top_5_ave<-top_5_ave[,c(1,2,3,7,6,8,4,5)]
# layer
color = colorRamp2(seq(max(top_5_ave[,3:8], na.rm = TRUE), min(top_5_ave[,3:8], na.rm = TRUE),
length =5),viridis(5))#color layer
sp_names <- top_5_ave$node_id #create temporal species name to filter the big database
sp_names<-as.factor(sp_names) # to plot species name
top_5_ave_values<- as.data.frame(top_5_ave) %>% select(-node_id,-taxon)
rownames(top_5_ave_values) <- sp_names
top_5_ave_values<-top_5_ave_values[,c(1,5,6,3,2,4)]
color_trophic <-tibble(taxon = c("Plant","Crop","Flower-visiting","Aphid","Primary aphid parasitoid","Secondary aphid parasitoid",
"Leaf-miner parasitoid","Seed-feeding insect","Seed-feeding bird",
"Seed-feeding rodent","Butterfly","Insect seed-feeder parasitoid","Rodent ectoparasite"),
color = c("#33a02c","#b15928","#a6cee3","#1f78b4","#b2df8a","#fb9a99","#e31a1c","#fdbf6f","#ff7f00","#cab2d6",
"#6a3d9a", "#cccc7a", "#e7298a")) #color trophic group
species_list_color <- top_5_ave %>% select(node_id,taxon) %>%  #list of species and color according to the taxon
left_join(color_trophic, by = "taxon")
circos.clear()
# Extensive
E<- top_5_ave_values[,1,drop=FALSE]
circos.par(start.degree = 10, gap.degree = 1)
circos.heatmap(E, col = color, #rownames.side = "outside", rownames.col= species_list_color$color,
rownames.cex = 0.7, track.height = 0.11, cell.border = "black",cluster = FALSE,
split = factor(species_list_color$taxon, levels = unique(species_list_color$taxon)))
# Semi Extensive
SE<- top_5_ave_values[,2, drop= FALSE]
circos.heatmap(SE, col = color, track.height = 0.11, cell.border = "black")
# Moderate
M<- top_5_ave_values[,3, drop= FALSE]
circos.heatmap(M, col = color,  track.height = 0.11, cell.border = "black")
# Semi-Intensive
SI<- top_5_ave_values[,4, drop= FALSE]
circos.heatmap(SI, col = color, track.height = 0.11, cell.border = "black")
# Intensive
I<- top_5_ave_values[,5, drop= FALSE]
circos.heatmap(I, col = color, track.height = 0.11, cell.border = "black")
# Intensive non-organic
IM<- top_5_ave_values[,6, drop= FALSE]
circos.heatmap(IM, col = color, track.height = 0.11, cell.border = "black")
# Model
top_5<- glmmTMB(short_path_ave~management:taxon+(1|node_id),
family = Gamma(link = "log"), data = top_5_average) #we already check and this is the best model
# Model
top_5<- glmmTMB(short_path_ave~management:taxon,
family = Gamma(link = "log"), data = top_5_average) #we already check and this is the best model
# Calculate summary statistics (e.g., mean) for each factor
management_summary <- mean(management_coefs)
taxon_summary <- mean(taxon_coefs)
#average per management
ave_management<-top_5_average %>% group_by(management) %>%
summarise(ave_short = mean(short_path_ave),
se_short = sd(short_path_ave) / sqrt(n()))
View(ave_management)
#average per taxon
ave_taxon<-short_path_land_change_CP %>% group_by(taxon) %>%
summarise(ave_short = mean(short_path_ave),
se_short = sd(short_path_ave) / sqrt(n())) %>%
arrange(ave_short)
#average per taxon
ave_taxon<-top_5_average %>% group_by(taxon) %>%
summarise(ave_short = mean(short_path_ave),
se_short = sd(short_path_ave) / sqrt(n())) %>%
arrange(ave_short)
#average per management and taxon
ave_management_taxon<-top_5_average %>% group_by(management,taxon) %>%
summarise(ave_short = mean(short_path_ave),
se_short = sd(short_path_ave) / sqrt(n()))
View(ave_management_taxon)
View(ave_management_taxon)
unique(level(ave_management_taxon$taxon))
unique(ave_management_taxon$taxon)
