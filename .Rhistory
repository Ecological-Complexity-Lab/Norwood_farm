# create habitats CP to replace WD and RG
WD_CP<- Norwood_farm$extended_ids %>% filter(layer_from  == 1) %>% select(-layer_to,-layer_from) %>%
mutate (new_hab = 12, prev_hab = "WD", hab_cp = "CP")#links from "CP" to add as new habitat (12)
RG_CP<- Norwood_farm$extended_ids %>% filter(layer_from  == 1) %>% select(-layer_to,-layer_from) %>%
mutate (new_hab = 13, prev_hab = "RG", hab_cp = "CP")#links from "CP" to add as new habitat (13)
#calculate changes in the area between CP and the habitat to replace
converted_area<-rbind(WD_CP, RG_CP) %>% left_join(habitat_area,
by = c("prev_hab" = "HabitatCode")) %>%
left_join(habitat_area, by = c("hab_cp" = "HabitatCode")) %>%
select(node_from,node_to,weight,new_hab,prev_hab,hab_cp,area_ave.x,area_ave.y) %>%
rename("area_prev_hab" ="area_ave.x", "area_CP" = "area_ave.y") %>%
mutate(mult_ab = (area_prev_hab/area_CP)) %>% #multplied abundances of CP for this value (to estimate according to the new habitat)
select(-prev_hab,-hab_cp,-area_prev_hab,-area_CP)#clean dataframe
# add abundances and modify it according to the new area
abundances_CP<-state_nodes_ab %>% filter(layer_id ==1)#filter species abundances to show just layer CP
new_habitats_ab<-converted_area %>%
left_join(abundances_CP, by = c("node_from" = "node_id")) %>%  #incorporate abundances and taxa of node_from
left_join(abundances_CP, by = c("node_to" = "node_id")) %>%  #incorporate abundances and taxa of nodes_to
rename("ab_node_from_CP" = "abundance.x", "taxon_node_from" = "taxon.x",
"ab_node_to_CP" = "abundance.y", "taxon_node_to" = "taxon.y") %>%
mutate(ab_node_from = ab_node_from_CP * mult_ab,
ab_node_to = ab_node_to_CP * mult_ab ) %>% #estimate the new abundances
select(new_hab,node_from,ab_node_from,taxon_node_from,node_to,ab_node_to,
taxon_node_to,weight) %>% rename ("habitat" = "new_hab") #clean to match the rest of farm edgelist
## -- create state_node_list of the management scenario
sem_ext_edgelist_no_aggr<- rbind(sem_ext_edgelist_rem,new_habitats_ab)  #join new habitats and old habitats
#node_from
state_node_sem_ext_from<- sem_ext_edgelist_no_aggr %>% select(habitat,node_from,ab_node_from,
taxon_node_from) %>%
rename("node_id" ="node_from", "abundances" = "ab_node_from",
"taxon" = "taxon_node_from")
#node_to
state_node_sem_ext_to<- sem_ext_edgelist_no_aggr %>% select(habitat,node_to,ab_node_to,
taxon_node_to) %>%
rename("node_id" ="node_to", "abundances" = "ab_node_to",
"taxon" = "taxon_node_to")
# final state nodes (calculate abundance and relative abundance of species)
state_node_sem_ext_agg<-rbind(state_node_sem_ext_from, state_node_sem_ext_to) %>%
unique() %>% select(-habitat) %>% group_by(node_id,taxon) %>%
mutate(abun = sum(abundances)) %>% distinct(abun) %>% group_by(taxon) %>%
mutate(tot_ab_taxon = sum(abun)) %>% #total abundance per taxon
group_by(node_id) %>%
mutate(rel_ab=abun/tot_ab_taxon)#rel abundance of species per taxon
## --  Recalculate weight according to the new habitats and abundances
# Edge list new management scenario
sem_ext_edgelist_aggr<-sem_ext_edgelist_no_aggr %>% select(node_from,node_to) %>%
unique() %>%  #aggregated edge list
left_join(state_node_sem_ext_agg, by = c("node_from" = "node_id")) %>%  #incorporate rel abundances of node_from
left_join(state_node_sem_ext_agg, by = c("node_to" = "node_id")) %>%  #incorporate rel abundances of nodes_to
select(node_from,node_to, rel_ab.x,rel_ab.y) %>%
mutate(weight = rel_ab.x * rel_ab.y,management = "SE") %>% #calculate weight
select(-rel_ab.x,-rel_ab.y)
##### -- Moderate (replace "WD","RG","MH"and "NH" for "CP")
##-- Remove habitats from norwood (the ones to replace) and incorporate abundances and taxon
mod_edgelist_rem<- Norwood_farm$extended_ids %>%
filter(layer_from != 9 & layer_from != 11 & layer_from != 5 & layer_from != 6) %>% #links from "WD", "RG", "MH", and "NH" removed
select(-layer_to) %>% rename("habitat" = "layer_from") %>%
left_join(state_nodes_ab, by = c("node_from" = "node_id",
"habitat" = "layer_id")) %>%  #incorporate abundances and taxa of node_from
left_join(state_nodes_ab, by = c("node_to" = "node_id",
"habitat" = "layer_id")) %>%  #incorporate abundances and taxa of nodes_to
rename("ab_node_from" = "abundance.x", "taxon_node_from" = "taxon.x",
"ab_node_to" = "abundance.y", "taxon_node_to" = "taxon.y")
mod_edgelist_rem<-mod_edgelist_rem[,c(1,2,5,6,3,7,8,4)]
#--  Create new habitats
# create habitats CP to replace WD,RG, MH and NH (WD and RG were created before)
MH_CP<- Norwood_farm$extended_ids %>% filter(layer_from  == 1) %>% select(-layer_to,-layer_from) %>%
mutate (new_hab = 14, prev_hab = "MH", hab_cp = "CP")#links from "CP" to add as new habitat (14)
NH_CP<- Norwood_farm$extended_ids %>% filter(layer_from  == 1) %>% select(-layer_to,-layer_from) %>%
mutate (new_hab = 15, prev_hab = "NH", hab_cp = "CP")#links from "CP" to add as new habitat (15)
# calculate changes in the area between CP and the habitat to replace
converted_area<-rbind(WD_CP, RG_CP, MH_CP, NH_CP) %>% left_join(habitat_area,
by = c("prev_hab" = "HabitatCode")) %>%
left_join(habitat_area, by = c("hab_cp" = "HabitatCode")) %>%
select(node_from,node_to,weight,new_hab,prev_hab,hab_cp,area_ave.x,area_ave.y) %>%
rename("area_prev_hab" ="area_ave.x", "area_CP" = "area_ave.y") %>%
mutate(mult_ab = (area_prev_hab/area_CP)) %>% #multplied abundances of CP for this value (to estimate according to the new habitat)
select(-prev_hab,-hab_cp,-area_prev_hab,-area_CP)#clean dataframe
# add abundances and modify them according to the new area
abundances_CP<-state_nodes_ab %>% filter(layer_id ==1)#filter species abundances to show just layer CP
new_habitats_ab<-converted_area %>%
left_join(abundances_CP, by = c("node_from" = "node_id")) %>%  #incorporate abundances and taxa of node_from
left_join(abundances_CP, by = c("node_to" = "node_id")) %>%  #incorporate abundances and taxa of nodes_to
rename("ab_node_from_CP" = "abundance.x", "taxon_node_from" = "taxon.x",
"ab_node_to_CP" = "abundance.y", "taxon_node_to" = "taxon.y") %>%
mutate(ab_node_from = ab_node_from_CP * mult_ab,
ab_node_to = ab_node_to_CP * mult_ab ) %>% #estimate the new abundances
select(new_hab,node_from,ab_node_from,taxon_node_from,node_to,ab_node_to,
taxon_node_to,weight) %>% rename ("habitat" = "new_hab") #clean to match the rest of farm edgelist
## -- create state_node_list of the management scenario
mod_edgelist_no_aggr<- rbind(mod_edgelist_rem,new_habitats_ab)  #join new habitats and old habitats
#node_from
state_node_mod_from<- mod_edgelist_no_aggr %>% select(habitat,node_from,ab_node_from,
taxon_node_from) %>%
rename("node_id" ="node_from", "abundances" = "ab_node_from",
"taxon" = "taxon_node_from")
#node_to
state_node_mod_to<- mod_edgelist_no_aggr %>% select(habitat,node_to,ab_node_to,
taxon_node_to) %>%
rename("node_id" ="node_to", "abundances" = "ab_node_to",
"taxon" = "taxon_node_to")
# final state nodes (calculate abundance and relative abundance of species)
state_node_mod_agg<-rbind(state_node_mod_from, state_node_mod_to) %>%
unique() %>% select(-habitat) %>% group_by(node_id,taxon) %>%
mutate(abun = sum(abundances)) %>% distinct(abun) %>% group_by(taxon) %>%
mutate(tot_ab_taxon = sum(abun)) %>% #total abundance per taxon
group_by(node_id) %>%
mutate(rel_ab=abun/tot_ab_taxon)#rel abundance of species per taxon
## --  Recalculate weight according to the new habitats and abundances
# Edge list new management scenario
mod_edgelist_aggr<-mod_edgelist_no_aggr %>% select(node_from,node_to) %>%
unique() %>%  #aggregated edge list
left_join(state_node_mod_agg, by = c("node_from" = "node_id")) %>%  #incorporate rel abundances of node_from
left_join(state_node_mod_agg, by = c("node_to" = "node_id")) %>%  #incorporate rel abundances of nodes_to
select(node_from,node_to, rel_ab.x,rel_ab.y) %>%
mutate(weight = rel_ab.x * rel_ab.y,management = "M") %>% #calculate weight
select(-rel_ab.x,-rel_ab.y)
##### -- Semi - intensive (replace "WD","RG","MH","NH"and "GM" for "CP")
##-- Remove habitats from norwood (the ones to replace) and incorporate abundances and taxon
sem_int_edgelist_rem<- Norwood_farm$extended_ids %>%
filter(layer_from != 9 & layer_from != 11 &  layer_from != 5 &
layer_from != 6 & layer_from != 2) %>% #links from "WD", "RG", "MH", "NH" and "GM" removed
select(-layer_to) %>% rename("habitat" = "layer_from") %>%
left_join(state_nodes_ab, by = c("node_from" = "node_id",
"habitat" = "layer_id")) %>%  #incorporate abundances and taxa of node_from
left_join(state_nodes_ab, by = c("node_to" = "node_id",
"habitat" = "layer_id")) %>%  #incorporate abundances and taxa of nodes_to
rename("ab_node_from" = "abundance.x", "taxon_node_from" = "taxon.x",
"ab_node_to" = "abundance.y", "taxon_node_to" = "taxon.y")
sem_int_edgelist_rem<-sem_int_edgelist_rem[,c(1,2,5,6,3,7,8,4)]
#--  Create new habitats
# create habitats CP to replace WD,RG, MH,NH and GM (WD,RG,MH and NH were created before)
GM_CP<- Norwood_farm$extended_ids %>% filter(layer_from  == 1) %>% select(-layer_to,-layer_from) %>%
mutate (new_hab = 16, prev_hab = "GM", hab_cp = "CP")#links from "CP" to add as new habitat (16)
# calculate changes in the area between CP and the habitat to replace
converted_area<-rbind(WD_CP, RG_CP, MH_CP, NH_CP, GM_CP) %>% left_join(habitat_area,
by = c("prev_hab" = "HabitatCode")) %>%
left_join(habitat_area, by = c("hab_cp" = "HabitatCode")) %>%
select(node_from,node_to,weight,new_hab,prev_hab,hab_cp,area_ave.x,area_ave.y) %>%
rename("area_prev_hab" ="area_ave.x", "area_CP" = "area_ave.y") %>%
mutate(mult_ab = (area_prev_hab/area_CP)) %>% #multplied abundances of CP for this value (to estimate according to the new habitat)
select(-prev_hab,-hab_cp,-area_prev_hab,-area_CP)#clean dataframe
# add abundances and modify them according to the new area
abundances_CP<-state_nodes_ab %>% filter(layer_id ==1)#filter species abundances to show just layer CP
new_habitats_ab<-converted_area %>%
left_join(abundances_CP, by = c("node_from" = "node_id")) %>%  #incorporate abundances and taxa of node_from
left_join(abundances_CP, by = c("node_to" = "node_id")) %>%  #incorporate abundances and taxa of nodes_to
rename("ab_node_from_CP" = "abundance.x", "taxon_node_from" = "taxon.x",
"ab_node_to_CP" = "abundance.y", "taxon_node_to" = "taxon.y") %>%
mutate(ab_node_from = ab_node_from_CP * mult_ab,
ab_node_to = ab_node_to_CP * mult_ab ) %>% #estimate the new abundances
select(new_hab,node_from,ab_node_from,taxon_node_from,node_to,ab_node_to,
taxon_node_to,weight) %>% rename ("habitat" = "new_hab") #clean to match the rest of farm edgelist
## -- create state_node_list of the management scenario
sem_int_edgelist_no_aggr<- rbind(sem_int_edgelist_rem,new_habitats_ab)  #join new habitats and old habitats
#node_from
state_node_sem_int_from<- sem_int_edgelist_no_aggr %>% select(habitat,node_from,ab_node_from,
taxon_node_from) %>%
rename("node_id" ="node_from", "abundances" = "ab_node_from",
"taxon" = "taxon_node_from")
#node_to
state_node_sem_int_to<- sem_int_edgelist_no_aggr %>% select(habitat,node_to,ab_node_to,
taxon_node_to) %>%
rename("node_id" ="node_to", "abundances" = "ab_node_to",
"taxon" = "taxon_node_to")
# final state nodes (calculate abundance and relative abundance of species)
state_node_sem_int_agg<-rbind(state_node_sem_int_from, state_node_sem_int_to) %>%
unique() %>% select(-habitat) %>% group_by(node_id,taxon) %>%
mutate(abun = sum(abundances)) %>% distinct(abun) %>% group_by(taxon) %>%
mutate(tot_ab_taxon = sum(abun)) %>% #total abundance per taxon
group_by(node_id) %>%
mutate(rel_ab=abun/tot_ab_taxon)#rel abundance of species per taxon
## --  Recalculate weight according to the new habitats and abundances
# Edge list new management scenario
sem_int_edgelist_aggr<-sem_int_edgelist_no_aggr %>% select(node_from,node_to) %>%
unique() %>%  #aggregated edge list
left_join(state_node_sem_int_agg, by = c("node_from" = "node_id")) %>%  #incorporate rel abundances of node_from
left_join(state_node_sem_int_agg, by = c("node_to" = "node_id")) %>%  #incorporate rel abundances of nodes_to
select(node_from,node_to, rel_ab.x,rel_ab.y) %>%
mutate(weight = rel_ab.x * rel_ab.y,management = "SI") %>% #calculate weight
select(-rel_ab.x,-rel_ab.y)
##### -- Intensive (replace "WD","RG","MH","NH","GM" and "SF" for "CP")
##-- Remove habitats from norwood (the ones to replace) and incorporate abundances and taxon
int_edgelist_rem<- Norwood_farm$extended_ids %>%
filter(layer_from != 9 & layer_from != 11 &  layer_from != 5 &
layer_from != 6 & layer_from != 2 & layer_from != 10) %>% #links from "WD", "RG", "MH", "NH","GM" and "SF" removed
select(-layer_to) %>% rename("habitat" = "layer_from") %>%
left_join(state_nodes_ab, by = c("node_from" = "node_id",
"habitat" = "layer_id")) %>%  #incorporate abundances and taxa of node_from
left_join(state_nodes_ab, by = c("node_to" = "node_id",
"habitat" = "layer_id")) %>%  #incorporate abundances and taxa of nodes_to
rename("ab_node_from" = "abundance.x", "taxon_node_from" = "taxon.x",
"ab_node_to" = "abundance.y", "taxon_node_to" = "taxon.y")
int_edgelist_rem<-int_edgelist_rem[,c(1,2,5,6,3,7,8,4)]
#--  Create new habitats
# create habitats CP to replace WD,RG, MH,NH,GM and SF (WD,RG,MH,NH andGM were created before)
SF_CP<- Norwood_farm$extended_ids %>% filter(layer_from  == 1) %>% select(-layer_to,-layer_from) %>%
mutate (new_hab = 17, prev_hab = "SF", hab_cp = "CP")#links from "CP" to add as new habitat (17)
# calculate changes in the area between CP and the habitat to replace
converted_area<-rbind(WD_CP, RG_CP, MH_CP, NH_CP, GM_CP, SF_CP) %>% left_join(habitat_area,
by = c("prev_hab" = "HabitatCode")) %>%
left_join(habitat_area, by = c("hab_cp" = "HabitatCode")) %>%
select(node_from,node_to,weight,new_hab,prev_hab,hab_cp,area_ave.x,area_ave.y) %>%
rename("area_prev_hab" ="area_ave.x", "area_CP" = "area_ave.y") %>%
mutate(mult_ab = (area_prev_hab/area_CP)) %>% #multplied abundances of CP for this value (to estimate according to the new habitat)
select(-prev_hab,-hab_cp,-area_prev_hab,-area_CP)#clean dataframe
# add abundances and modify them according to the new area
abundances_CP<-state_nodes_ab %>% filter(layer_id ==1)#filter species abundances to show just layer CP
new_habitats_ab<-converted_area %>%
left_join(abundances_CP, by = c("node_from" = "node_id")) %>%  #incorporate abundances and taxa of node_from
left_join(abundances_CP, by = c("node_to" = "node_id")) %>%  #incorporate abundances and taxa of nodes_to
rename("ab_node_from_CP" = "abundance.x", "taxon_node_from" = "taxon.x",
"ab_node_to_CP" = "abundance.y", "taxon_node_to" = "taxon.y") %>%
mutate(ab_node_from = ab_node_from_CP * mult_ab,
ab_node_to = ab_node_to_CP * mult_ab ) %>% #estimate the new abundances
select(new_hab,node_from,ab_node_from,taxon_node_from,node_to,ab_node_to,
taxon_node_to,weight) %>% rename ("habitat" = "new_hab") #clean to match the rest of farm edgelist
## -- create state_node_list of the management scenario
int_edgelist_no_aggr<- rbind(int_edgelist_rem,new_habitats_ab)  #join new habitats and old habitats
#node_from
state_node_int_from<- int_edgelist_no_aggr %>% select(habitat,node_from,ab_node_from,
taxon_node_from) %>%
rename("node_id" ="node_from", "abundances" = "ab_node_from",
"taxon" = "taxon_node_from")
#node_to
state_node_int_to<- int_edgelist_no_aggr %>% select(habitat,node_to,ab_node_to,
taxon_node_to) %>%
rename("node_id" ="node_to", "abundances" = "ab_node_to",
"taxon" = "taxon_node_to")
# final state nodes (calculate abundance and relative abundance of species)
state_node_int_agg<-rbind(state_node_int_from, state_node_int_to) %>%
unique() %>% select(-habitat) %>% group_by(node_id,taxon) %>%
mutate(abun = sum(abundances)) %>% distinct(abun) %>% group_by(taxon) %>%
mutate(tot_ab_taxon = sum(abun)) %>% #total abundance per taxon
group_by(node_id) %>%
mutate(rel_ab=abun/tot_ab_taxon)#rel abundance of species per taxon
## --  Recalculate weight according to the new habitats and abundances
# Edge list new management scenario
int_edgelist_aggr<-int_edgelist_no_aggr %>% select(node_from,node_to) %>%
unique() %>%  #aggregated edge list
left_join(state_node_int_agg, by = c("node_from" = "node_id")) %>%  #incorporate rel abundances of node_from
left_join(state_node_int_agg, by = c("node_to" = "node_id")) %>%  #incorporate rel abundances of nodes_to
select(node_from,node_to, rel_ab.x,rel_ab.y) %>%
mutate(weight = rel_ab.x * rel_ab.y,management = "I") %>% #calculate weight
select(-rel_ab.x,-rel_ab.y)
land_change_weighted_trial<-rbind(ext_edgelist_aggr,sem_ext_edgelist_aggr,mod_edgelist_aggr,
sem_int_edgelist_aggr,int_edgelist_aggr)
View(land_change_weighted_trial)
hist<-ggplot(land_change_weighted_trial, aes(x = weight, fill = management)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
ggtitle("Histogram of Values") +
xlab("Values") +
ylab("Frequency")
hist
hist<-ggplot(land_change_weighted_trial, aes(x = weight, fill = management)) +
geom_histogram(binwidth = 0.05, color = "black", alpha = 0.7) +
ggtitle("Histogram of Values") +
xlab("Values") +
ylab("Frequency")
hist
hist<-ggplot(land_change_weighted_trial, aes(x = weight, fill = management)) +
geom_histogram(binwidth = 0.001, color = "black", alpha = 0.7) +
ggtitle("Histogram of Values") +
xlab("Values") +
ylab("Frequency")
hist
hist<-ggplot(land_change_weighted_trial, aes(x = weight, fill = management)) +
geom_histogram(binwidth = 0.02, color = "black", alpha = 0.7) +
ggtitle("Histogram of Values") +
xlab("Values") +
ylab("Frequency")
hist
hist<-ggplot(land_change_weighted_trial, aes(x = weight, fill = management)) +
geom_histogram(binwidth = 0.02, color = "black", alpha = 0.7) +
ggtitle("Histogram of Values") +
xlab("Values") + xlim(0,0.02)
hist<-ggplot(land_change_weighted_trial, aes(x = weight, fill = management)) +
geom_histogram(binwidth = 0.02, color = "black", alpha = 0.7) +
ggtitle("Histogram of Values") +
xlab("Values") + xlim(0,0.02)+
ylab("Frequency")
hist
hist<-ggplot(land_change_weighted_trial, aes(x = weight, fill = management)) +
geom_histogram(binwidth = 0.02, color = "black", alpha = 0.7) +
ggtitle("Histogram of Values") +
xlab("Values") + xlim(0,0.2)+
ylab("Frequency")
hist
hist<-ggplot(land_change_weighted_trial, aes(x = weight, fill = management)) +
geom_histogram(binwidth = 0.001, color = "black", alpha = 0.7) +
ggtitle("Histogram of Values") +
xlab("Values") + xlim(0,0.2)+
ylab("Frequency")
hist
hist<-ggplot(land_change_weighted_trial, aes(x = weight, fill = management)) +
geom_histogram(binwidth = 0.001, color = "black", alpha = 0.7) +
ggtitle("Histogram of Values") +
xlab("Values") + xlim(0,0.05)+
ylab("Frequency")
hist
x1<-land_change_weighted_trial$management$E
x1<-land_change_weighted_trial %>% filter(management == "E") %>% select(weight)
x1<-land_change_weighted_trial %>% filter(management == "E")
# create multiple histogram
hist(x1$management col='red', xlim=c(0,0.5))
# create multiple histogram
hist(x1$management col='red', xlim=c(0,0.5))
# create multiple histogram
hist(x1$management, col='red', xlim=c(0,0.5))
# create multiple histogram
hist(x1$weight, col='red', xlim=c(0,0.5))
x2<-land_change_weighted_trial %>% filter(management == "SE")
hist(x2$weight,col='green', add=TRUE)
x2<-land_change_weighted_trial %>% filter(management == "SE")
x3<-land_change_weighted_trial %>% filter(management == "M")
x4<-land_change_weighted_trial %>% filter(management == "SI")
x5<-land_change_weighted_trial %>% filter(management == "I")
# create multiple histogram
hist(x1$weight, col='red', xlim=c(0,0.5))
hist(x2$weight,col='green', add=TRUE)
hist(x3$weight, col='blue', add=TRUE)
hist(x4$weight, col='red', xlim=c(0,0.5))
hist(x5$weight,col='green', add=TRUE)
# create multiple histogram
hist(x1$weight, col='red', xlim=c(0,0.5))
hist(x2$weight,col='green', add=TRUE)
hist(x3$weight, col='blue', add=TRUE)
hist(x4$weight, col='yellow', add=TRUE)
hist(x5$weight,col='purple', add=TRUE)
View(x3)
x1<-land_change_weighted_trial %>% filter(management == "E")
x2<-land_change_weighted_trial %>% filter(management == "SE")
x3<-land_change_weighted_trial %>% filter(management == "M")
x4<-land_change_weighted_trial %>% filter(management == "SI")
x5<-land_change_weighted_trial %>% filter(management == "I")
# create multiple histogram
hist(x1$weight, col='red', xlim=c(0,0.5))
hist(x2$weight,col='green', add=TRUE)
hist(x3$weight, col='blue', add=TRUE)
hist(x4$weight, col='yellow', add=TRUE)
hist(x5$weight,col='purple', add=TRUE)
preuba<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram( color='#e9ecef', alpha=0.6, position='identity')
preuba
preuba<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(binwidth = 0.001,color='#e9ecef', alpha=0.6, position='identity')
preuba
preuba<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(binwidth = 0.01,color='#e9ecef', alpha=0.6, position='identity')
preuba
preuba<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(binwidth = 0.01,color='#e9ecef', alpha=0.1, position='identity')
preuba
preuba<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(binwidth = 0.01,color='#e9ecef', alpha=0.4, position='identity')
preuba
preuba<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(binwidth = 0.01,color='#e9ecef', alpha=0.5, position='identity')
preuba
# create multiple histogram
hist_E<-hist(x1$weight, col='red', xlim=c(0,0.5))
hist_SE<-hist(x2$weight,col='green',xlim=c(0,0.5))
hist_M<-hist(x3$weight, col='blue', xlim=c(0,0.5))
hist_SI<-hist(x4$weight, col='yellow', xlim=c(0,0.5))
hist_I<-hist(x5$weight,col='purple',xlim=c(0,0.5))
upper_row<- plot_grid(hist_E,hist_SE,hist_M,hist_SI,hist_I,
nrow = 5)
upper_row
?plot_grid
## Histogram
library(cowplot)
upper_row<- plot_grid(hist_E,hist_SE,hist_M,hist_SI,hist_I,
nrow = 5)
upper_row
upper_row<- plot_grid(hist_E,hist_SE,hist_M,hist_SI,hist_I,
ncol= 5)
# create multiple histogram
hist_E<-hist(x1$weight, col='red', xlim=c(0,0.5))
hist_SE<-hist(x2$weight,col='green',xlim=c(0,0.5))
hist_M<-hist(x3$weight, col='blue', xlim=c(0,0.5))
hist_SI<-hist(x4$weight, col='yellow', xlim=c(0,0.5))
hist_I<-hist(x5$weight,col='purple',xlim=c(0,0.5))
preuba<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(binwidth = 0.01,color='#e9ecef', alpha=0.5, position='identity')+
xlim(0,0.2)
preuba
preuba<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(color='#e9ecef', alpha=0.5, position='identity')+
xlim(0,0.2)
preuba
preuba<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(bins = 30,color='#e9ecef', alpha=0.5, position='identity')+
xlim(0,0.2)
preuba
preuba<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(bins = 30,color='#e9ecef', alpha=0.5, position='identity')+
xlim(0,0.05)
preuba
preuba<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(bins = 30,color='#e9ecef', alpha=0.55, position='identity')+
xlim(0,0.05)+ scale_y_continuous(0,1500)
preuba
preuba<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(bins = 30,color='#e9ecef', alpha=0.55, position='identity')+
xlim(0,0.05)+ ylim(0,1500)
preuba
preuba<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(bins = 30,color='#e9ecef', alpha=0.55, position='identity')+
xlim(0,0.05)+ scale_y_continuous(limits =c(0,1500))
preuba
preuba<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(bins = 30,color='#e9ecef', alpha=0.55, position='identity')+
xlim(0,0.1)+ scale_y_continuous(limits =c(0,1500))
preuba
preuba<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(bins = 30,color='#e9ecef', alpha=0.55, position='identity')+ scale_y_continuous(limits =c(0,1500))
preuba
preuba<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(bins = 30,color='#e9ecef', alpha=0.55, position='identity')+ scale_y_continuous(limits =c(0,1500))+
xlim(0,0.2)
preuba
preuba<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(bins = 30,color='#e9ecef', alpha=0.55, position='identity')+ scale_y_continuous(limits =c(0,1500))+
xlim(0,0.25)
preuba
preuba<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(bins = 30,color='#e9ecef', alpha=0.55, position='identity')+ scale_y_continuous(limits =c(0,1500))+
xlim(0,0.4)
preuba
preuba<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(bins = 30,color='#e9ecef', alpha=0.55, position='identity')+ scale_y_continuous(limits =c(0,1500))+
xlim(0,0.5)
preuba
preuba<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(bins = 30,color='#e9ecef', alpha=0.55, position='identity')+ scale_y_continuous(limits =c(0,1500))+
xlim(0,0.8)
preuba
preuba<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(bins = 30,color='#e9ecef', alpha=0.55, position='identity')+ scale_y_continuous(limits =c(0,1500))+
xlim(0,1)
preuba
preuba<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(bins = 30,color='#e9ecef', alpha=0.55, position='identity')+
scale_y_continuous(limits =c(0,1500))
preuba
preuba<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(bins = 30,color='#e9ecef', alpha=0.55, position='identity')+
scale_y_continuous(limits =c(0,1500))+scale_y_continuous(limits = c(0,0.2))
preuba<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(bins = 30,color='#e9ecef', alpha=0.55, position='identity')+
scale_y_continuous(limits =c(0,1500))+scale_x_continuous(limits = c(0,0.2))
preuba
max(land_change_weighted_trial$weight,5)
max(land_change_weighted_trial$weight)
min(land_change_weighted_trial$weight)
preuba<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(bins = 30,color='#e9ecef', alpha=0.55, position='identity')+
scale_y_continuous(limits =c(0,1500))
preuba
preuba<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(bins = 30,color='#e9ecef', alpha=0.55, position='identity')+
scale_y_continuous(limits =c(0,1500))+scale_x_continuous(limits = c(0.4,0.7))
preuba
preuba<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(bins = 30,color='#e9ecef', alpha=0.55, position='identity')+
scale_y_continuous(limits =c(0,100))+scale_x_continuous(limits = c(0.4,0.7))
preuba
preuba<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(bins = 30,color='#e9ecef', alpha=0.55, position='identity')
preuba
preuba<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(bins = 60,color='#e9ecef', alpha=0.55, position='identity')
preuba
preuba<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(bins = 70,color='#e9ecef', alpha=0.55, position='identity')
preuba
preuba<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(bins = 100,color='#e9ecef', alpha=0.55, position='identity')
preuba
hist_0.2<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(bins = 100,color='#e9ecef', alpha=0.55, position='identity')+
scale_y_continuous(limits = c(0,1500))+
scale_x_continuous(limits = c(0,0.1))
hist_0.2
hist_0.2<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(bins = 100,color='#e9ecef', alpha=0.55, position='identity')+
scale_y_continuous(limits = c(0,1500))+
scale_x_continuous(limits = c(0,0.025))
hist_0.2
hist_0.2<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(bins = 100,color='#e9ecef', alpha=0.55, position='identity')+
scale_x_continuous(limits = c(0,0.025))
hist_0.2
hist_0.2_0.7<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(bins = 100,color='#e9ecef', alpha=0.55, position='identity')+
scale_x_continuous(limits = c(0.2,0.7))
hist_0.2_0.7
hist_0.2_0.7<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(bins = 100,color='#e9ecef', alpha=0.55, position='identity')+
scale_x_continuous(limits = c(0.025,0.7))
hist_0.2_0.7
hist_0.025<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(bins = 100,color='#e9ecef', alpha=0.55, position='identity')+
scale_x_continuous(limits = c(0,0.025))
hist_0.025
hist_0.025_0.7<-ggplot(land_change_weighted_trial, aes(x=weight, fill =management))+
geom_histogram(bins = 100,color='#e9ecef', alpha=0.55, position='identity')+
scale_x_continuous(limits = c(0.025,0.7))
hist_0.025_0.7
upper_row<- plot_grid(hist_0.025,hist_0.025_0.7,
ncol= 2)
upper_row
