select(-rel_ab.x,-rel_ab.y)
int_edgelist_rem<- Norwood_farm$extended_ids %>%
filter(layer_from != 9 & layer_from != 11 &  layer_from != 5 &
layer_from != 6 & layer_from != 2 &  layer_from != 10 &
layer_from != 8 & layer_from != 3 &  layer_from != 4 &
layer_from != 7) %>% #links from "WD", "RG", "MH", "NH","GM","SF", "PP", "LP","LU", and"NL removed
select(-layer_to) %>% rename("habitat" = "layer_from") %>%
left_join(state_nodes_ab, by = c("node_from" = "node_id",
"habitat" = "layer_id")) %>%  #incorporate abundances and taxa of node_from
left_join(state_nodes_ab, by = c("node_to" = "node_id",
"habitat" = "layer_id")) %>%  #incorporate abundances and taxa of nodes_to
rename("ab_node_from" = "abundance.x", "taxon_node_from" = "taxon.x",
"ab_node_to" = "abundance.y", "taxon_node_to" = "taxon.y")
int_edgelist_rem<-int_edgelist_rem[,c(1,2,5,6,3,7,8,4)]
# create habitats CP to replace LP,LU and NL (the rest were created before)
LP_CP<- Norwood_farm$extended_ids %>% filter(layer_from  == 1) %>% select(-layer_to,-layer_from) %>%
mutate (new_hab = 19, prev_hab = "LP", hab_cp = "CP")#links from "CP" to add as new habitat (19)
LU_CP<- Norwood_farm$extended_ids %>% filter(layer_from  == 1) %>% select(-layer_to,-layer_from) %>%
mutate (new_hab = 20, prev_hab = "LU", hab_cp = "CP")#links from "CP" to add as new habitat (20)
NL_CP<- Norwood_farm$extended_ids %>% filter(layer_from  == 1) %>% select(-layer_to,-layer_from) %>%
mutate (new_hab = 21, prev_hab = "NL", hab_cp = "CP")#links from "CP" to add as new habitat (21)
# calculate changes in the area between CP and the habitat to replace
converted_area<-rbind(WD_CP, RG_CP, MH_CP, NH_CP, GM_CP,SF_CP,PP_CP, LP_CP,LU_CP,NL_CP) %>%
left_join(habitat_area,   by = c("prev_hab" = "HabitatCode")) %>%
left_join(habitat_area, by = c("hab_cp" = "HabitatCode")) %>%
select(node_from,node_to,weight,new_hab,prev_hab,hab_cp,area_ave.x,area_ave.y) %>%
rename("area_prev_hab" ="area_ave.x", "area_CP" = "area_ave.y") %>%
mutate(mult_ab = (area_prev_hab/area_CP)) %>% #multplied abundances of CP for this value (to estimate according to the new habitat)
select(-prev_hab,-hab_cp,-area_prev_hab,-area_CP)#clean dataframe
# add abundances and modify them according to the new area
abundances_CP<-state_nodes_ab %>% filter(layer_id ==1)#filter species abundances to show just layer CP
new_habitats_ab<-converted_area %>%
left_join(abundances_CP, by = c("node_from" = "node_id")) %>%  #incorporate abundances and taxa of node_from
left_join(abundances_CP, by = c("node_to" = "node_id")) %>%  #incorporate abundances and taxa of nodes_to
rename("ab_node_from_CP" = "abundance.x", "taxon_node_from" = "taxon.x",
"ab_node_to_CP" = "abundance.y", "taxon_node_to" = "taxon.y") %>%
mutate(ab_node_from = ab_node_from_CP * mult_ab,
ab_node_to = ab_node_to_CP * mult_ab ) %>% #estimate the new abundances
select(new_hab,node_from,ab_node_from,taxon_node_from,node_to,ab_node_to,
taxon_node_to,weight) %>% rename ("habitat" = "new_hab") #clean to match the rest of farm edgelist
new_habitats_ab_rem<- new_habitats_ab %>% filter(ab_node_from >=1 & ab_node_to >=1)
int_edgelist_no_aggr<- rbind(int_edgelist_rem,new_habitats_ab_rem)  #join new habitats and old habitats
#node_from
state_node_int_from<- int_edgelist_no_aggr %>% select(habitat,node_from,ab_node_from,
taxon_node_from) %>%
rename("node_id" ="node_from", "abundances" = "ab_node_from",
"taxon" = "taxon_node_from")
#node_to
state_node_int_to<- int_edgelist_no_aggr %>% select(habitat,node_to,ab_node_to,
taxon_node_to) %>%
rename("node_id" ="node_to", "abundances" = "ab_node_to",
"taxon" = "taxon_node_to")
state_node_int_agg<-rbind(state_node_int_from, state_node_int_to) %>%
unique() %>% select(-habitat) %>% group_by(node_id,taxon) %>%
mutate(abun = sum(abundances)) %>% distinct(abun) %>% group_by(taxon) %>%
mutate(tot_ab_taxon = sum(abun)) %>% #total abundance per taxon
group_by(node_id) %>%
mutate(rel_ab=abun/tot_ab_taxon)#rel abundance of species per taxon
int_edgelist_aggr<-int_edgelist_no_aggr %>% select(node_from,node_to) %>%
unique() %>%  #aggregated edge list
left_join(state_node_int_agg, by = c("node_from" = "node_id")) %>%  #incorporate rel abundances of node_from
left_join(state_node_int_agg, by = c("node_to" = "node_id")) %>%  #incorporate rel abundances of nodes_to
select(node_from,node_to, rel_ab.x,rel_ab.y) %>%
mutate(weight = rel_ab.x * rel_ab.y,management = "I") %>% #calculate weight
select(-rel_ab.x,-rel_ab.y)
land_change_weighted<-rbind(ext_edgelist_aggr,sem_ext_edgelist_aggr,mod_edgelist_aggr,
sem_int_edgelist_aggr,int_edgelist_aggr)
#final state_node list with abundances
state_nodes_weighted_ab<-rbind(ab_ext[,1:3],state_node_sem_ext_agg[,1:3],
state_node_mod_agg[,1:3],state_node_sem_int_agg[,1:3],
state_node_int_agg[,1:3])
#add management label
state_nodes_weighted<-cbind(management = rep(c("E","SE","M","SI","I"),
c(nrow(ab_ext),nrow(state_node_sem_ext_agg),
nrow(state_node_mod_agg), nrow(state_node_sem_int_agg),
nrow(state_node_int_agg))), state_nodes_weighted_ab)
nodes_ES<- right_join(state_nodes_weighted, Norwood_farm$nodes, by = "node_id")%>%
select(management,node_id,taxon.x,abun, "Crop production",
"Pollination", "Crop damage", "Pest control", "Seed dispersal", "Butterfly watching", "Bird watching") %>%
group_by(management,node_id) %>% rename("taxon" = "taxon.x") %>%
gather("services","value", 5:11) #we conserve species that not directly provide ES because can serve as intermediate hop
nodes_ES$management <- factor(nodes_ES$management, levels = c("E", "SE", "M", "SI","I")) #change order of factors
## -- Estimate direct E(D)S provision with the abundances (however, we multiply for trophic group's body size when differenr trophic groups provide the same ES (case of crop damage))
direct_ES <- nodes_ES %>% filter (value ==1) %>%
mutate (type = "D",
body_size =  case_when( #to control ES for body size
services != "Crop damage"~ 1,
(services == "Crop damage") &
(taxon == "Seed-feeding bird"|taxon == "Seed-feeding rodent")~1, #birds and rodents receives a 1 cause they are the biggest producing crop damage
(services == "Crop damage") & (taxon == "Aphid"|
taxon == "Seed-feeding insect")~0.1),
weight = abun * body_size,
output = case_when( #output + or - according to the service
services == "Crop damage"~ "-",
TRUE ~ "+")) %>% #weight of direct ES provision
select(-value)
write.csv(direct_ES,"Data/Land_use_dir_weighted_CP_intense.csv", row.names= FALSE)
number_ES<-nodes_ES %>% group_by(management) %>%
filter (value ==1 & services != "Crop damage") %>% summarise (ES =sum(value))#count ES provision
number_EDS<-nodes_ES %>% group_by(management) %>%
filter (value ==1 & services == "Crop damage") %>% summarise (EDS =sum(value))#count EDS provision
total<-cbind(number_ES,number_EDS[,-1])
ratio_direct<-total %>% mutate(ratio_direct = ES/EDS)
write.csv(ratio_direct,"Data/Land_use_rat_dir_weighted_CP_intense.csv", row.names= FALSE)
#direct
direct_ES<- read.csv("Data/Land_use_dir_weighted_CP_intense.csv", sep =",")
direct_ES$management <- factor(direct_ES$management, levels = c("E", "SE", "M", "SI","I")) #change order of factors
Prop<-direct_ES %>% group_by(management,services) %>%
mutate(tot = n()) %>% ungroup() %>%
group_by(services) %>%
mutate(prop = tot/max(tot)) %>%  #prop of E(D)S rtained across habitat management
select(management,services,tot,prop) %>% unique()
prop_EDS_direct<- Prop %>% ggplot(aes(x = management, y = prop)) +
geom_boxplot(color = "black") +
geom_point(position=position_jitterdodge(jitter.width=2, dodge.width = 0.5),
pch=21, aes(fill=factor(services)), size = 4, show.legend = T) +
# scale_fill_manual(values = col) +
scale_fill_brewer(palette="PRGn") +
scale_y_continuous(name = "Fraction of E(D)S retained", limits = c(0, 1)) +
scale_x_discrete(name = "Management")+
theme(panel.background = element_rect(fill = "white"),
panel.grid.major=element_line(color = "gray"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=11, color='black'),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =13),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11),
legend.position = "bottom")
prop_EDS_direct
library(emln)#multilayer package
library(readr)
library(ggplot2)
library(cowplot)
setwd("D:/Trabajo/Papers/Norwood_Farm/norwood-ecosystem-services-main_Tinio")
######### --- Upload multilayer network
Norwood_farm<-readRDS("Data/Norwood_farm.RData") #read multilayer object
## Add the abundances (as state nodes attributes)
abundances<-read.csv("Data/species_abundances.csv",header=T) #call abundances
state_nodes_ab<-Norwood_farm$state_nodes %>% left_join(abundances,
by = c("layer_name" = "habitat",
"node_name" = "species_name")) %>% #add abundances
left_join(Norwood_farm$nodes, by = "node_id") %>%
select(layer_id,node_id,abundance, taxon) ##add taxon
areas<-read.csv("Data/habitatarea.csv", sep =";") %>%
filter(HabitatCode != "ST") %>% #remove standing trees
mutate(HabitatCode = case_when(HabitatCode == "C"~ "CP",
HabitatCode == "WU"~ "WD",
TRUE~HabitatCode))
habitat_area <- areas %>% mutate(area_ave = case_when(
(Area_2007 >0) & (Area_2008 >0) ~ (Area_2007+Area_2008)/2, #if the same habitat was present in both years do the average
(Area_2007 >0) & (Area_2008  ==0)~ Area_2007, #if the habitat was present in one year, keep the area of the year
(Area_2007 ==0) & (Area_2008  >0)~ Area_2008))
extensive_edgelist<- Norwood_farm$extended_ids %>%
select(-layer_to) %>% rename("habitat" = "layer_from") %>%
mutate(management = "E") %>% select(-habitat,-weight) %>% unique() #aggregate network
# estimate relative abundances of species in the aggregated network
ab_ext<-state_nodes_ab %>% select(-layer_id) %>% group_by(node_id,taxon) %>%
mutate(abun = sum(abundance)) %>% distinct(abun) %>% group_by(taxon) %>%
mutate(tot_ab_taxon = sum(abun)) %>% #total abundance per taxon
group_by(node_id) %>%
mutate(rel_ab=abun/tot_ab_taxon)#relative abundance per sp
# incorporate rel abundances to the edge list and calculate the weight (Product of relative abundances)
ext_edgelist_aggr<- extensive_edgelist %>% left_join(ab_ext, by = c("node_from" = "node_id")) %>%
left_join(ab_ext, by = c("node_to" = "node_id")) %>%
rename ("rel_ab_from" = "rel_ab.x", "rel_ab_to" = "rel_ab.y") %>%
mutate(weight = rel_ab_from * rel_ab_to) %>% #calculate weight
select(node_from,node_to,weight,management)
sem_ext_edgelist_rem<- Norwood_farm$extended_ids %>% filter(layer_from != 9 & layer_from != 11) %>%
select(-layer_to) %>% rename("habitat" = "layer_from") %>%   #links from "WD" and "RG" removed
left_join(state_nodes_ab, by = c("node_from" = "node_id",
"habitat" = "layer_id")) %>%  #incorporate abundances and taxa of node_from
left_join(state_nodes_ab, by = c("node_to" = "node_id",
"habitat" = "layer_id")) %>%  #incorporate abundances and taxa of nodes_to
rename("ab_node_from" = "abundance.x", "taxon_node_from" = "taxon.x",
"ab_node_to" = "abundance.y", "taxon_node_to" = "taxon.y")
sem_ext_edgelist_rem<-sem_ext_edgelist_rem[,c(1,2,5,6,3,7,8,4)]
# create habitats PP to replace WD and RG
WD_PP<- Norwood_farm$extended_ids %>% filter(layer_from  == 8) %>% select(-layer_to,-layer_from) %>%
mutate (new_hab = 12, prev_hab = "WD", hab = "PP")#links from "PP" to add as new habitat (12)
RG_PP<- Norwood_farm$extended_ids %>% filter(layer_from  == 8) %>% select(-layer_to,-layer_from) %>%
mutate (new_hab = 13, prev_hab = "RG", hab = "PP")#links from "PP" to add as new habitat (13)
#calculate changes in the area between PP and the habitat to replace
converted_area<-rbind(WD_PP, RG_PP) %>% left_join(habitat_area,
by = c("prev_hab" = "HabitatCode")) %>%
left_join(habitat_area, by = c("hab" = "HabitatCode")) %>%
select(node_from,node_to,weight,new_hab,prev_hab,hab,area_ave.x,area_ave.y) %>%
rename("area_prev_hab" ="area_ave.x", "area_PP" = "area_ave.y") %>%
mutate(mult_ab = (area_prev_hab/area_PP)) %>% #multplied abundances of PP for this value (to estimate according to the new habitat)
select(-prev_hab,-hab,-area_prev_hab,-area_PP)#clean dataframe
# add abundances and modify it according to the new area
abundances_PP<-state_nodes_ab %>% filter(layer_id ==8)#filter species abundances to show just layer PP
new_habitats_ab<-converted_area %>%
left_join(abundances_PP, by = c("node_from" = "node_id")) %>%  #incorporate abundances and taxa of node_from
left_join(abundances_PP, by = c("node_to" = "node_id")) %>%  #incorporate abundances and taxa of nodes_to
rename("ab_node_from_PP" = "abundance.x", "taxon_node_from" = "taxon.x",
"ab_node_to_PP" = "abundance.y", "taxon_node_to" = "taxon.y") %>%
mutate(ab_node_from = ab_node_from_PP * mult_ab,
ab_node_to = ab_node_to_PP * mult_ab ) %>% #estimate the new abundances
select(new_hab,node_from,ab_node_from,taxon_node_from,node_to,ab_node_to,
taxon_node_to,weight) %>% rename ("habitat" = "new_hab") #clean to match the rest of farm edgelist
new_habitats_ab_rem<- new_habitats_ab %>% filter(ab_node_from >=1 & ab_node_to >=1)
sem_ext_edgelist_no_aggr<- rbind(sem_ext_edgelist_rem,new_habitats_ab_rem)  #join new habitats and old habitats
#node_from
state_node_sem_ext_from<- sem_ext_edgelist_no_aggr %>% select(habitat,node_from,ab_node_from,
taxon_node_from) %>%
rename("node_id" ="node_from", "abundances" = "ab_node_from",
"taxon" = "taxon_node_from")
#node_to
state_node_sem_ext_to<- sem_ext_edgelist_no_aggr %>% select(habitat,node_to,ab_node_to,
taxon_node_to) %>%
rename("node_id" ="node_to", "abundances" = "ab_node_to",
"taxon" = "taxon_node_to")
state_node_sem_ext_agg<-rbind(state_node_sem_ext_from, state_node_sem_ext_to) %>%
unique() %>% select(-habitat) %>% group_by(node_id,taxon) %>%
mutate(abun = sum(abundances)) %>% distinct(abun) %>% group_by(taxon) %>%
mutate(tot_ab_taxon = sum(abun)) %>% #total abundance per taxon
group_by(node_id) %>%
mutate(rel_ab=abun/tot_ab_taxon)#rel abundance of species per taxon
sem_ext_edgelist_aggr<-sem_ext_edgelist_no_aggr %>% select(node_from,node_to) %>%
unique() %>%  #aggregated edge list
left_join(state_node_sem_ext_agg, by = c("node_from" = "node_id")) %>%  #incorporate rel abundances of node_from
left_join(state_node_sem_ext_agg, by = c("node_to" = "node_id")) %>%  #incorporate rel abundances of nodes_to
select(node_from,node_to, rel_ab.x,rel_ab.y) %>%
mutate(weight = rel_ab.x * rel_ab.y,management = "SE") %>% #calculate weight
select(-rel_ab.x,-rel_ab.y)
mod_edgelist_rem<- Norwood_farm$extended_ids %>%
filter(layer_from != 9 & layer_from != 11 & layer_from != 5 & layer_from != 6) %>% #links from "WD", "RG", "MH", and "NH" removed
select(-layer_to) %>% rename("habitat" = "layer_from") %>%
left_join(state_nodes_ab, by = c("node_from" = "node_id",
"habitat" = "layer_id")) %>%  #incorporate abundances and taxa of node_from
left_join(state_nodes_ab, by = c("node_to" = "node_id",
"habitat" = "layer_id")) %>%  #incorporate abundances and taxa of nodes_to
rename("ab_node_from" = "abundance.x", "taxon_node_from" = "taxon.x",
"ab_node_to" = "abundance.y", "taxon_node_to" = "taxon.y")
mod_edgelist_rem<-mod_edgelist_rem[,c(1,2,5,6,3,7,8,4)]
# create habitats PP to replace WD,RG, MH and NH (WD and RG were created before)
MH_PP<- Norwood_farm$extended_ids %>% filter(layer_from  == 8) %>% select(-layer_to,-layer_from) %>%
mutate (new_hab = 14, prev_hab = "MH", hab = "PP")#links from "PP" to add as new habitat (14)
NH_PP<- Norwood_farm$extended_ids %>% filter(layer_from  == 8) %>% select(-layer_to,-layer_from) %>%
mutate (new_hab = 15, prev_hab = "NH", hab = "PP")#links from "PP" to add as new habitat (15)
# calculate changes in the area between PP and the habitat to replace
converted_area<-rbind(WD_PP, RG_PP, MH_PP, NH_PP) %>% left_join(habitat_area,
by = c("prev_hab" = "HabitatCode")) %>%
left_join(habitat_area, by = c("hab" = "HabitatCode")) %>%
select(node_from,node_to,weight,new_hab,prev_hab,hab,area_ave.x,area_ave.y) %>%
rename("area_prev_hab" ="area_ave.x", "area_PP" = "area_ave.y") %>%
mutate(mult_ab = (area_prev_hab/area_PP)) %>% #multplied abundances of PP for this value (to estimate according to the new habitat)
select(-prev_hab,-hab,-area_prev_hab,-area_PP)#clean dataframe
# add abundances and modify them according to the new area
abundances_PP<-state_nodes_ab %>% filter(layer_id ==8)#filter species abundances to show just layer PP
new_habitats_ab<-converted_area %>%
left_join(abundances_PP, by = c("node_from" = "node_id")) %>%  #incorporate abundances and taxa of node_from
left_join(abundances_PP, by = c("node_to" = "node_id")) %>%  #incorporate abundances and taxa of nodes_to
rename("ab_node_from_PP" = "abundance.x", "taxon_node_from" = "taxon.x",
"ab_node_to_PP" = "abundance.y", "taxon_node_to" = "taxon.y") %>%
mutate(ab_node_from = ab_node_from_PP * mult_ab,
ab_node_to = ab_node_to_PP * mult_ab ) %>% #estimate the new abundances
select(new_hab,node_from,ab_node_from,taxon_node_from,node_to,ab_node_to,
taxon_node_to,weight) %>% rename ("habitat" = "new_hab") #clean to match the rest of farm edgelist
new_habitats_ab_rem<- new_habitats_ab %>% filter(ab_node_from >=1 & ab_node_to >=1)
mod_edgelist_no_aggr<- rbind(mod_edgelist_rem,new_habitats_ab_rem)  #join new habitats and old habitats
#node_from
state_node_mod_from<- mod_edgelist_no_aggr %>% select(habitat,node_from,ab_node_from,
taxon_node_from) %>%
rename("node_id" ="node_from", "abundances" = "ab_node_from",
"taxon" = "taxon_node_from")
#node_to
state_node_mod_to<- mod_edgelist_no_aggr %>% select(habitat,node_to,ab_node_to,
taxon_node_to) %>%
rename("node_id" ="node_to", "abundances" = "ab_node_to",
"taxon" = "taxon_node_to")
state_node_mod_agg<-rbind(state_node_mod_from, state_node_mod_to) %>%
unique() %>% select(-habitat) %>% group_by(node_id,taxon) %>%
mutate(abun = sum(abundances)) %>% distinct(abun) %>% group_by(taxon) %>%
mutate(tot_ab_taxon = sum(abun)) %>% #total abundance per taxon
group_by(node_id) %>%
mutate(rel_ab=abun/tot_ab_taxon)#rel abundance of species per taxon
mod_edgelist_aggr<-mod_edgelist_no_aggr %>% select(node_from,node_to) %>%
unique() %>%  #aggregated edge list
left_join(state_node_mod_agg, by = c("node_from" = "node_id")) %>%  #incorporate rel abundances of node_from
left_join(state_node_mod_agg, by = c("node_to" = "node_id")) %>%  #incorporate rel abundances of nodes_to
select(node_from,node_to, rel_ab.x,rel_ab.y) %>%
mutate(weight = rel_ab.x * rel_ab.y,management = "M") %>% #calculate weight
select(-rel_ab.x,-rel_ab.y)
sem_int_edgelist_rem<- Norwood_farm$extended_ids %>%
filter(layer_from != 9 & layer_from != 11 &  layer_from != 5 &
layer_from != 6 & layer_from != 2 &
layer_from != 10 & layer_from != 1 ) %>% #links from "WD", "RG", "MH", "NH"" and "GM"","SF","CP" removed
select(-layer_to) %>% rename("habitat" = "layer_from") %>%
left_join(state_nodes_ab, by = c("node_from" = "node_id",
"habitat" = "layer_id")) %>%  #incorporate abundances and taxa of node_from
left_join(state_nodes_ab, by = c("node_to" = "node_id",
"habitat" = "layer_id")) %>%  #incorporate abundances and taxa of nodes_to
rename("ab_node_from" = "abundance.x", "taxon_node_from" = "taxon.x",
"ab_node_to" = "abundance.y", "taxon_node_to" = "taxon.y")
sem_int_edgelist_rem<-sem_int_edgelist_rem[,c(1,2,5,6,3,7,8,4)]
# create habitats PP to replace WD,RG, MH,NH,GM,SF and CP (WD,RG,MH and NH were created before)
GM_PP<- Norwood_farm$extended_ids %>% filter(layer_from  == 8) %>% select(-layer_to,-layer_from) %>%
mutate (new_hab = 16, prev_hab = "GM", hab = "PP")#links from "PP" to add as new habitat (16)
SF_PP<- Norwood_farm$extended_ids %>% filter(layer_from  == 8) %>% select(-layer_to,-layer_from) %>%
mutate (new_hab = 17, prev_hab = "SF", hab = "PP")#links from "PP" to add as new habitat (17)
CP_PP<- Norwood_farm$extended_ids %>% filter(layer_from  == 8) %>% select(-layer_to,-layer_from) %>%
mutate (new_hab = 18, prev_hab = "CP", hab = "PP")#links from "PP" to add as new habitat (18)
# calculate changes in the area between PP and the habitat to replace
converted_area<-rbind(WD_PP, RG_PP, MH_PP, NH_PP, GM_PP,SF_PP,CP_PP) %>%
left_join(habitat_area, by = c("prev_hab" = "HabitatCode")) %>%
left_join(habitat_area, by = c("hab" = "HabitatCode")) %>%
select(node_from,node_to,weight,new_hab,prev_hab,hab,area_ave.x,area_ave.y) %>%
rename("area_prev_hab" ="area_ave.x", "area_PP" = "area_ave.y") %>%
mutate(mult_ab = (area_prev_hab/area_PP)) %>% #multplied abundances of PP for this value (to estimate according to the new habitat)
select(-prev_hab,-area_prev_hab,-area_PP)#clean dataframe
# add abundances and modify them according to the new area
abundances_PP<-state_nodes_ab %>% filter(layer_id ==8)#filter species abundances to show just layer PP
new_habitats_ab<-converted_area %>%
left_join(abundances_PP, by = c("node_from" = "node_id")) %>%  #incorporate abundances and taxa of node_from
left_join(abundances_PP, by = c("node_to" = "node_id")) %>%  #incorporate abundances and taxa of nodes_to
rename("ab_node_from_PP" = "abundance.x", "taxon_node_from" = "taxon.x",
"ab_node_to_PP" = "abundance.y", "taxon_node_to" = "taxon.y") %>%
mutate(ab_node_from = ab_node_from_PP * mult_ab,
ab_node_to = ab_node_to_PP * mult_ab ) %>% #estimate the new abundances
select(new_hab,node_from,ab_node_from,taxon_node_from,node_to,ab_node_to,
taxon_node_to,weight) %>% rename ("habitat" = "new_hab") #clean to match the rest of farm edgelist
new_habitats_ab_rem<- new_habitats_ab %>% filter(ab_node_from >=1 & ab_node_to >=1)
sem_int_edgelist_no_aggr<- rbind(sem_int_edgelist_rem,new_habitats_ab_rem)  #join new habitats and old habitats
#node_from
state_node_sem_int_from<- sem_int_edgelist_no_aggr %>% select(habitat,node_from,ab_node_from,
taxon_node_from) %>%
rename("node_id" ="node_from", "abundances" = "ab_node_from",
"taxon" = "taxon_node_from")
#node_to
state_node_sem_int_to<- sem_int_edgelist_no_aggr %>% select(habitat,node_to,ab_node_to,
taxon_node_to) %>%
rename("node_id" ="node_to", "abundances" = "ab_node_to",
"taxon" = "taxon_node_to")
state_node_sem_int_agg<-rbind(state_node_sem_int_from, state_node_sem_int_to) %>%
unique() %>% select(-habitat) %>% group_by(node_id,taxon) %>%
mutate(abun = sum(abundances)) %>% distinct(abun) %>% group_by(taxon) %>%
mutate(tot_ab_taxon = sum(abun)) %>% #total abundance per taxon
group_by(node_id) %>%
mutate(rel_ab=abun/tot_ab_taxon)#rel abundance of species per taxon
sem_int_edgelist_aggr<-sem_int_edgelist_no_aggr %>% select(node_from,node_to) %>%
unique() %>%  #aggregated edge list
left_join(state_node_sem_int_agg, by = c("node_from" = "node_id")) %>%  #incorporate rel abundances of node_from
left_join(state_node_sem_int_agg, by = c("node_to" = "node_id")) %>%  #incorporate rel abundances of nodes_to
select(node_from,node_to, rel_ab.x,rel_ab.y) %>%
mutate(weight = rel_ab.x * rel_ab.y,management = "SI") %>% #calculate weight
select(-rel_ab.x,-rel_ab.y)
int_edgelist_rem<- Norwood_farm$extended_ids %>%
filter(layer_from != 9 & layer_from != 11 &  layer_from != 5 &
layer_from != 6 & layer_from != 2 & layer_from != 10 &
layer_from != 1 & layer_from != 3 & layer_from != 4 &
layer_from != 7) %>% #links from habitats removed (except from PP)
select(-layer_to) %>% rename("habitat" = "layer_from") %>%
left_join(state_nodes_ab, by = c("node_from" = "node_id",
"habitat" = "layer_id")) %>%  #incorporate abundances and taxa of node_from
left_join(state_nodes_ab, by = c("node_to" = "node_id",
"habitat" = "layer_id")) %>%  #incorporate abundances and taxa of nodes_to
rename("ab_node_from" = "abundance.x", "taxon_node_from" = "taxon.x",
"ab_node_to" = "abundance.y", "taxon_node_to" = "taxon.y")
int_edgelist_rem<-int_edgelist_rem[,c(1,2,5,6,3,7,8,4)]
# create habitats PP to replace WD,RG, MH,NH,GM and SF (WD,RG,MH,NH andGM were created before)
LP_PP<- Norwood_farm$extended_ids %>% filter(layer_from  == 8) %>% select(-layer_to,-layer_from) %>%
mutate (new_hab = 19, prev_hab = "LP", hab = "PP")#links from "PP" to add as new habitat (19)
LU_PP<- Norwood_farm$extended_ids %>% filter(layer_from  == 8) %>% select(-layer_to,-layer_from) %>%
mutate (new_hab = 20, prev_hab = "LU", hab = "PP")#links from "PP" to add as new habitat (20)
NL_PP<- Norwood_farm$extended_ids %>% filter(layer_from  == 8) %>% select(-layer_to,-layer_from) %>%
mutate (new_hab = 21, prev_hab = "NL", hab = "PP")#links from "PP" to add as new habitat (21)
# calculate changes in the area between PP and the habitat to replace
converted_area<-rbind(WD_PP, RG_PP, MH_PP, NH_PP, GM_PP,SF_PP,CP_PP,LP_PP,LU_PP,
NL_PP) %>%
left_join(habitat_area, by = c("prev_hab" = "HabitatCode")) %>%
left_join(habitat_area, by = c("hab" = "HabitatCode")) %>%
select(node_from,node_to,weight,new_hab,prev_hab,hab,area_ave.x,area_ave.y) %>%
rename("area_prev_hab" ="area_ave.x", "area_PP" = "area_ave.y") %>%
mutate(mult_ab = (area_prev_hab/area_PP)) %>% #multplied abundances of PP for this value (to estimate according to the new habitat)
select(-prev_hab,-hab,-area_prev_hab,-area_PP)#clean dataframe
# add abundances and modify them according to the new area
abundances_PP<-state_nodes_ab %>% filter(layer_id ==8)#filter species abundances to show just layer PP
new_habitats_ab<-converted_area %>%
left_join(abundances_PP, by = c("node_from" = "node_id")) %>%  #incorporate abundances and taxa of node_from
left_join(abundances_PP, by = c("node_to" = "node_id")) %>%  #incorporate abundances and taxa of nodes_to
rename("ab_node_from_PP" = "abundance.x", "taxon_node_from" = "taxon.x",
"ab_node_to_PP" = "abundance.y", "taxon_node_to" = "taxon.y") %>%
mutate(ab_node_from = ab_node_from_PP * mult_ab,
ab_node_to = ab_node_to_PP * mult_ab ) %>% #estimate the new abundances
select(new_hab,node_from,ab_node_from,taxon_node_from,node_to,ab_node_to,
taxon_node_to,weight) %>% rename ("habitat" = "new_hab") #clean to match the rest of farm edgelist
new_habitats_ab_rem<- new_habitats_ab %>% filter(ab_node_from >=1 & ab_node_to >=1)
int_edgelist_no_aggr<- rbind(int_edgelist_rem,new_habitats_ab_rem)  #join new habitats and old habitats
#node_from
state_node_int_from<- int_edgelist_no_aggr %>% select(habitat,node_from,ab_node_from,
taxon_node_from) %>%
rename("node_id" ="node_from", "abundances" = "ab_node_from",
"taxon" = "taxon_node_from")
#node_to
state_node_int_to<- int_edgelist_no_aggr %>% select(habitat,node_to,ab_node_to,
taxon_node_to) %>%
rename("node_id" ="node_to", "abundances" = "ab_node_to",
"taxon" = "taxon_node_to")
state_node_int_agg<-rbind(state_node_int_from, state_node_int_to) %>%
unique() %>% select(-habitat) %>% group_by(node_id,taxon) %>%
mutate(abun = sum(abundances)) %>% distinct(abun) %>% group_by(taxon) %>%
mutate(tot_ab_taxon = sum(abun)) %>% #total abundance per taxon
group_by(node_id) %>%
mutate(rel_ab=abun/tot_ab_taxon)#rel abundance of species per taxon
int_edgelist_aggr<-int_edgelist_no_aggr %>% select(node_from,node_to) %>%
unique() %>%  #aggregated edge list
left_join(state_node_int_agg, by = c("node_from" = "node_id")) %>%  #incorporate rel abundances of node_from
left_join(state_node_int_agg, by = c("node_to" = "node_id")) %>%  #incorporate rel abundances of nodes_to
select(node_from,node_to, rel_ab.x,rel_ab.y) %>%
mutate(weight = rel_ab.x * rel_ab.y,management = "I") %>% #calculate weight
select(-rel_ab.x,-rel_ab.y)
ggsave("Land_use_retained_indirect_CP_intense.png")
land_change_weighted<-rbind(ext_edgelist_aggr,sem_ext_edgelist_aggr,mod_edgelist_aggr,
sem_int_edgelist_aggr,int_edgelist_aggr)
#final state_node list with abundances
state_nodes_weighted_ab<-rbind(ab_ext[,1:3],state_node_sem_ext_agg[,1:3],
state_node_mod_agg[,1:3],state_node_sem_int_agg[,1:3],
state_node_int_agg[,1:3])
#add management label
state_nodes_weighted<-cbind(management = rep(c("E","SE","M","SI","I"),
c(nrow(ab_ext),nrow(state_node_sem_ext_agg),
nrow(state_node_mod_agg), nrow(state_node_sem_int_agg),
nrow(state_node_int_agg))), state_nodes_weighted_ab)
nodes_ES<- right_join(state_nodes_weighted, Norwood_farm$nodes, by = "node_id")%>%
select(management,node_id,taxon.x,abun, "Crop production",
"Pollination", "Crop damage", "Pest control", "Seed dispersal", "Butterfly watching", "Bird watching") %>%
group_by(management,node_id) %>% rename("taxon" = "taxon.x") %>%
gather("services","value", 5:11) #we conserve species that not directly provide ES because can serve as intermediate hop
nodes_ES$management <- factor(nodes_ES$management, levels = c("E", "SE", "M", "SI","I")) #change order of factors
## -- Estimate direct E(D)S provision with the abundances (however, we multiply for trophic group's body size when differenr trophic groups provide the same ES (case of crop damage))
direct_ES <- nodes_ES %>% filter (value ==1) %>%
mutate (type = "D",
body_size =  case_when( #to control ES for body size
services != "Crop damage"~ 1,
(services == "Crop damage") &
(taxon == "Seed-feeding bird"|taxon == "Seed-feeding rodent")~1, #birds and rodents receives a 1 cause they are the biggest producing crop damage
(services == "Crop damage") & (taxon == "Aphid"|
taxon == "Seed-feeding insect")~0.5),
weight = abun * body_size,
output = case_when( #output + or - according to the service
services == "Crop damage"~ "-",
TRUE ~ "+")) %>% #weight of direct ES provision
select(-value)
number_ES<-nodes_ES %>% group_by(management) %>%
filter (value ==1 & services != "Crop damage") %>% summarise (ES =sum(value))#count ES provision
number_EDS<-nodes_ES %>% group_by(management) %>%
filter (value ==1 & services == "Crop damage") %>% summarise (EDS =sum(value))#count EDS provision
write.csv(direct_ES,"Data/Land_use_dir_weighted_PP_intense.csv", row.names= FALSE)
number_ES<-nodes_ES %>% group_by(management) %>%
filter (value ==1 & services != "Crop damage") %>% summarise (ES =sum(value))#count ES provision
number_EDS<-nodes_ES %>% group_by(management) %>%
filter (value ==1 & services == "Crop damage") %>% summarise (EDS =sum(value))#count EDS provision
total<-cbind(number_ES,number_EDS[,-1])
ratio_direct<-total %>% mutate(ratio_direct = ES/EDS)
write.csv(ratio_direct,"Data/Land_use_rat_dir_weighted_PP_intense.csv", row.names= FALSE)
#direct
direct_ES<- read.csv("Data/Land_use_dir_weighted_PP_intense.csv", sep =",")
direct_ES$management <- factor(direct_ES$management, levels = c("E", "SE", "M", "SI","I")) #change order of factors
Prop<-direct_ES %>% group_by(management,services) %>%
mutate(tot = n()) %>% ungroup() %>%
group_by(services) %>%
mutate(prop = tot/max(tot)) %>%  #prop of E(D)S rtained across habitat management
select(management,services,tot,prop) %>% unique()
prop_EDS_direct<- Prop %>% ggplot(aes(x = management, y = prop)) +
geom_boxplot(color = "black") +
geom_point(position=position_jitterdodge(jitter.width=2, dodge.width = 0.5),
pch=21, aes(fill=factor(services)), size = 4, show.legend = T) +
# scale_fill_manual(values = col) +
scale_fill_brewer(palette="PRGn") +
scale_y_continuous(name = "Fraction of E(D)S retained", limits = c(0, 1)) +
scale_x_discrete(name = "Management")+
theme(panel.background = element_rect(fill = "white"),
panel.grid.major=element_line(color = "gray"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text.y = element_text(size=11, color='black'),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =13),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11),
legend.position = "bottom")
prop_EDS_direct
ggsave("Land_use_retained_direct_PP_intense.png")
ratio_direct<-read.csv("Data/Land_use_rat_dir_weighted_PP_intense.csv")
ratio_direct$management <- factor(ratio_direct$management, levels = c("E", "SE", "M", "SI","I")) #change order of factors
ratio_direct<-ratio_direct%>% gather("type","value", 2:3) %>% group_by(management) %>%
mutate(Total = sum(value)) %>% group_by(management,type) %>%
summarise(prop = value /Total) %>%
ggplot(aes(y=prop, x=management, fill = type)) +
geom_bar(position="stack", stat="identity")+ ggtitle("Direct provision")+
labs(x='Management', y="Prop of E(D)S") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=15, color='black'),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11),
legend.position = "bottom")
ratio_direct
