install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("manlius/muxViz")
remove.packages("muxViz")
devtools::install_github("manlius/muxViz")
library(htmltools)
library(htmltools)
install.packages("htmltools")
detach("package:htmltools", unload = TRUE)
install.packages("htmltools")
devtools::install_github("manlius/muxViz")
install.packages("htmltools")
devtools::install_github("manlius/muxViz")
library(emln)#multilayer package
library(readr)
library(ggplot2)
setwd("D:/Trabajo/Papers/Norwood_Farm/norwood-ecosystem-services-main_Tinio")
######### --- Upload multilayer network
Norwood_farm<-readRDS("Data/Norwood_farm.RData") #read multilayer object
#indirect
output_ind_ES <- read.csv("Data/Land_use_ind_weighted_trial_removal.csv", sep =",")
#direct
direct_ES<- read.csv("Data/Land_use_dir_weighted_trial_removal.csv", sep =",")
View(direct_ES)
direct_ES$management <- factor(direct_ES$management, levels = c("E", "SE", "M", "SI","I")) #change order of factors
output_ind_ES$management <- factor(output_ind_ES$management, levels = c("E", "SE", "M", "SI","I")) #change order of factors
Number_direct<-direct_ES %>% group_by(management) %>% summarise(Number = n())
View(Number_direct)
Number_indirect<-output_ind_ES %>% group_by(management) %>%
summarise(Number = n())
View(Number_indirect)
Number_dir<-Number_direct%>%
ggplot(aes(y=Number, x=management)) +
geom_bar(position="stack", stat="identity")+ ggtitle("no removal")+
labs(x='Management', y="Number of direct E(D)S provision") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=15, color='black'),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank())
Number_dir
Number_indirect<-output_ind_ES %>% group_by(management) %>%
summarise(Number = n())
Number_indir<-Number_indirect%>%
ggplot(aes(y=Number, x=management)) +
geom_bar(position="stack", stat="identity")+ ggtitle("no removal")+
labs(x='Management', y="Number of indirect effects on E(D)S") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=15, color='black'),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank())
Number_indir
#direct
Number_direct<-direct_ES %>% group_by(management) %>% summarise(Number = n())
Number_dir<-Number_direct%>%
ggplot(aes(y=Number, x=management)) +
geom_bar(position="stack", stat="identity")+ ggtitle("Direct")+
labs(x='Management', y="Number of direct E(D)S provision") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=15, color='black'),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank())
Number_dir
Number_indirect<-output_ind_ES %>% group_by(management) %>%
summarise(Number = n())
Number_indir<-Number_indirect%>%
ggplot(aes(y=Number, x=management)) +
geom_bar(position="stack", stat="identity")+ ggtitle("Indirect")+
labs(x='Management', y="Number of indirect effects on E(D)S") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=15, color='black'),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank())
Number_indir
upper_row<- plot_grid(Number_dir,Number_indir ,
ncol = 2)
upper_row
library(cowplot)
upper_row<- plot_grid(Number_dir,Number_indir ,
ncol = 2)
upper_row
ggsave("Simulation_Number.png")
ratio_direct<-read.csv("Data/Land_use_rat_dir_weighted_trial_removal.csv")
number_positive<-output_ind_ES %>% group_by(management) %>%
filter (output == "+") %>% summarise (positive = n())#count + outputs
number_negative<-output_ind_ES %>% group_by(management) %>%
filter (output == "-") %>% summarise (negative = n())#count - outputs
number_positive<-output_ind_ES %>% group_by(management) %>%
filter (output == "+") %>% summarise (positive = n())#count + outputs
View(output_ind_ES)
#indirect
output_ind_ES <- read.csv("Data/Land_use_ind_weighted_trial_removal.csv", sep =",")
View(output_ind_ES)
#indirect
output_ind_ES <- read.csv("Data/Land_use_output_weighted_trial_removal", sep =",")
#indirect
output_ind_ES <- read.csv("Data/Land_use_output_weighted_trial_removal", sep =",")
#indirect
output_ind_ES <- read.csv("Data/Land_use_output_weighted_trial_removal.csv", sep =",")
output_ind_ES$management <- factor(output_ind_ES$management, levels = c("E", "SE", "M", "SI","I")) #change order of factors
#direct
Number_direct<-direct_ES %>% group_by(management) %>% summarise(Number = n())
Number_dir<-Number_direct%>%
ggplot(aes(y=Number, x=management)) +
geom_bar(position="stack", stat="identity")+ ggtitle("Direct")+
labs(x='Management', y="Number of direct E(D)S provision") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=15, color='black'),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank())
Number_dir
Number_indirect<-output_ind_ES %>% group_by(management) %>%
summarise(Number = n())
Number_indir<-Number_indirect%>%
ggplot(aes(y=Number, x=management)) +
geom_bar(position="stack", stat="identity")+ ggtitle("Indirect")+
labs(x='Management', y="Number of indirect effects on E(D)S") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=15, color='black'),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank())
Number_indir
upper_row<- plot_grid(Number_dir,Number_indir ,
ncol = 2)
upper_row
ggsave("Simulation_Number.png")
number_positive<-output_ind_ES %>% group_by(management) %>%
filter (output == "+") %>% summarise (positive = n())#count + outputs
number_negative<-output_ind_ES %>% group_by(management) %>%
filter (output == "-") %>% summarise (negative = n())#count - outputs
total<-cbind(number_positive,number_negative[,-1])
ratio_indirect<-total %>% mutate(ratio_direct = positive/negative)
ratio_indirect$management <- factor(ratio_indirect$management, levels = c("E", "SE", "M", "SI","I")) #change order of factors
ratio_direct<-ratio_direct%>% gather("type","value", 2:3) %>% group_by(management) %>%
mutate(Total = sum(value)) %>% group_by(management,type) %>%
summarise(prop = value /Total) %>%
ggplot(aes(y=prop, x=management, fill = type)) +
geom_bar(position="stack", stat="identity")+ ggtitle("Direct provision")+
labs(x='Manegement', y="Prop of E(D)S") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=15, color='black'),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))
ratio_direct
#indirect
output_ind_ES <- read.csv("Data/Land_use_output_weighted_trial_removal.csv", sep =",")
output_ind_ES$management <- factor(output_ind_ES$management, levels = c("E", "SE", "M", "SI","I")) #change order of factors
ratio_direct$management <- factor(ratio_direct$management, levels = c("E", "SE", "M", "SI","I")) #change order of factors
ratio_direct<-ratio_direct%>% gather("type","value", 2:3) %>% group_by(management) %>%
mutate(Total = sum(value)) %>% group_by(management,type) %>%
summarise(prop = value /Total) %>%
ggplot(aes(y=prop, x=management, fill = type)) +
geom_bar(position="stack", stat="identity")+ ggtitle("Direct provision")+
labs(x='Manegement', y="Prop of E(D)S") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=15, color='black'),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))
ratio_direct<-read.csv("Data/Land_use_rat_dir_weighted_trial_removal.csv")
ratio_direct$management <- factor(ratio_direct$management, levels = c("E", "SE", "M", "SI","I")) #change order of factors
ratio_direct<-ratio_direct%>% gather("type","value", 2:3) %>% group_by(management) %>%
mutate(Total = sum(value)) %>% group_by(management,type) %>%
summarise(prop = value /Total) %>%
ggplot(aes(y=prop, x=management, fill = type)) +
geom_bar(position="stack", stat="identity")+ ggtitle("Direct provision")+
labs(x='Manegement', y="Prop of E(D)S") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=15, color='black'),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))
ratio_direct
number_positive<-output_ind_ES %>% group_by(management) %>%
filter (output == "+") %>% summarise (positive = n())#count + outputs
number_negative<-output_ind_ES %>% group_by(management) %>%
filter (output == "-") %>% summarise (negative = n())#count - outputs
total<-cbind(number_positive,number_negative[,-1])
ratio_indirect<-total %>% mutate(ratio_direct = positive/negative)
ratio_indirect$management <- factor(ratio_indirect$management, levels = c("E", "SE", "M", "SI","I")) #change order of factors
ratio_indirect<-ratio_indirect%>% gather("type","value", 2:3) %>% group_by(management) %>%
mutate(Total = sum(value)) %>% group_by(management,type) %>%
summarise(prop = value /Total) %>%
ggplot(aes(y=prop, x=management, fill = type)) +
geom_bar(position="stack", stat="identity")+ ggtitle("Indirect effects")+
labs(x='Manegement', y="Prop of output (+/-)") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=15, color='black'),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))
ratio_indirect
upper_row<- plot_grid(ratio_direct,ratio_indirect ,
ncol = 2)
upper_row
ratio_direct<-read.csv("Data/Land_use_rat_dir_weighted_trial_removal.csv")
ratio_direct$management <- factor(ratio_direct$management, levels = c("E", "SE", "M", "SI","I")) #change order of factors
ratio_direct<-ratio_direct%>% gather("type","value", 2:3) %>% group_by(management) %>%
mutate(Total = sum(value)) %>% group_by(management,type) %>%
summarise(prop = value /Total) %>%
ggplot(aes(y=prop, x=management, fill = type)) +
geom_bar(position="stack", stat="identity")+ ggtitle("Direct provision")+
labs(x='Manegement', y="Prop of E(D)S") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=15, color='black'),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11),
legend.position = "bottom")
ratio_direct
number_positive<-output_ind_ES %>% group_by(management) %>%
filter (output == "+") %>% summarise (positive = n())#count + outputs
number_negative<-output_ind_ES %>% group_by(management) %>%
filter (output == "-") %>% summarise (negative = n())#count - outputs
total<-cbind(number_positive,number_negative[,-1])
ratio_indirect<-total %>% mutate(ratio_direct = positive/negative)
ratio_indirect$management <- factor(ratio_indirect$management, levels = c("E", "SE", "M", "SI","I")) #change order of factors
ratio_indirect<-ratio_indirect%>% gather("type","value", 2:3) %>% group_by(management) %>%
mutate(Total = sum(value)) %>% group_by(management,type) %>%
summarise(prop = value /Total) %>%
ggplot(aes(y=prop, x=management, fill = type)) +
geom_bar(position="stack", stat="identity")+ ggtitle("Indirect effects")+
labs(x='Manegement', y="Prop of output (+/-)") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=15, color='black'),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11),
legend.position = "bottom")
ratio_indirect
upper_row<- plot_grid(ratio_direct,ratio_indirect ,
ncol = 2)
upper_row
ggsave("Simulation_output.png")
ratio_direct<-read.csv("Data/Land_use_rat_dir_weighted_trial_removal.csv")
ratio_direct$management <- factor(ratio_direct$management, levels = c("E", "SE", "M", "SI","I")) #change order of factors
ratio_direct<-ratio_direct%>% gather("type","value", 2:3) %>% group_by(management) %>%
mutate(Total = sum(value)) %>% group_by(management,type) %>%
summarise(prop = value /Total) %>%
ggplot(aes(y=prop, x=management, fill = type)) +
geom_bar(position="stack", stat="identity")+ ggtitle("Direct provision")+
labs(x='Management', y="Prop of E(D)S") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=15, color='black'),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11),
legend.position = "bottom")
ratio_direct
number_positive<-output_ind_ES %>% group_by(management) %>%
filter (output == "+") %>% summarise (positive = n())#count + outputs
number_negative<-output_ind_ES %>% group_by(management) %>%
filter (output == "-") %>% summarise (negative = n())#count - outputs
total<-cbind(number_positive,number_negative[,-1])
ratio_indirect<-total %>% mutate(ratio_direct = positive/negative)
ratio_indirect$management <- factor(ratio_indirect$management, levels = c("E", "SE", "M", "SI","I")) #change order of factors
ratio_indirect<-ratio_indirect%>% gather("type","value", 2:3) %>% group_by(management) %>%
mutate(Total = sum(value)) %>% group_by(management,type) %>%
summarise(prop = value /Total) %>%
ggplot(aes(y=prop, x=management, fill = type)) +
geom_bar(position="stack", stat="identity")+ ggtitle("Indirect effects")+
labs(x='Management', y="Prop of output (+/-)") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=15, color='black'),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11),
legend.position = "bottom")
ratio_indirect
upper_row<- plot_grid(ratio_direct,ratio_indirect ,
ncol = 2)
upper_row
ggsave("Simulation_output.png")
View(direct_ES)
weight_direct<-direct_ES %>% group_by(management,output) %>%
summarise(weight_mean = mean(weight),
weight_se = sd(weight)/ sqrt(n()))
View(weight_direct)
#barplot
weights_direct<-weight_direct %>%
ggplot(aes(y=weight_mean, x=management, fill =output)) +
geom_errorbar(
aes(ymin =0 , ymax = weight_mean + weight_se),
position = position_dodge(width = 0.9),
width = 0.25
) +
geom_bar(position="dodge", stat="identity")+ ggtitle("Weight direct provision")+
labs(x='Management', y="Weight") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =13, angle = 90),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11),
legend.position = "bottom")
weights_direct
#barplot
weights_direct<-weight_direct %>%
ggplot(aes(y=weight_mean, x=management, fill =output)) +
geom_errorbar(
aes(ymin =0 , ymax = weight_mean + weight_se),
position = position_dodge(width = 0.9),
width = 0.25
) +
geom_bar(position="dodge", stat="identity")+ ggtitle("Direct provision")+
labs(x='Management', y="Weight") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =13),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11),
legend.position = "bottom")
weights_direct
#indirect
weight_indirect<-output_ind_ES %>% group_by(management,output) %>%
summarise(weight_mean = mean(weight),
weight_se = sd(weight)/ sqrt(n()))
#indirect
weight_indirect<-output_ind_ES %>% group_by(management,output) %>%
summarise(weight_mean = mean(weight),
weight_se = sd(weight)/ sqrt(n()))
#barplot
weights_indirect<-weight_indirect %>%
ggplot(aes(y=weight_mean, x=management, fill =output)) +
geom_errorbar(
aes(ymin =0 , ymax = weight_mean + weight_se),
position = position_dodge(width = 0.9),
width = 0.25
) +
geom_bar(position="dodge", stat="identity")+ ggtitle("Indirect effects")+
labs(x='Management', y="Weight") +theme_bw()+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =13),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11),
legend.position = "bottom")
upper_row<- plot_grid(weights_direct,weights_indirect ,
ncol = 2)
upper_row
ggsave("Simulation_weight.png")
