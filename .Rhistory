install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("manlius/muxViz")
remove.packages("muxViz")
devtools::install_github("manlius/muxViz")
library(htmltools)
library(htmltools)
install.packages("htmltools")
detach("package:htmltools", unload = TRUE)
install.packages("htmltools")
devtools::install_github("manlius/muxViz")
install.packages("htmltools")
devtools::install_github("manlius/muxViz")
library(emln)#multilayer package
#load packages
library(igraph)
library(dplyr)
library(tidyverse)
library(emln)#multilayer package
library(readr)
library(ggplot2)
library(cowplot)
library(tidyverse)
#setwd("/Users/agustinvitali/Desktop/Work/Papers/Norwood_Farm/GitHub/Norwood_farm")
setwd("/Users/agustin/Desktop/Papers/Norwood_farm/Norwood_Tinio")
#source("/Users/agustinvitali/Desktop/Work/Papers/Norwood_Farm/GitHub/Norwood_farm/Exploratory/Scenario_ES/functions.R")
source("/Users/agustin/Desktop/Papers/Norwood_farm/Norwood_Tinio/Exploratory/Scenario_ES/functions.R")
######### --- Call and arrange dataframes
Norwood_farm<-readRDS("Data/Norwood_farm.RData") #read multilayer object
#observed (empirical)
direct_ES_emp<- read.csv("Data/Land_use_dir_weighted_CP_intense.csv", sep =",")
extensive_amount<-direct_ES_emp %>% filter(management=="E") %>% group_by(management,services) %>%
summarize(tot_empirical = sum(weight))
amount_obs<-direct_ES_emp %>% group_by(management,services) %>%
summarize(tot = sum(weight)) %>% ungroup() %>%
mutate(Extensive_tot = case_when(
services == "Bird watching"~ 381519.3800,
services == "Butterfly watching"~ 244.7676,
services == "Crop damage"~ 711450.9469,
services == "Crop production"~ 209300.0000,
services == "Pest control"~ 7108.3108,
services == "Pollination"~ 36736.7426,
services == "Seed dispersal"~ 362197.4900),
ratio_change = tot / Extensive_tot  #ratio of change: values higher than 1 indicates increasing in the amount of E(D)S
) %>% filter(management!="E")
View(extensive_amount)
#extensive amount watching empirical
tot_services_emp_watching<-direct_ES %>% filter(management=="E" &  (services == "Bird watching" | services == "Butterfly watching" )) %>%
group_by(management,services) %>%
summarize(tot_empirical_amount = sum(abun))
#observed (empirical)
direct_ES_emp<- read.csv("Data/Land_use_dir_weighted_CP_intense.csv", sep =",")
#extensive amount watching empirical
tot_services_emp_watching<-direct_ES %>% filter(management=="E" &  (services == "Bird watching" | services == "Butterfly watching" )) %>%
group_by(management,services) %>%
summarize(tot_empirical_amount = sum(abun))
#observed (empirical)
direct_ES_emp<- read.csv("Data/Land_use_dir_weighted_CP_intense.csv", sep =",")
#extensive amount watching empirical
tot_services_emp_watching<-direct_ES_emp %>% filter(management=="E" &  (services == "Bird watching" | services == "Butterfly watching" )) %>%
group_by(management,services) %>%
summarize(tot_empirical_amount = sum(abun))
View(tot_services_emp_watching)
amount_obs_watching<-  direct_ES_emp %>% group_by(management,services) %>%
filter (services == "Bird watching" | services == "Butterfly watching") %>%
summarize(tot= sum(abun))%>% ungroup() %>%
mutate(Extensive_tot = case_when(
services == "Bird watching"~ 2076,
services == "Butterfly watching"~ 6903),
ratio_change = tot / Extensive_tot)
View(amount_obs_watching)
#amount the rest ESs
tot_services_emp_rest<-direct_ES_emp %>% filter(management=="E" &  !(services == "Bird watching" | services == "Butterfly watching" )) %>%
group_by(management,services) %>%
summarize(tot_empirical_amount = sum(weight))
View(tot_services_emp_rest)
amount_obs_rest<-  direct_ES_emp %>% group_by(management,services) %>%
filter (!(services == "Bird watching" | services == "Butterfly watching")) %>%
summarize(tot= sum(weight))%>% ungroup() %>%
mutate(Extensive_tot = case_when(
services == "Crop damage"~ 711450.9469,
services == "Crop production"~ 209300.0000,
services == "Pest control"~ 7108.3167,
services == "Pollination"~ 36736.7426,
services == "Seed dispersal"~ 362197.4900),
ratio_change = tot / Extensive_tot)
#amount the rest ESs
tot_services_emp_rest<-direct_ES_emp %>% filter(management=="E" &  !(services == "Bird watching" | services == "Butterfly watching" )) %>%
mutate(tot_empirical = abun * log(body_mass))%>%
group_by(management,services) %>%
summarize(tot_empirical_amount = sum(tot_empirical))
#amount the rest ESs
tot_services_emp_rest<-direct_ES_emp %>% filter(management=="E" &  !(services == "Bird watching" | services == "Butterfly watching" )) %>%
group_by(management,services) %>%
summarize(tot_empirical_amount = sum(weight))
amount_obs_rest<-  direct_ES_emp %>% group_by(management,services) %>%
filter (!(services == "Bird watching" | services == "Butterfly watching")) %>%
summarize(tot= sum(weight))%>% ungroup() %>%
mutate(Extensive_tot = case_when(
services == "Crop damage"~ 711450.9469,
services == "Crop production"~ 209300.0000,
services == "Pest control"~ 7108.3167,
services == "Pollination"~ 36736.7426,
services == "Seed dispersal"~ 362197.4900),
ratio_change = tot / Extensive_tot)
# tot amount empirical
amount_obs<- rbind(amount_obs_watching,amount_obs_rest)
View(amount_obs)
## Calculate ratio of change for empirical
direct_ES_emp<- read.csv("Data/Land_use_dir_weighted_CP_intense.csv", sep =",") #upload empirical
#amount Bird and butterfly watching
tot_services_emp_watching<-direct_ES_emp %>% filter(management=="E" &  (services == "Bird watching" | services == "Butterfly watching" )) %>%
group_by(management,services) %>%
summarize(tot_empirical_amount = sum(abun))
Prop_weight_watching<-  direct_ES_emp %>% group_by(management,services) %>%
filter (services == "Bird watching" | services == "Butterfly watching") %>%
summarize(tot= sum(abun))%>% ungroup() %>%
mutate(Extensive_tot = case_when(
services == "Bird watching"~ 2076,
services == "Butterfly watching"~ 6903),
ratio_change = tot / Extensive_tot)
#amount the rest ESs
tot_services_emp_rest<-direct_ES_emp %>% filter(management=="E" &  !(services == "Bird watching" | services == "Butterfly watching" )) %>%
group_by(management,services) %>%
summarize(tot_empirical_amount = sum(weight))
Prop_weight_rest<-  direct_ES_emp %>% group_by(management,services) %>%
filter (!(services == "Bird watching" | services == "Butterfly watching")) %>%
summarize(tot= sum(weight))%>% ungroup() %>%
mutate(Extensive_tot = case_when(
services == "Crop damage"~ 711450.9469,
services == "Crop production"~ 209300.0000,
services == "Pest control"~ 7108.3167,
services == "Pollination"~ 36736.7426,
services == "Seed dispersal"~ 362197.4900),
ratio_change = tot / Extensive_tot)
#merge the data
amount_obs<- rbind(Prop_weight_watching,Prop_weight_rest)
View(amount_obs)
amount_shuff_watch <- direct_ES_sim %>% filter (management !="E") %>%
filter(services == "Bird watching" | services == "Butterfly watching" ) %>%
group_by(management,iteration,services) %>%
summarize(tot_sim_amount = sum(abun)) %>%
left_join(amount_obs, by = c("management", "services"), suffix = c("", "_extensive")
amount_shuff_watch <- direct_ES_sim %>% filter (management !="E") %>%
filter(services == "Bird watching" | services == "Butterfly watching" ) %>%
group_by(management,iteration,services) %>%
summarize(tot_sim_amount = sum(abun)) %>%
left_join(amount_obs, by = c("management", "services"), suffix = c("", "_extensive"))
amount_shuff_watch <- direct_ES_sim %>% filter (management !="E") %>%
filter(services == "Bird watching" | services == "Butterfly watching" ) %>%
group_by(management,iteration,services) %>%
summarize(tot_sim_amount = sum(abun)) %>%
left_join(amount_obs[,c(1,2,4)], by = c("management", "services"), suffix = c("", "_extensive"))
### Calculate ratio of change for shuffled
direct_ES_sim<- read.csv("Data/direct_ES_sim_CP.csv", sep =",")
amount_shuff_watch <- direct_ES_sim %>% filter (management !="E") %>%
filter(services == "Bird watching" | services == "Butterfly watching" ) %>%
group_by(management,iteration,services) %>%
summarize(tot_sim_amount = sum(abun)) %>%
left_join(amount_obs[,c(1,2,4)], by = c("management", "services"), suffix = c("", "_extensive"))
View(amount_shuff_watch)
amount_shuff_watch <- direct_ES_sim %>% filter (management !="E") %>%
filter(services == "Bird watching" | services == "Butterfly watching" ) %>%
group_by(management,iteration,services) %>%
summarize(tot_sim_amount = sum(abun)) %>%
left_join(amount_obs[,c(1,2,3)], by = c("management", "services"), suffix = c("", "_extensive"))
check<-amount_shuff_watch %>% filter(services =="Pollination")
check<-amount_shuff_watch %>% filter(services =="pollination")
check<-amount_shuff_watch %>% filter(services =="Bird watching")
View(check)
amount_shuff_watch <- direct_ES_sim %>% filter (management !="E") %>%
filter(services == "Bird watching" | services == "Butterfly watching" ) %>%
group_by(management,iteration,services) %>%
summarize(tot_sim_amount = sum(abun)) %>%
left_join(amount_obs[,c(1,2,4)], by = c("management", "services"), suffix = c("", "_extensive"))
amount_shuff_watch <- direct_ES_sim %>% filter (management !="E") %>%
filter(services == "Bird watching" | services == "Butterfly watching" ) %>%
group_by(management,iteration,services) %>%
summarize(tot_sim_amount = sum(abun)) %>%
left_join(amount_obs[,c(1,2,4)], by = c("management", "services"), suffix = c("", "_extensive")) %>%
select(-ratio_change)  %>%
mutate(ratio_change = tot_sim_amount / Extensive_tot)
amount_shuff_watch <- direct_ES_sim %>% filter (management !="E") %>%
filter(services == "Bird watching" | services == "Butterfly watching" ) %>%
group_by(management,iteration,services) %>%
summarize(tot_sim_amount = sum(abun)) %>%
left_join(amount_obs[,c(1,2,4)], by = c("management", "services"), suffix = c("", "_extensive")) %>%
mutate(ratio_change = tot_sim_amount / Extensive_tot)
#Amount of the rest Es
amount_shuff_rest <- direct_ES_sim %>% filter (management !="E") %>%
filter(!(services == "Bird watching" | services == "Butterfly watching" )) %>%
group_by(management,iteration,services) %>%
summarize(tot_sim_amount= sum(weight)) %>%
left_join(amount_obs[,c(1,2,4)], by = c("management", "services"), suffix = c("", "_extensive")) %>%
mutate(ratio_change = tot_sim_amount / Extensive_tot)
View(amount_shuff_rest)
#merge the data
amount_shuff<- rbind(amount_shuff_watch,amount_shuff_rest)
###  calculate Z-score
amount_ES_z_score <-
inner_join(amount_obs,
amount_shuff %>% select(-iteration) %>%
group_by(management,services) %>%
summarise(amount_shuff_mean=mean(ratio_change), amount_shuff_sd=sd(ratio_change), n=n())) %>%
drop_na() %>%
mutate(z=(ratio_change-amount_shuff_mean)/amount_shuff_sd)
amount_ES_z_score %<>%
mutate(signif=case_when(z>1.96 ~ 'above', # Obs is more than the shuffled
z< -1.96 ~ 'below', # Obs is lower than the shuffled
z<=1.96 | z>=-1.96 ~ 'not signif'))
write.csv(amount_ES_z_score,"Data/z_score_amount_ES_CP.csv", row.names= FALSE)
# Prepare dataframe
z_score_amount<- amount_ES_z_score %>% select(management,services,z,signif)
#Add row showing the extensice and bird watching and seed dispersal for IM (all birds went extinct so there were no z scores)
sd_bw<-data.frame(management = c("E","E","E","E","E","E","E"),
services = c("Bird watching", "Butterfly watching",
"Crop damage", "Crop production","Pest control",
"Pollination", "Seed dispersal"),
z = c(NaN,NaN,NaN,NaN,NaN,NaN,NaN),
signif = c("Benchmark","Benchmark","Benchmark","Benchmark",
"Benchmark","Benchmark","Benchmark"))
z_score_tot<- rbind (z_score_amount, sd_bw) %>% rename("Output" = "signif")
z_score_tot$management <- factor(z_score_tot$management, levels = c("E", "SE", "M", "SI","I","IM")) #change order of factors
z_score_tot$services <- factor(z_score_tot$services, levels = c("Seed dispersal", "Pollination","Pest control",
"Crop production", "Crop damage",
"Butterfly watching","Bird watching"))
#Plot
library(ggtext)
color_services<-tibble(
services = unique(direct_ES$services),
#color = c('#1b9e77','#d95f02','#7570b3','#e7298a','#2c7fb8','#e6ab02','#a6761d')),
color = c('#e7298a','#e6ab02','#7570b3','#2c7fb8','#a6761d','#d95f02','#1b9e77'))
direct_ES<- read.csv("Data/direct_ES_sim_CP.csv", sep =",") %>% filter(iteration == "Emp"|iteration%in%ite)
direct_ES$management <- factor(direct_ES$management, levels = c("E", "SE", "M", "SI","I","IM")) #change order of factors
#upload and prepare dataframe
ite = 1:500
direct_ES<- read.csv("Data/direct_ES_sim_CP.csv", sep =",") %>% filter(iteration == "Emp"|iteration%in%ite)
direct_ES$management <- factor(direct_ES$management, levels = c("E", "SE", "M", "SI","I","IM")) #change order of factors
#Plot
library(ggtext)
color_services<-tibble(
services = unique(direct_ES$services),
#color = c('#1b9e77','#d95f02','#7570b3','#e7298a','#2c7fb8','#e6ab02','#a6761d')),
color = c('#e7298a','#e6ab02','#7570b3','#2c7fb8','#a6761d','#d95f02','#1b9e77'))
ggplot(z_score_tot, aes(management, services, fill= Output)) +
geom_tile(color = "black")+
scale_fill_manual(values = c("red","ivory1","ivory1"),
labels = c("Lower than random",
"No difference",
"Benchmark")) +
labs(x='Habitat Management', y="Ecosystem (dis)services")+
theme_minimal()+
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),
axis.text.y = element_text(size=13,  color = color_services$color[match(levels(z_score_tot$services), color_services$services)]),
# axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =15),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))   +
geom_segment(data = filter(z_score_tot, Output == "Benchmark"),
aes(x = as.numeric(management) - 0.5,
y = as.numeric(services) - 0.5,
xend = as.numeric(management) + 0.5,
yend = as.numeric(services) + 0.5),
color = "black", size = 0.5)
pdf("Graphs/z_score_amount_CP.pdf", width = 12, height = 7)
ggplot(z_score_tot, aes(management, services, fill= Output)) +
geom_tile(color = "black")+
scale_fill_manual(values = c("red","ivory1","ivory1"),
labels = c("Lower than random",
"No difference",
"Benchmark")) +
labs(x='Habitat Management', y="Ecosystem (dis)services")+
theme_minimal()+
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),
axis.text.y = element_text(size=13,  color = color_services$color[match(levels(z_score_tot$services), color_services$services)]),
# axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =15),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))   +
geom_segment(data = filter(z_score_tot, Output == "Benchmark"),
aes(x = as.numeric(management) - 0.5,
y = as.numeric(services) - 0.5,
xend = as.numeric(management) + 0.5,
yend = as.numeric(services) + 0.5),
color = "black", size = 0.5)
dev.off()
#Plot
library(ggtext)
color_services<-tibble(
services = unique(direct_ES$services),
#color = c('#1b9e77','#d95f02','#7570b3','#e7298a','#2c7fb8','#e6ab02','#a6761d')),
color = c('#e7298a','#e6ab02','#7570b3','#2c7fb8','#a6761d','#d95f02','#1b9e77'))
pdf("Graphs/z_score_amount_CP.pdf", width = 12, height = 7)
ggplot(z_score_tot, aes(management, services, fill= Output)) +
geom_tile(color = "black")+
scale_fill_manual(values = c("red","ivory1","ivory1"),
labels = c("Lower than random",
"No difference",
"Benchmark")) +
labs(x='Habitat Management', y="Ecosystem (dis)services")+
theme_minimal()+
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),
axis.text.y = element_text(size=13,  color = color_services$color[match(levels(z_score_tot$services), color_services$services)]),
# axis.text = element_text(size=15, color='black'),
axis.text.x= element_text(size =15),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))   +
geom_segment(data = filter(z_score_tot, Output == "Benchmark"),
aes(x = as.numeric(management) - 0.5,
y = as.numeric(services) - 0.5,
xend = as.numeric(management) + 0.5,
yend = as.numeric(services) + 0.5),
color = "black", size = 0.5)
dev.off()
View(amount_ES_z_score)
#Summary averages (across management scenario)
averages_prop <- amount_ES_z_score %>%
mutate(times_emp = amount_shuff_mean/ratio_change) %>%  #calculate number of times lower the empirical respect the simulated (already averaged across iterations)
ungroup() %>% group_by(services) %>%
summarise(average_ratio_emp = mean(ratio_change),
sd_ratio_emp = sd(ratio_change), n=n(),
average_ratio_shuff = mean(amount_shuff_mean),#average of prop in simulated across management scenario
sd_ratio_shuff = mean(amount_shuff_sd),#sd of prop in simulated across management scenario
ave_times_emp = mean(times_emp) #average times lower in the empirical compared null across management scenario
)
#Summary averages (across management scenario)
averages_ratio <- amount_ES_z_score %>%
mutate(times_emp = amount_shuff_mean/ratio_change) %>%  #calculate number of times lower the empirical respect the simulated (already averaged across iterations)
ungroup() %>% group_by(services) %>%
summarise(average_ratio_emp = mean(ratio_change),
sd_ratio_emp = sd(ratio_change), n=n(),
average_ratio_shuff = mean(amount_shuff_mean),#average of prop in simulated across management scenario
sd_ratio_shuff = mean(amount_shuff_sd),#sd of prop in simulated across management scenario
ave_times_emp = mean(times_emp) #average times lower in the empirical compared null across management scenario
)
View(averages_ratio)
