install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("manlius/muxViz")
remove.packages("muxViz")
devtools::install_github("manlius/muxViz")
library(htmltools)
library(htmltools)
install.packages("htmltools")
detach("package:htmltools", unload = TRUE)
install.packages("htmltools")
devtools::install_github("manlius/muxViz")
install.packages("htmltools")
devtools::install_github("manlius/muxViz")
library(emln)#multilayer package
library(emln)#multilayer package
library(readr)
library(ggplot2)
setwd("D:/Trabajo/Papers/Norwood_Farm/norwood-ecosystem-services-main_Tinio")
edges <- tibble(read.csv("Data/elist_nore.csv"))
###  1) Create list of link lists to use as input in create_multilayer_network function
edges_format<-edges %>% rename("from"="lower") %>% rename("to"="upper") %>%
mutate(weight =1)# weight is presence/absence
list_of_layers<- split(edges_format, edges_format$habitat)
list_of_layers <- lapply(list_of_layers, function(sub_df) subset(sub_df, select = -habitat))#remove habitat from the edge list to keep the format (from, to, weight)
### 2) Create input with layer's attributes (habitat names)
layer_attrib <- tibble(layer_id=1:11,
layer_name=c('CP','GM','LP', 'LU','MH','NH', 'NL','PP','RG',
'SF','WD'))
### 3) Create input with attributes of physical nodes (taxon and ecosystem services provided)
nodes <- tibble(read.csv("Data/nodes.csv")) #previous dataframe containing node's information
## add potential direct ES to species according to the guild group
services_pre <- tibble(read.csv("Data/service_edgelist.csv", sep = ";")) %>%  #data frame without antagonist
rename (node_name = lower, ESS = upper) %>%
pivot_wider(names_from = ESS, values_from = weight, values_fill = 0) %>%
left_join(nodes, by = "node_name") %>% select(-node_id)  #list of ecosystem (dis)services that each species provides
#remove duplicate rows containing butterflies in 02fv (because they are a separated guild)
list.butt.flw<- c("02FV.Maniola jurtina","02FV.Pieris brassicae","02FV.Polyommatus icarus",
"02FV.Pyronia tithonus") #list of butterflies
services<-services_pre %>% filter(!(node_name %in%list.butt.flw)) #remove dupicated butt from dataset of services
## we include species that not directly provide E(D)S
phy_node_atr_tax_es<- dplyr::left_join(nodes, services, by = "node_name") %>% select(-node_id, -taxon.y) %>%
rename("taxon" = "taxon.x") %>%
replace(is.na(.), 0) %>% rowwise() %>%  #we assigned "0" to species that we don't know if provide ES
mutate(ES = rowSums(across(c("Crop production","Pollination","Pest control",
"Seed dispersal", "Butterfly watching", "Bird watching"))),
DES = rowSums(across(c("Crop damage"))))
### Create multilayer object
Norwood_farm<-create_multilayer_network(list_of_layers = list_of_layers, bipartite = F, directed = T,
interlayer_links = NULL, layer_attributes = layer_attrib, state_node_attributes = NULL, physical_node_attributes = phy_node_atr_tax_es)
view(Norwood_farm$layers)
view(Norwood_farm$nodes)
View(services_pre)
## add potential direct ES to species according to the guild group
services_pre <- tibble(read.csv("Data/service_edgelist.csv", sep = ";")) %>%  #data frame without antagonist
rename (node_name = lower, ESS = upper) %>%
pivot_wider(names_from = ESS, values_from = weight, values_fill = 0) %>%
left_join(nodes, by = "node_name") %>% select(-node_id)  #list of ecosystem (dis)services that each species provides
View(services_pre)
#remove duplicate rows containing butterflies in 02fv (because they are a separated guild)
list.butt.flw<- c("02FV.Maniola jurtina","02FV.Pieris brassicae","02FV.Polyommatus icarus",
"02FV.Pyronia tithonus") #list of butterflies
services<-services_pre %>% filter(!(node_name %in%list.butt.flw)) #remove dupicated butt from dataset of services
## we include species that not directly provide E(D)S
phy_node_atr_tax_es<- dplyr::left_join(nodes, services, by = "node_name") %>% select(-node_id, -taxon.y) %>%
rename("taxon" = "taxon.x") %>%
replace(is.na(.), 0) %>% rowwise() %>%  #we assigned "0" to species that we don't know if provide ES
mutate(ES = rowSums(across(c("Crop production","Pollination","Pest control",
"Seed dispersal", "Butterfly watching", "Bird watching"))),
DES = rowSums(across(c("Crop damage"))))
### Create multilayer object
Norwood_farm<-create_multilayer_network(list_of_layers = list_of_layers, bipartite = F, directed = T,
interlayer_links = NULL, layer_attributes = layer_attrib, state_node_attributes = NULL, physical_node_attributes = phy_node_atr_tax_es)
view(Norwood_farm$nodes)
saveRDS(Norwood_farm, file="Norwood_farm.RData")
species_list<-Norwood_farm$nodes %>% select(node_id,node_name,taxon) %>%
filter(taxon != "Crop") %>%
separate(node_name, c("trophic_lower", "node_name"),  "[A-Z]\\.") %>%
select(-trophic_lower)
write.csv(species_list,"Data/species_list.csv", row.names= FALSE)
