install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("manlius/muxViz")
remove.packages("muxViz")
devtools::install_github("manlius/muxViz")
library(htmltools)
library(htmltools)
install.packages("htmltools")
detach("package:htmltools", unload = TRUE)
install.packages("htmltools")
devtools::install_github("manlius/muxViz")
install.packages("htmltools")
devtools::install_github("manlius/muxViz")
library(emln)#multilayer package
#load packages
library(igraph)
library(dplyr)
library(tidyverse)
library(emln)#multilayer package
library(readr)
library(ggplot2)
library(cowplot)
setwd("/Users/agustin/Desktop/Papers/Norwood_farm/Norwood_Tinio")
source("/Users/agustin/Desktop/Papers/Norwood_farm/Norwood_Tinio/Exploratory/Scenario_ES/functions.R")
#upload and prepare dataframe
direct_ES<- read.csv("Data/direct_ES_sim_CP.csv", sep =",")
direct_ES$management <- factor(direct_ES$management, levels = c("E", "SE", "M", "SI","I")) #change order of factors
#Empirical
Prop_dir_Emp<-direct_ES %>% filter(iteration == "Emp") %>% group_by(management,services) %>%
mutate(tot = n()) %>% ungroup() %>%
group_by(services) %>%
mutate(prop = tot/max(tot)) %>%  #prop of E(D)S rtained across habitat management
dplyr::select(management,services,tot,prop) %>%
unique() %>% rename("Prop_mean" = "prop")
# adjust the extreme values according to the beta conditions and remove extensive scenario
Prop_dir_Emp$Prop_mean <- ifelse(Prop_dir_Emp$Prop_mean == 0, 0.000001,
ifelse(Prop_dir_Emp$Prop_mean == 1, 0.9999999, Prop_dir_Emp$Prop_mean))
# Value of empirical
values_emp<- Prop_dir_Emp %>% filter (management == "E" ) %>% select(management,tot)
#Simulations
Prop_dir_null<-direct_ES %>% filter(!(iteration == "Emp" & management !="E"))%>% group_by(management,iteration,services) %>%
mutate(tot = n(),
tot_emp = case_when( #Values of denominator
services == "Crop production"~ 6,
services == "Pollination" ~ 117,
services == "Crop damage"~ 15,
services == "Pest control"~ 28,
services == "Seed dispersal" ~ 5,
services == "Butterfly watching"~ 16,
services == "Bird watching"~ 7 )) %>% ungroup() %>%
group_by(services) %>%
mutate(prop = tot/tot_emp) %>%  #prop of E(D)S rtained across habitat management per iteration and habitat management
dplyr::select(management,iteration,services,prop) %>%
unique() %>% rename("Prop_mean" = "prop")
# adjust the extreme values according to the beta conditions and remove extensive scenario
Prop_dir_null$Prop_mean <- ifelse(Prop_dir_null$Prop_mean == 0, 0.000001,
ifelse(Prop_dir_null$Prop_mean == 1, 0.9999999, Prop_dir_null$Prop_mean))
###  - Models
library("glmmTMB")
library("stats4")
library("bbmle")
library(emmeans)
library(car)
#Plot combination of treatments level
iterations_post_hocs<-read.csv("Data/iterations_post_hocs_direct_CP.csv", sep =",")
#Post hoc (each combination of management )
p_contrast_man<-NULL
for (i in unique(iterations_post_hocs$contrast)){
#filter data
post_comb<-iterations_post_hocs %>% filter(contrast == i) #filter per combination of treatmens (simulated data)
post_emp<-man_pairs_emp %>% filter(contrast == i) #filter per combination of treatmens (empirical)
#test
greater <- sum(post_comb$estimate >  post_emp$estimate)
less <- sum(post_comb$estimate  <  post_emp$estimate)
p_comb<- 2 * min(greater, less) / 500 #calculate manually t-test two tailed
#storage
p_contrast_man <- rbind(p_contrast_man,
tibble(contrast = i,
p_value = p_comb))
}
#empirical
Prop_dir_emp<-glmmTMB (Prop_mean ~ management + services, family=beta_family(link="logit"), data = Prop_dir_Emp)
par_emp<-Anova(Prop_dir_emp)
post_man_emp <-emmeans(Prop_dir_emp, ~ management) #posthoc management
man_pairs_emp <- as.data.frame(pairs(post_man_emp))
# Compare between empirical and simulations
iterations_coefficients<-read.csv("Data/iterations_coefficients_direct_CP.csv", sep =",")
#General
greater <- sum(iterations_coefficients$chisqr_man > par_emp[1,1])
less <- sum(iterations_coefficients$chisqr_man  < par_emp[1,1])
p_management<- 2 * min(greater, less) / 500 #calculate manually t-test two tailed
#Merge simulated and empirical
iterations_sim_empirical<-rbind(iterations_coefficients,tibble(
iteration = "Empirical",
chisqr_man = par_emp$Chisq[1],
chisqr_ser = par_emp$Chisq[2],
pval_man = par_emp[1,3],
pval_ser = par_emp[2,3],
)) %>% mutate(iteration = ifelse(iteration == "Empirical", "Empirical","Null")) %>% rename("Type "= "iteration")
#Plot general
iterations_sim_empirical<-iterations_coefficients %>% mutate(type = "Null")
iterations_sim_empirical %>% ggplot(aes(x = chisqr_man, fill= type))+
geom_density(alpha = 0.6)+
geom_vline(xintercept = par_emp[1,1], linetype = "dashed", color = "#FB3B1E") + #line represting rsquared empirical
labs(x= "Statistic", y="Density")+
theme_classic()+
theme(panel.grid = element_blank(),
panel.border = element_rect(color = "black",fill = NA,size = 1),
panel.spacing = unit(0.5, "cm", data = NULL),
axis.text = element_text(size=15, color='black'),
axis.title = element_text(size=17, color='black'),
axis.line = element_blank(),
legend.text.align = 0,
legend.title =  element_text(size = 13, color = "black"),
legend.text = element_text(size = 11))
#Plot combination of treatments level
iterations_post_hocs<-read.csv("Data/iterations_post_hocs_direct_CP.csv", sep =",")
#Post hoc (each combination of management )
p_contrast_man<-NULL
for (i in unique(iterations_post_hocs$contrast)){
#filter data
post_comb<-iterations_post_hocs %>% filter(contrast == i) #filter per combination of treatmens (simulated data)
post_emp<-man_pairs_emp %>% filter(contrast == i) #filter per combination of treatmens (empirical)
#test
greater <- sum(post_comb$estimate >  post_emp$estimate)
less <- sum(post_comb$estimate  <  post_emp$estimate)
p_comb<- 2 * min(greater, less) / 500 #calculate manually t-test two tailed
#storage
p_contrast_man <- rbind(p_contrast_man,
tibble(contrast = i,
p_value = p_comb))
}
p_contrast_man
